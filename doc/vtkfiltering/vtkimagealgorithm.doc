/*!
\page vtkfiltering_vtkimagealgorithm vtkImageAlgorithm

<p>
Section: \ref sec_vtkfiltering "Visualization Toolkit Filtering Classes"
\section Usage
 vtkImageAlgorithm is a filter superclass that hides much of the 
 pipeline  complexity. It handles breaking the pipeline execution 
 into smaller extents so that the vtkImageData limits are observed. It 
 also provides support for multithreading. If you don't need any of this
 functionality, consider using vtkSimpleImageToImageFilter instead.
 .SECTION See also
 vtkSimpleImageToImageFilter

To create an instance of class vtkImageAlgorithm, simply
invoke its constructor as follows
\verbatim
  obj = vtkImageAlgorithm
\endverbatim
\section Methods
The class vtkImageAlgorithm has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkImageAlgorithm class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkImageAlgorithm = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkImageAlgorithm = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>vtkImageData = obj.GetOutput ()</tt> -  Get the output data object for a port on this algorithm.
 </LI>
<LI>  <tt>vtkImageData = obj.GetOutput (int )</tt> -  Get the output data object for a port on this algorithm.
 </LI>
<LI>  <tt>obj.SetOutput (vtkDataObject d)</tt> -  Get the output data object for a port on this algorithm.
 </LI>
<LI>  <tt>obj.SetInput (vtkDataObject )</tt> -  Set an input of this algorithm. You should not override these
 methods because they are not the only way to connect a pipeline.
 Note that these methods support old-style pipeline connections.
 When writing new code you should use the more general
 vtkAlgorithm::SetInputConnection().  These methods transform the
 input index to the input port index, not an index of a connection
 within a single port.
 </LI>
<LI>  <tt>obj.SetInput (int , vtkDataObject )</tt> -  Set an input of this algorithm. You should not override these
 methods because they are not the only way to connect a pipeline.
 Note that these methods support old-style pipeline connections.
 When writing new code you should use the more general
 vtkAlgorithm::SetInputConnection().  These methods transform the
 input index to the input port index, not an index of a connection
 within a single port.
 </LI>
<LI>  <tt>vtkDataObject = obj.GetInput (int port)</tt>
 </LI>
<LI>  <tt>vtkDataObject = obj.GetInput ()</tt>
 </LI>
<LI>  <tt>vtkImageData = obj.GetImageDataInput (int port)</tt>
 </LI>
<LI>  <tt>obj.AddInput (vtkDataObject )</tt> -  Add an input of this algorithm.  Note that these methods support
 old-style pipeline connections.  When writing new code you should
 use the more general vtkAlgorithm::AddInputConnection().  See
 SetInput() for details.
 </LI>
<LI>  <tt>obj.AddInput (int , vtkDataObject )</tt> -  Add an input of this algorithm.  Note that these methods support
 old-style pipeline connections.  When writing new code you should
 use the more general vtkAlgorithm::AddInputConnection().  See
 SetInput() for details.
 </LI>
</UL>
*/
