/*!
\page vtkfiltering_vtksimpleimagetoimagefilter vtkSimpleImageToImageFilter

<p>
Section: \ref sec_vtkfiltering "Visualization Toolkit Filtering Classes"
\section Usage
 vtkSimpleImageToImageFilter is a filter which aims to avoid much
 of the complexity associated with vtkImageAlgorithm (i.e.
 support for pieces, multi-threaded operation). If you need to write
 a simple image-image filter which operates on the whole input, use
 this as the superclass. The subclass has to provide only an execute
 method which takes input and output as arguments. Memory allocation
 is handled in vtkSimpleImageToImageFilter. Also, you are guaranteed to
 have a valid input in the Execute(input, output) method. By default, 
 this filter
 requests it's input's whole extent and copies the input's information
 (spacing, whole extent etc...) to the output. If the output's setup
 is different (for example, if it performs some sort of sub-sampling),
 ExecuteInformation has to be overwritten. As an example of how this
 can be done, you can look at vtkImageShrink3D::ExecuteInformation.
 For a complete example which uses templates to support generic data
 types, see vtkSimpleImageToImageFilter.

To create an instance of class vtkSimpleImageToImageFilter, simply
invoke its constructor as follows
\verbatim
  obj = vtkSimpleImageToImageFilter
\endverbatim
\section Methods
The class vtkSimpleImageToImageFilter has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkSimpleImageToImageFilter class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkSimpleImageToImageFilter = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkSimpleImageToImageFilter = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
</UL>
*/
