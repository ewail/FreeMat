/*!
\page vtkfiltering_vtkgenericpointiterator vtkGenericPointIterator

<p>
Section: \ref sec_vtkfiltering "Visualization Toolkit Filtering Classes"
\section Usage
 This class (and subclasses) are used to iterate over points. Use it
 only in conjunction with vtkGenericDataSet (i.e., the adaptor framework).

 Typical use is:
 <pre>
 vtkGenericDataSet *dataset;
 vtkGenericPointIterator *it = dataset->NewPointIterator();
 for (it->Begin(); !it->IsAtEnd(); it->Next());
   {
   x=it->GetPosition();
   }
 </pre>

To create an instance of class vtkGenericPointIterator, simply
invoke its constructor as follows
\verbatim
  obj = vtkGenericPointIterator
\endverbatim
\section Methods
The class vtkGenericPointIterator has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkGenericPointIterator class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt> -  Standard VTK construction and type macros.
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt> -  Standard VTK construction and type macros.
 </LI>
<LI>  <tt>vtkGenericPointIterator = obj.NewInstance ()</tt> -  Standard VTK construction and type macros.
 </LI>
<LI>  <tt>vtkGenericPointIterator = obj.SafeDownCast (vtkObject o)</tt> -  Standard VTK construction and type macros.
 </LI>
<LI>  <tt>obj.Begin ()</tt> -  Move iterator to first position if any (loop initialization).
 </LI>
<LI>  <tt>int = obj.IsAtEnd ()</tt> -  Is the iterator at the end of traversal?
 </LI>
<LI>  <tt>obj.Next ()</tt> -  Move the iterator to the next position in the list.
 \pre not_off: !IsAtEnd()
 </LI>
<LI>  <tt>obj.GetPosition (double x[3])</tt> -  Get the coordinates of the point at the current iterator position.
 \pre not_off: !IsAtEnd()
 \pre x_exists: x!=0
 </LI>
<LI>  <tt>vtkIdType = obj.GetId ()</tt> -  Return the unique identifier for the point, could be non-contiguous.
 \pre not_off: !IsAtEnd()
 </LI>
</UL>
*/
