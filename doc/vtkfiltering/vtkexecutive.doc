/*!
\page vtkfiltering_vtkexecutive vtkExecutive

<p>
Section: \ref sec_vtkfiltering "Visualization Toolkit Filtering Classes"
\section Usage
 vtkExecutive is the superclass for all pipeline executives in VTK.
 A VTK executive is responsible for controlling one instance of
 vtkAlgorithm.  A pipeline consists of one or more executives that
 control data flow.  Every reader, source, writer, or data
 processing algorithm in the pipeline is implemented in an instance
 of vtkAlgorithm.

To create an instance of class vtkExecutive, simply
invoke its constructor as follows
\verbatim
  obj = vtkExecutive
\endverbatim
\section Methods
The class vtkExecutive has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkExecutive class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkExecutive = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkExecutive = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>vtkAlgorithm = obj.GetAlgorithm ()</tt> -  Get the algorithm to which this executive has been assigned.
 </LI>
<LI>  <tt>int = obj.Update ()</tt> -  Bring the algorithm's outputs up-to-date.  Returns 1 for success
 and 0 for failure.
 </LI>
<LI>  <tt>int = obj.Update (int port)</tt> -  Bring the algorithm's outputs up-to-date.  Returns 1 for success
 and 0 for failure.
 </LI>
<LI>  <tt>int = obj.GetNumberOfInputPorts ()</tt> -  Get the number of input/output ports for the algorithm associated
 with this executive.  Returns 0 if no algorithm is set.
 </LI>
<LI>  <tt>int = obj.GetNumberOfOutputPorts ()</tt> -  Get the number of input/output ports for the algorithm associated
 with this executive.  Returns 0 if no algorithm is set.
 </LI>
<LI>  <tt>int = obj.GetNumberOfInputConnections (int port)</tt> -  Get the number of input connections on the given port.
 </LI>
<LI>  <tt>vtkInformation = obj.GetOutputInformation (int port)</tt> -  Get the pipeline information object for the given output port.
 </LI>
<LI>  <tt>vtkInformationVector = obj.GetOutputInformation ()</tt> -  Get the pipeline information object for all output ports.
 </LI>
<LI>  <tt>vtkInformation = obj.GetInputInformation (int port, int connection)</tt> -  Get the pipeline information for the given input connection.
 </LI>
<LI>  <tt>vtkInformationVector = obj.GetInputInformation (int port)</tt> -  Get the pipeline information vectors for the given input port.
 </LI>
<LI>  <tt>vtkExecutive = obj.GetInputExecutive (int port, int connection)</tt> -  Get the executive managing the given input connection.
 </LI>
<LI>  <tt>vtkDataObject = obj.GetOutputData (int port)</tt> -  Get/Set the data object for an output port of the algorithm.
 </LI>
<LI>  <tt>obj.SetOutputData (int port, vtkDataObject , vtkInformation info)</tt> -  Get/Set the data object for an output port of the algorithm.
 </LI>
<LI>  <tt>obj.SetOutputData (int port, vtkDataObject )</tt> -  Get/Set the data object for an output port of the algorithm.
 </LI>
<LI>  <tt>vtkDataObject = obj.GetInputData (int port, int connection)</tt> -  Get the data object for an input port of the algorithm.
 </LI>
<LI>  <tt>vtkAlgorithmOutput = obj.GetProducerPort (vtkDataObject )</tt> -  Get the output port that produces the given data object.
 </LI>
<LI>  <tt>obj.SetSharedOutputInformation (vtkInformationVector outInfoVec)</tt> -  Set a pointer to an outside instance of input or output
 information vectors.  No references are held to the given
 vectors, and setting this does not change the executive object
 modification time.  This is a preliminary interface to use in
 implementing filters with internal pipelines, and may change
 without notice when a future interface is created.
 </LI>
<LI>  <tt>obj.Register (vtkObjectBase o)</tt> -  Participate in garbage collection.
 </LI>
<LI>  <tt>obj.UnRegister (vtkObjectBase o)</tt> -  Participate in garbage collection.
 </LI>
</UL>
*/
