/*!
\page vtkfiltering_vtkuniformgrid vtkUniformGrid

<p>
Section: \ref sec_vtkfiltering "Visualization Toolkit Filtering Classes"
\section Usage
 vtkUniformGrid is a subclass of vtkImageData. In addition to all
 the image data functionality, it supports blanking.

To create an instance of class vtkUniformGrid, simply
invoke its constructor as follows
\verbatim
  obj = vtkUniformGrid
\endverbatim
\section Methods
The class vtkUniformGrid has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkUniformGrid class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt> -  Construct an empty uniform grid.
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt> -  Construct an empty uniform grid.
 </LI>
<LI>  <tt>vtkUniformGrid = obj.NewInstance ()</tt> -  Construct an empty uniform grid.
 </LI>
<LI>  <tt>vtkUniformGrid = obj.SafeDownCast (vtkObject o)</tt> -  Construct an empty uniform grid.
 </LI>
<LI>  <tt>obj.CopyStructure (vtkDataSet ds)</tt> -  Copy the geometric and topological structure of an input image data
 object.
 </LI>
<LI>  <tt>int = obj.GetDataObjectType ()</tt> -  Return what type of dataset this is.
 </LI>
<LI>  <tt>vtkCell = obj.GetCell (vtkIdType cellId)</tt> -  Standard vtkDataSet API methods. See vtkDataSet for more information.
 </LI>
<LI>  <tt>obj.GetCell (vtkIdType cellId, vtkGenericCell cell)</tt> -  Standard vtkDataSet API methods. See vtkDataSet for more information.
 </LI>
<LI>  <tt>int = obj.GetCellType (vtkIdType cellId)</tt> -  Standard vtkDataSet API methods. See vtkDataSet for more information.
 </LI>
<LI>  <tt>obj.GetCellPoints (vtkIdType cellId, vtkIdList ptIds)</tt> -  Standard vtkDataSet API methods. See vtkDataSet for more information.
 </LI>
<LI>  <tt>obj.GetPointCells (vtkIdType ptId, vtkIdList cellIds)</tt> -  Standard vtkDataSet API methods. See vtkDataSet for more information.
 </LI>
<LI>  <tt>obj.Initialize ()</tt> -  Standard vtkDataSet API methods. See vtkDataSet for more information.
 </LI>
<LI>  <tt>int = obj.GetMaxCellSize ()</tt> -  Standard vtkDataSet API methods. See vtkDataSet for more information.
 </LI>
<LI>  <tt>obj.ShallowCopy (vtkDataObject src)</tt> -  Shallow and Deep copy.
 </LI>
<LI>  <tt>obj.DeepCopy (vtkDataObject src)</tt> -  Shallow and Deep copy.
 </LI>
<LI>  <tt>obj.BlankPoint (vtkIdType ptId)</tt> -  Methods for supporting blanking of cells. Blanking turns on or off
 points in the structured grid, and hence the cells connected to them.
 These methods should be called only after the dimensions of the
 grid are set.
 </LI>
<LI>  <tt>obj.UnBlankPoint (vtkIdType ptId)</tt> -  Methods for supporting blanking of cells. Blanking turns on or off
 points in the structured grid, and hence the cells connected to them.
 These methods should be called only after the dimensions of the
 grid are set.
 </LI>
<LI>  <tt>obj.BlankCell (vtkIdType ptId)</tt> -  Methods for supporting blanking of cells. Blanking turns on or off
 cells in the structured grid.
 These methods should be called only after the dimensions of the
 grid are set.
 </LI>
<LI>  <tt>obj.UnBlankCell (vtkIdType ptId)</tt> -  Methods for supporting blanking of cells. Blanking turns on or off
 cells in the structured grid.
 These methods should be called only after the dimensions of the
 grid are set.
 </LI>
<LI>  <tt>vtkUnsignedCharArray = obj.GetPointVisibilityArray ()</tt> -  Get the array that defines the blanking (visibility) of each point.
 </LI>
<LI>  <tt>obj.SetPointVisibilityArray (vtkUnsignedCharArray pointVisibility)</tt> -  Set an array that defines the (blanking) visibility of the points
 in the grid. Make sure that length of the visibility array matches
 the number of points in the grid.
 </LI>
<LI>  <tt>vtkUnsignedCharArray = obj.GetCellVisibilityArray ()</tt> -  Get the array that defines the blanking (visibility) of each cell.
 </LI>
<LI>  <tt>obj.SetCellVisibilityArray (vtkUnsignedCharArray pointVisibility)</tt> -  Set an array that defines the (blanking) visibility of the cells
 in the grid. Make sure that length of the visibility array matches
 the number of points in the grid.
 </LI>
<LI>  <tt>char = obj.IsPointVisible (vtkIdType ptId)</tt> -  Return non-zero value if specified point is visible.
 These methods should be called only after the dimensions of the
 grid are set.
 </LI>
<LI>  <tt>char = obj.IsCellVisible (vtkIdType cellId)</tt> -  Return non-zero value if specified cell is visible.
 These methods should be called only after the dimensions of the
 grid are set.
 </LI>
<LI>  <tt>char = obj.GetPointBlanking ()</tt> -  Returns 1 if there is any visibility constraint on the points,
 0 otherwise.
 </LI>
<LI>  <tt>char = obj.GetCellBlanking ()</tt> -  Returns 1 if there is any visibility constraint on the cells,
 0 otherwise.
 </LI>
<LI>  <tt>vtkImageData = obj.NewImageDataCopy ()</tt>
 </LI>
</UL>
*/
