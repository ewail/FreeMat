/*!
\page vtkfiltering_vtkpointsettopointsetfilter vtkPointSetToPointSetFilter

<p>
Section: \ref sec_vtkfiltering "Visualization Toolkit Filtering Classes"
\section Usage
 vtkPointSetToPointSetFilter is an abstract filter class whose subclasses
 take as input a point set and generates a point set on output.  At a
 minimum, the concrete subclasses of vtkPointSetToPointSetFilter modify
 their point coordinates. They never modify their topological form,
 however.

 This is an abstract filter type. What that means is that the output of the
 filter is an abstract type (i.e., vtkPointSet), no matter what the input
 of the filter is. This can cause problems connecting together filters due
 to the change in dataset type. (For example, in a series of filters
 processing vtkPolyData, when a vtkPointSetToPointSetFilter or subclass is
 introduced into the pipeline, if the filter downstream of it takes
 vtkPolyData as input, the pipeline connection cannot be made.) To get
 around this problem, use one of the convenience methods to return a
 concrete type (e.g., vtkGetPolyDataOutput(), GetStructuredGridOutput(),
 etc.).

To create an instance of class vtkPointSetToPointSetFilter, simply
invoke its constructor as follows
\verbatim
  obj = vtkPointSetToPointSetFilter
\endverbatim
\section Methods
The class vtkPointSetToPointSetFilter has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkPointSetToPointSetFilter class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkPointSetToPointSetFilter = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkPointSetToPointSetFilter = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetInput (vtkPointSet input)</tt> -  Specify the input data or filter.
 </LI>
<LI>  <tt>vtkPointSet = obj.GetInput ()</tt> -  Get the input data or filter.
 </LI>
<LI>  <tt>vtkPointSet = obj.GetOutput ()</tt> -  Get the output of this filter. If output is NULL, then input hasn't been
 set, which is necessary for abstract filter objects.
 </LI>
<LI>  <tt>vtkPointSet = obj.GetOutput (int idx)</tt> -  Get the output as vtkPolyData. Performs run-time checking.
 </LI>
<LI>  <tt>vtkPolyData = obj.GetPolyDataOutput ()</tt> -  Get the output as vtkPolyData. Performs run-time checking.
 </LI>
<LI>  <tt>vtkStructuredGrid = obj.GetStructuredGridOutput ()</tt> -  Get the output as vtkStructuredGrid. Performs run-time checking.
 </LI>
<LI>  <tt>vtkUnstructuredGrid = obj.GetUnstructuredGridOutput ()</tt> -  Get the output as vtkUnstructuredGrid. Performs run-time checking.
 </LI>
<LI>  <tt>obj.ComputeInputUpdateExtents (vtkDataObject output)</tt> -  By default copy the output update extent to the input
 </LI>
</UL>
*/
