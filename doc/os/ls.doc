/*!
\page os_ls LS List Files Function

<p>
Section: \ref sec_os "Operating System Functions"
\section Usage
Lists the files in a directory or directories.  The general syntax for its use is
\verbatim
  ls('dirname1','dirname2',...,'dirnameN')
\endverbatim
but this can also be expressed as
\verbatim
  ls 'dirname1' 'dirname2' ... 'dirnameN'
\endverbatim
or 
\verbatim
  ls dirname1 dirname2 ... dirnameN
\endverbatim
For compatibility with some environments, the function <tt>dir</tt> can also be used instead of <tt>ls</tt>.  Generally speaking, <tt>dirname</tt> is any string that would be accepted by the underlying OS as a valid directory name.  For example, on most systems, <tt>'.'</tt> refers to the current directory, and <tt>'..'</tt> refers to the parent directory.  Also, depending on the OS, it may be necessary to ``escape'' the directory seperators.  In particular, if directories are seperated with the backwards-slash character <tt>'\\'</tt>, then the path specification must use double-slashes <tt>'\\\\'</tt>. Two points worth mentioning about the <tt>ls</tt> function:
<UL>
<LI>  To get file-name completion to work at this time, you must use one of the first two forms of the command.
 </LI>
<LI>  If you want to capture the output of the <tt>ls</tt> command, use the <tt>system</tt> function instead.
 </LI>
</UL>

\section Example
First, we use the simplest form of the <tt>ls</tt> command, in which the directory name argument is given unquoted.

\if FRAGMENT
frag_os_ls_000.m
0
ls m*.m
\endif


\verbinclude frag_os_ls_000.m.out 

Next, we use the ``traditional'' form of the function call, using both the parenthesis and the quoted string.

\if FRAGMENT
frag_os_ls_001.m
0
ls('m*.m')
\endif


\verbinclude frag_os_ls_001.m.out 

In the third version, we use only the quoted string argument without parenthesis.  

\if FRAGMENT
frag_os_ls_002.m
0
ls 'm*.m'
\endif


\verbinclude frag_os_ls_002.m.out 

*/
