/*!
\page vtkio_vtkxmldataparser vtkXMLDataParser

<p>
Section: \ref sec_vtkio "Visualization Toolkit IO Classes"
\section Usage
 vtkXMLDataParser provides a subclass of vtkXMLParser that
 constructs a representation of an XML data format's file using
 vtkXMLDataElement to represent each XML element.  This
 representation is then used by vtkXMLReader and its subclasses to
 traverse the structure of the file and extract data.

To create an instance of class vtkXMLDataParser, simply
invoke its constructor as follows
\verbatim
  obj = vtkXMLDataParser
\endverbatim
\section Methods
The class vtkXMLDataParser has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkXMLDataParser class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkXMLDataParser = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkXMLDataParser = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>vtkXMLDataElement = obj.GetRootElement ()</tt> -  Get the root element from the XML document.
 </LI>
<LI>  <tt>obj.SetCompressor (vtkDataCompressor )</tt> -  Get/Set the compressor used to decompress binary and appended data
 after reading from the file.
 </LI>
<LI>  <tt>vtkDataCompressor = obj.GetCompressor ()</tt> -  Get/Set the compressor used to decompress binary and appended data
 after reading from the file.
 </LI>
<LI>  <tt>long = obj.GetWordTypeSize (int wordType)</tt> -  Get the size of a word of the given type.
 </LI>
<LI>  <tt>int = obj.Parse ()</tt> -  Parse the XML input and check that the file is safe to read.
 Returns 1 for okay, 0 for error.
 </LI>
<LI>  <tt>int = obj.GetAbort ()</tt> -  Get/Set flag to abort reading of data.  This may be set by a
 progress event observer.
 </LI>
<LI>  <tt>obj.SetAbort (int )</tt> -  Get/Set flag to abort reading of data.  This may be set by a
 progress event observer.
 </LI>
<LI>  <tt>float = obj.GetProgress ()</tt> -  Get/Set progress of reading data.  This may be checked by a
 progress event observer.
 </LI>
<LI>  <tt>obj.SetProgress (float )</tt> -  Get/Set progress of reading data.  This may be checked by a
 progress event observer.
 </LI>
<LI>  <tt>obj.SetAttributesEncoding (int )</tt> -  Get/Set the character encoding that will be used to set the attributes's
 encoding type of each vtkXMLDataElement created by this parser (i.e.,
 the data element attributes will use that encoding internally).
 If set to VTK_ENCODING_NONE (default), the attribute encoding type will
 not be changed and will default to the vtkXMLDataElement default encoding
 type (see vtkXMLDataElement::AttributeEncoding).
 </LI>
<LI>  <tt>int = obj.GetAttributesEncodingMinValue ()</tt> -  Get/Set the character encoding that will be used to set the attributes's
 encoding type of each vtkXMLDataElement created by this parser (i.e.,
 the data element attributes will use that encoding internally).
 If set to VTK_ENCODING_NONE (default), the attribute encoding type will
 not be changed and will default to the vtkXMLDataElement default encoding
 type (see vtkXMLDataElement::AttributeEncoding).
 </LI>
<LI>  <tt>int = obj.GetAttributesEncodingMaxValue ()</tt> -  Get/Set the character encoding that will be used to set the attributes's
 encoding type of each vtkXMLDataElement created by this parser (i.e.,
 the data element attributes will use that encoding internally).
 If set to VTK_ENCODING_NONE (default), the attribute encoding type will
 not be changed and will default to the vtkXMLDataElement default encoding
 type (see vtkXMLDataElement::AttributeEncoding).
 </LI>
<LI>  <tt>int = obj.GetAttributesEncoding ()</tt> -  Get/Set the character encoding that will be used to set the attributes's
 encoding type of each vtkXMLDataElement created by this parser (i.e.,
 the data element attributes will use that encoding internally).
 If set to VTK_ENCODING_NONE (default), the attribute encoding type will
 not be changed and will default to the vtkXMLDataElement default encoding
 type (see vtkXMLDataElement::AttributeEncoding).
 </LI>
<LI>  <tt>obj.CharacterDataHandler (string data, int length)</tt> -  If you need the text inside XMLElements, turn IgnoreCharacterData off.
 This method will then be called when the file is parsed, and the text
 will be stored in each XMLDataElement. VTK XML Readers store the 
 information elsewhere, so the default is to ignore it.
 </LI>
</UL>
*/
