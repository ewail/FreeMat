/*!
\page vtkio_vtkslacreader vtkSLACReader

<p>
Section: \ref sec_vtkio "Visualization Toolkit IO Classes"
\section Usage

 A reader for a data format used by Omega3p, Tau3p, and several other tools
 used at the Standford Linear Accelerator Center (SLAC).  The underlying
 format uses netCDF to store arrays, but also imposes several conventions
 to form an unstructured grid of elements.


To create an instance of class vtkSLACReader, simply
invoke its constructor as follows
\verbatim
  obj = vtkSLACReader
\endverbatim
\section Methods
The class vtkSLACReader has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkSLACReader class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkSLACReader = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkSLACReader = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>string = obj.GetMeshFileName ()</tt>
 </LI>
<LI>  <tt>obj.SetMeshFileName (string )</tt>
 </LI>
<LI>  <tt>obj.AddModeFileName (string fname)</tt> -  There may be one mode file (usually for actual modes) or multiple mode
 files (which usually actually represent time series).  These methods
 set and clear the list of mode files (which can be a single mode file).
 </LI>
<LI>  <tt>obj.RemoveAllModeFileNames ()</tt> -  There may be one mode file (usually for actual modes) or multiple mode
 files (which usually actually represent time series).  These methods
 set and clear the list of mode files (which can be a single mode file).
 </LI>
<LI>  <tt>int = obj.GetNumberOfModeFileNames ()</tt> -  There may be one mode file (usually for actual modes) or multiple mode
 files (which usually actually represent time series).  These methods
 set and clear the list of mode files (which can be a single mode file).
 </LI>
<LI>  <tt>string = obj.GetModeFileName (int idx)</tt> -  There may be one mode file (usually for actual modes) or multiple mode
 files (which usually actually represent time series).  These methods
 set and clear the list of mode files (which can be a single mode file).
 </LI>
<LI>  <tt>int = obj.GetReadInternalVolume ()</tt> -  If on, reads the internal volume of the data set.  Set to off by default.
 </LI>
<LI>  <tt>obj.SetReadInternalVolume (int )</tt> -  If on, reads the internal volume of the data set.  Set to off by default.
 </LI>
<LI>  <tt>obj.ReadInternalVolumeOn ()</tt> -  If on, reads the internal volume of the data set.  Set to off by default.
 </LI>
<LI>  <tt>obj.ReadInternalVolumeOff ()</tt> -  If on, reads the internal volume of the data set.  Set to off by default.
 </LI>
<LI>  <tt>int = obj.GetReadExternalSurface ()</tt> -  If on, reads the external surfaces of the data set.  Set to on by default.
 </LI>
<LI>  <tt>obj.SetReadExternalSurface (int )</tt> -  If on, reads the external surfaces of the data set.  Set to on by default.
 </LI>
<LI>  <tt>obj.ReadExternalSurfaceOn ()</tt> -  If on, reads the external surfaces of the data set.  Set to on by default.
 </LI>
<LI>  <tt>obj.ReadExternalSurfaceOff ()</tt> -  If on, reads the external surfaces of the data set.  Set to on by default.
 </LI>
<LI>  <tt>int = obj.GetReadMidpoints ()</tt> -  If on, reads midpoint information for external surfaces and builds
 quadratic surface triangles.  Set to on by default.
 </LI>
<LI>  <tt>obj.SetReadMidpoints (int )</tt> -  If on, reads midpoint information for external surfaces and builds
 quadratic surface triangles.  Set to on by default.
 </LI>
<LI>  <tt>obj.ReadMidpointsOn ()</tt> -  If on, reads midpoint information for external surfaces and builds
 quadratic surface triangles.  Set to on by default.
 </LI>
<LI>  <tt>obj.ReadMidpointsOff ()</tt> -  If on, reads midpoint information for external surfaces and builds
 quadratic surface triangles.  Set to on by default.
 </LI>
<LI>  <tt>int = obj.GetNumberOfVariableArrays ()</tt> -  Variable array selection.
 </LI>
<LI>  <tt>string = obj.GetVariableArrayName (int idx)</tt> -  Variable array selection.
 </LI>
<LI>  <tt>int = obj.GetVariableArrayStatus (string name)</tt> -  Variable array selection.
 </LI>
<LI>  <tt>obj.SetVariableArrayStatus (string name, int status)</tt> -  Variable array selection.
 </LI>
</UL>
*/
