/*!
\page vtkio_vtkrtxmlpolydatareader vtkRTXMLPolyDataReader

<p>
Section: \ref sec_vtkio "Visualization Toolkit IO Classes"
\section Usage
 vtkRTXMLPolyDataReader reads the VTK XML PolyData file format in real time.  

To create an instance of class vtkRTXMLPolyDataReader, simply
invoke its constructor as follows
\verbatim
  obj = vtkRTXMLPolyDataReader
\endverbatim
\section Methods
The class vtkRTXMLPolyDataReader has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkRTXMLPolyDataReader class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkRTXMLPolyDataReader = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkRTXMLPolyDataReader = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetLocation (string dataLocation)</tt>
 </LI>
<LI>  <tt>string = obj.GetDataLocation ()</tt>
 </LI>
<LI>  <tt>obj.UpdateToNextFile ()</tt> -  Reader will read in the next available data file
 The filename is this->NextFileName maintained internally 
 </LI>
<LI>  <tt>int = obj.NewDataAvailable ()</tt> -  check if there is new data file available in the 
 given DataLocation
 </LI>
<LI>  <tt>obj.ResetReader ()</tt> -  ResetReader check the data directory specified in 
 this->DataLocation, and reset the Internal data structure
 specifically: this->Internal->ProcessedFileList
 for monitoring the arriving new data files
 if SetDataLocation(char*) is set by the user, 
 this ResetReader() should also be invoked. 
 </LI>
<LI>  <tt>string = obj.GetNextFileName ()</tt> -  Return the name of the next available data file
 assume NewDataAvailable() return VTK_OK
 </LI>
</UL>
*/
