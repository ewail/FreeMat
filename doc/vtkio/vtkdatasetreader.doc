/*!
\page vtkio_vtkdatasetreader vtkDataSetReader

<p>
Section: \ref sec_vtkio "Visualization Toolkit IO Classes"
\section Usage
 vtkDataSetReader is a class that provides instance variables and methods
 to read any type of dataset in Visualization Toolkit (vtk) format.  The
 output type of this class will vary depending upon the type of data
 file. Convenience methods are provided to keep the data as a particular
 type. (See text for format description details).
 The superclass of this class, vtkDataReader, provides many methods for
 controlling the reading of the data file, see vtkDataReader for more
 information.

To create an instance of class vtkDataSetReader, simply
invoke its constructor as follows
\verbatim
  obj = vtkDataSetReader
\endverbatim
\section Methods
The class vtkDataSetReader has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkDataSetReader class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkDataSetReader = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkDataSetReader = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>vtkDataSet = obj.GetOutput ()</tt> -  Get the output of this filter
 </LI>
<LI>  <tt>vtkDataSet = obj.GetOutput (int idx)</tt> -  Get the output of this filter
 </LI>
<LI>  <tt>vtkPolyData = obj.GetPolyDataOutput ()</tt> -  Get the output as various concrete types. This method is typically used
 when you know exactly what type of data is being read.  Otherwise, use
 the general GetOutput() method. If the wrong type is used NULL is
 returned.  (You must also set the filename of the object prior to
 getting the output.)
 </LI>
<LI>  <tt>vtkStructuredPoints = obj.GetStructuredPointsOutput ()</tt> -  Get the output as various concrete types. This method is typically used
 when you know exactly what type of data is being read.  Otherwise, use
 the general GetOutput() method. If the wrong type is used NULL is
 returned.  (You must also set the filename of the object prior to
 getting the output.)
 </LI>
<LI>  <tt>vtkStructuredGrid = obj.GetStructuredGridOutput ()</tt> -  Get the output as various concrete types. This method is typically used
 when you know exactly what type of data is being read.  Otherwise, use
 the general GetOutput() method. If the wrong type is used NULL is
 returned.  (You must also set the filename of the object prior to
 getting the output.)
 </LI>
<LI>  <tt>vtkUnstructuredGrid = obj.GetUnstructuredGridOutput ()</tt> -  Get the output as various concrete types. This method is typically used
 when you know exactly what type of data is being read.  Otherwise, use
 the general GetOutput() method. If the wrong type is used NULL is
 returned.  (You must also set the filename of the object prior to
 getting the output.)
 </LI>
<LI>  <tt>vtkRectilinearGrid = obj.GetRectilinearGridOutput ()</tt> -  Get the output as various concrete types. This method is typically used
 when you know exactly what type of data is being read.  Otherwise, use
 the general GetOutput() method. If the wrong type is used NULL is
 returned.  (You must also set the filename of the object prior to
 getting the output.)
 </LI>
<LI>  <tt>int = obj.ReadOutputType ()</tt> -  This method can be used to find out the type of output expected without
 needing to read the whole file.
 </LI>
</UL>
*/
