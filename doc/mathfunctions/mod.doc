/*!
\page mathfunctions_mod MOD Modulus Operation

<p>
Section: \ref sec_mathfunctions "Mathematical Functions"
\section Usage
Computes the modulus of an array.  The syntax for its use is
\verbatim
   y = mod(x,n)
\endverbatim
where <tt>x</tt> is matrix, and <tt>n</tt> is the base of the modulus.  The
effect of the <tt>mod</tt> operator is to add or subtract multiples of <tt>n</tt>
to the vector <tt>x</tt> so that each element <tt>x_i</tt> is between <tt>0</tt> and <tt>n</tt>
(strictly).  Note that <tt>n</tt> does not have to be an integer.  Also,
<tt>n</tt> can either be a scalar (same base for all elements of <tt>x</tt>), or a
vector (different base for each element of <tt>x</tt>).

Note that the following are defined behaviors:
<OL>
<LI> <tt>mod(x,0) = x</tt>@
</LI>
<LI> <tt>mod(x,x) = 0</tt>@
</LI>
<LI> <tt>mod(x,n)</tt>@ has the same sign as <tt>n</tt> for all other cases.
</LI>
</OL>
\section Example
The following examples show some uses of <tt>mod</tt>
arrays.

\if FRAGMENT
frag_mathfunctions_mod_000.m
0
mod(18,12)
mod(6,5)
mod(2*pi,pi)
\endif


\verbinclude frag_mathfunctions_mod_000.m.out 

Here is an example of using <tt>mod</tt> to determine if integers are even
 or odd:

\if FRAGMENT
frag_mathfunctions_mod_001.m
0
mod([1,3,5,2],2)
\endif


\verbinclude frag_mathfunctions_mod_001.m.out 

Here we use the second form of <tt>mod</tt>, with each element using a 
separate base.

\if FRAGMENT
frag_mathfunctions_mod_002.m
0
mod([9 3 2 0],[1 0 2 2])
\endif


\verbinclude frag_mathfunctions_mod_002.m.out 

*/
