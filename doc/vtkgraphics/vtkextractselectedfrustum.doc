/*!
\page vtkgraphics_vtkextractselectedfrustum vtkExtractSelectedFrustum

<p>
Section: \ref sec_vtkgraphics "Visualization Toolkit Graphics Classes"
\section Usage
 This class intersects the input DataSet with a frustum and determines which
 cells and points lie within the frustum. The frustum is defined with a 
 vtkPlanes containing six cutting planes. The output is a DataSet that is 
 either a shallow copy of the input dataset with two new "vtkInsidedness" 
 attribute arrays, or a completely new UnstructuredGrid that contains only 
 the cells and points of the input that are inside the frustum. The 
 PreserveTopology flag controls which occurs. When PreserveTopology is off 
 this filter adds a scalar array called vtkOriginalCellIds that says what 
 input cell produced each output cell. This is an example of a Pedigree ID 
 which helps to trace back results.


To create an instance of class vtkExtractSelectedFrustum, simply
invoke its constructor as follows
\verbatim
  obj = vtkExtractSelectedFrustum
\endverbatim
\section Methods
The class vtkExtractSelectedFrustum has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkExtractSelectedFrustum class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkExtractSelectedFrustum = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkExtractSelectedFrustum = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>long = obj.GetMTime ()</tt> -  Return the MTime taking into account changes to the Frustum
 </LI>
<LI>  <tt>obj.SetFrustum (vtkPlanes )</tt> -  Set the selection frustum. The planes object must contain six planes.
 </LI>
<LI>  <tt>vtkPlanes = obj.GetFrustum ()</tt> -  Set the selection frustum. The planes object must contain six planes.
 </LI>
<LI>  <tt>obj.CreateFrustum (double vertices[32])</tt> -  Given eight vertices, creates a frustum.
 each pt is x,y,z,1
 in the following order
 near lower left, far lower left
 near upper left, far upper left
 near lower right, far lower right
 near upper right, far upper right
 </LI>
<LI>  <tt>vtkPoints = obj.GetClipPoints ()</tt> -  Return eight points that define the selection frustum. Valid if
 create Frustum was used, invalid if SetFrustum was.
 </LI>
<LI>  <tt>obj.SetFieldType (int )</tt> -  Sets/gets the intersection test type.
 </LI>
<LI>  <tt>int = obj.GetFieldType ()</tt> -  Sets/gets the intersection test type.
 </LI>
<LI>  <tt>obj.SetContainingCells (int )</tt> -  Sets/gets the intersection test type. Only meaningful when fieldType is 
 vtkSelection::POINT
 </LI>
<LI>  <tt>int = obj.GetContainingCells ()</tt> -  Sets/gets the intersection test type. Only meaningful when fieldType is 
 vtkSelection::POINT
 </LI>
<LI>  <tt>int = obj.OverallBoundsTest (double bounds)</tt> -  Does a quick test on the AABBox defined by the bounds.
 </LI>
<LI>  <tt>obj.SetShowBounds (int )</tt> -  When On, this returns an unstructured grid that outlines selection area.
 Off is the default.
 </LI>
<LI>  <tt>int = obj.GetShowBounds ()</tt> -  When On, this returns an unstructured grid that outlines selection area.
 Off is the default.
 </LI>
<LI>  <tt>obj.ShowBoundsOn ()</tt> -  When On, this returns an unstructured grid that outlines selection area.
 Off is the default.
 </LI>
<LI>  <tt>obj.ShowBoundsOff ()</tt> -  When On, this returns an unstructured grid that outlines selection area.
 Off is the default.
 </LI>
<LI>  <tt>obj.SetInsideOut (int )</tt> -  When on, extracts cells outside the frustum instead of inside.
 </LI>
<LI>  <tt>int = obj.GetInsideOut ()</tt> -  When on, extracts cells outside the frustum instead of inside.
 </LI>
<LI>  <tt>obj.InsideOutOn ()</tt> -  When on, extracts cells outside the frustum instead of inside.
 </LI>
<LI>  <tt>obj.InsideOutOff ()</tt> -  When on, extracts cells outside the frustum instead of inside.
 </LI>
</UL>
*/
