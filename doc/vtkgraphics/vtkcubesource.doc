/*!
\page vtkgraphics_vtkcubesource vtkCubeSource

<p>
Section: \ref sec_vtkgraphics "Visualization Toolkit Graphics Classes"
\section Usage
 vtkCubeSource creates a cube centered at origin. The cube is represented
 with four-sided polygons. It is possible to specify the length, width, 
 and height of the cube independently.

To create an instance of class vtkCubeSource, simply
invoke its constructor as follows
\verbatim
  obj = vtkCubeSource
\endverbatim
\section Methods
The class vtkCubeSource has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkCubeSource class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkCubeSource = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkCubeSource = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetXLength (double )</tt> -  Set the length of the cube in the x-direction.
 </LI>
<LI>  <tt>double = obj.GetXLengthMinValue ()</tt> -  Set the length of the cube in the x-direction.
 </LI>
<LI>  <tt>double = obj.GetXLengthMaxValue ()</tt> -  Set the length of the cube in the x-direction.
 </LI>
<LI>  <tt>double = obj.GetXLength ()</tt> -  Set the length of the cube in the x-direction.
 </LI>
<LI>  <tt>obj.SetYLength (double )</tt> -  Set the length of the cube in the y-direction.
 </LI>
<LI>  <tt>double = obj.GetYLengthMinValue ()</tt> -  Set the length of the cube in the y-direction.
 </LI>
<LI>  <tt>double = obj.GetYLengthMaxValue ()</tt> -  Set the length of the cube in the y-direction.
 </LI>
<LI>  <tt>double = obj.GetYLength ()</tt> -  Set the length of the cube in the y-direction.
 </LI>
<LI>  <tt>obj.SetZLength (double )</tt> -  Set the length of the cube in the z-direction.
 </LI>
<LI>  <tt>double = obj.GetZLengthMinValue ()</tt> -  Set the length of the cube in the z-direction.
 </LI>
<LI>  <tt>double = obj.GetZLengthMaxValue ()</tt> -  Set the length of the cube in the z-direction.
 </LI>
<LI>  <tt>double = obj.GetZLength ()</tt> -  Set the length of the cube in the z-direction.
 </LI>
<LI>  <tt>obj.SetCenter (double , double , double )</tt> -  Set the center of the cube.
 </LI>
<LI>  <tt>obj.SetCenter (double  a[3])</tt> -  Set the center of the cube.
 </LI>
<LI>  <tt>double = obj. GetCenter ()</tt> -  Set the center of the cube.
 </LI>
<LI>  <tt>obj.SetBounds (double xMin, double xMax, double yMin, double yMax, double zMin, double zMax)</tt> -  Convenience method allows creation of cube by specifying bounding box.
 </LI>
<LI>  <tt>obj.SetBounds (double bounds[6])</tt> -  Convenience method allows creation of cube by specifying bounding box.
 </LI>
</UL>
*/
