/*!
\page vtkgraphics_vtktextsource vtkTextSource

<p>
Section: \ref sec_vtkgraphics "Visualization Toolkit Graphics Classes"
\section Usage
 vtkTextSource converts a text string into polygons.  This way you can 
 insert text into your renderings. It uses the 9x15 font from X Windows.
 You can specify if you want the background to be drawn or not. The
 characters are formed by scan converting the raster font into
 quadrilaterals. Colors are assigned to the letters using scalar data.
 To set the color of the characters with the source's actor property, set
 BackingOff on the text source and ScalarVisibilityOff on the associated
 vtkPolyDataMapper. Then, the color can be set using the associated actor's
 property.

 vtkVectorText generates higher quality polygonal representations of
 characters.

To create an instance of class vtkTextSource, simply
invoke its constructor as follows
\verbatim
  obj = vtkTextSource
\endverbatim
\section Methods
The class vtkTextSource has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkTextSource class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkTextSource = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkTextSource = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetText (string )</tt> -  Set/Get the text to be drawn.
 </LI>
<LI>  <tt>string = obj.GetText ()</tt> -  Set/Get the text to be drawn.
 </LI>
<LI>  <tt>obj.SetBacking (int )</tt> -  Controls whether or not a background is drawn with the text.
 </LI>
<LI>  <tt>int = obj.GetBacking ()</tt> -  Controls whether or not a background is drawn with the text.
 </LI>
<LI>  <tt>obj.BackingOn ()</tt> -  Controls whether or not a background is drawn with the text.
 </LI>
<LI>  <tt>obj.BackingOff ()</tt> -  Controls whether or not a background is drawn with the text.
 </LI>
<LI>  <tt>obj.SetForegroundColor (double , double , double )</tt> -  Set/Get the foreground color. Default is white (1,1,1). ALpha is always 1.
 </LI>
<LI>  <tt>obj.SetForegroundColor (double  a[3])</tt> -  Set/Get the foreground color. Default is white (1,1,1). ALpha is always 1.
 </LI>
<LI>  <tt>double = obj. GetForegroundColor ()</tt> -  Set/Get the foreground color. Default is white (1,1,1). ALpha is always 1.
 </LI>
<LI>  <tt>obj.SetBackgroundColor (double , double , double )</tt> -  Set/Get the background color. Default is black (0,0,0). Alpha is always 1.
 </LI>
<LI>  <tt>obj.SetBackgroundColor (double  a[3])</tt> -  Set/Get the background color. Default is black (0,0,0). Alpha is always 1.
 </LI>
<LI>  <tt>double = obj. GetBackgroundColor ()</tt> -  Set/Get the background color. Default is black (0,0,0). Alpha is always 1.
 </LI>
</UL>
*/
