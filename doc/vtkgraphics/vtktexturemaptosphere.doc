/*!
\page vtkgraphics_vtktexturemaptosphere vtkTextureMapToSphere

<p>
Section: \ref sec_vtkgraphics "Visualization Toolkit Graphics Classes"
\section Usage
 vtkTextureMapToSphere is a filter that generates 2D texture coordinates by
 mapping input dataset points onto a sphere. The sphere can either be user
 specified or generated automatically. (The sphere is generated
 automatically by computing the center (i.e., averaged coordinates) of the
 sphere.)  Note that the generated texture coordinates range between
 (0,1). The s-coordinate lies in the angular direction around the z-axis,
 measured counter-clockwise from the x-axis. The t-coordinate lies in the
 angular direction measured down from the north pole towards the south
 pole.

 A special ivar controls how the s-coordinate is generated. If PreventSeam
 is set to true, the s-texture varies from 0->1 and then 1->0 (corresponding
 to angles of 0->180 and 180->360).

To create an instance of class vtkTextureMapToSphere, simply
invoke its constructor as follows
\verbatim
  obj = vtkTextureMapToSphere
\endverbatim
\section Methods
The class vtkTextureMapToSphere has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkTextureMapToSphere class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkTextureMapToSphere = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkTextureMapToSphere = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetCenter (double , double , double )</tt> -  Specify a point defining the center of the sphere.
 </LI>
<LI>  <tt>obj.SetCenter (double  a[3])</tt> -  Specify a point defining the center of the sphere.
 </LI>
<LI>  <tt>double = obj. GetCenter ()</tt> -  Specify a point defining the center of the sphere.
 </LI>
<LI>  <tt>obj.SetAutomaticSphereGeneration (int )</tt> -  Turn on/off automatic sphere generation. This means it automatically
 finds the sphere center.
 </LI>
<LI>  <tt>int = obj.GetAutomaticSphereGeneration ()</tt> -  Turn on/off automatic sphere generation. This means it automatically
 finds the sphere center.
 </LI>
<LI>  <tt>obj.AutomaticSphereGenerationOn ()</tt> -  Turn on/off automatic sphere generation. This means it automatically
 finds the sphere center.
 </LI>
<LI>  <tt>obj.AutomaticSphereGenerationOff ()</tt> -  Turn on/off automatic sphere generation. This means it automatically
 finds the sphere center.
 </LI>
<LI>  <tt>obj.SetPreventSeam (int )</tt> -  Control how the texture coordinates are generated. If PreventSeam is
 set, the s-coordinate ranges from 0->1 and 1->0 corresponding to the
 theta angle variation between 0->180 and 180->0 degrees. Otherwise, the
 s-coordinate ranges from 0->1 between 0->360 degrees.
 </LI>
<LI>  <tt>int = obj.GetPreventSeam ()</tt> -  Control how the texture coordinates are generated. If PreventSeam is
 set, the s-coordinate ranges from 0->1 and 1->0 corresponding to the
 theta angle variation between 0->180 and 180->0 degrees. Otherwise, the
 s-coordinate ranges from 0->1 between 0->360 degrees.
 </LI>
<LI>  <tt>obj.PreventSeamOn ()</tt> -  Control how the texture coordinates are generated. If PreventSeam is
 set, the s-coordinate ranges from 0->1 and 1->0 corresponding to the
 theta angle variation between 0->180 and 180->0 degrees. Otherwise, the
 s-coordinate ranges from 0->1 between 0->360 degrees.
 </LI>
<LI>  <tt>obj.PreventSeamOff ()</tt> -  Control how the texture coordinates are generated. If PreventSeam is
 set, the s-coordinate ranges from 0->1 and 1->0 corresponding to the
 theta angle variation between 0->180 and 180->0 degrees. Otherwise, the
 s-coordinate ranges from 0->1 between 0->360 degrees.
 </LI>
</UL>
*/
