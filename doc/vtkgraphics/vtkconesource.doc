/*!
\page vtkgraphics_vtkconesource vtkConeSource

<p>
Section: \ref sec_vtkgraphics "Visualization Toolkit Graphics Classes"
\section Usage
 vtkConeSource creates a cone centered at a specified point and pointing in
 a specified direction. (By default, the center is the origin and the
 direction is the x-axis.) Depending upon the resolution of this object,
 different representations are created. If resolution=0 a line is created;
 if resolution=1, a single triangle is created; if resolution=2, two
 crossed triangles are created. For resolution > 2, a 3D cone (with
 resolution number of sides) is created. It also is possible to control
 whether the bottom of the cone is capped with a (resolution-sided)
 polygon, and to specify the height and radius of the cone.

To create an instance of class vtkConeSource, simply
invoke its constructor as follows
\verbatim
  obj = vtkConeSource
\endverbatim
\section Methods
The class vtkConeSource has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkConeSource class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkConeSource = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkConeSource = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetHeight (double )</tt> -  Set the height of the cone. This is the height along the cone in
 its specified direction.
 </LI>
<LI>  <tt>double = obj.GetHeightMinValue ()</tt> -  Set the height of the cone. This is the height along the cone in
 its specified direction.
 </LI>
<LI>  <tt>double = obj.GetHeightMaxValue ()</tt> -  Set the height of the cone. This is the height along the cone in
 its specified direction.
 </LI>
<LI>  <tt>double = obj.GetHeight ()</tt> -  Set the height of the cone. This is the height along the cone in
 its specified direction.
 </LI>
<LI>  <tt>obj.SetRadius (double )</tt> -  Set the base radius of the cone.
 </LI>
<LI>  <tt>double = obj.GetRadiusMinValue ()</tt> -  Set the base radius of the cone.
 </LI>
<LI>  <tt>double = obj.GetRadiusMaxValue ()</tt> -  Set the base radius of the cone.
 </LI>
<LI>  <tt>double = obj.GetRadius ()</tt> -  Set the base radius of the cone.
 </LI>
<LI>  <tt>obj.SetResolution (int )</tt> -  Set the number of facets used to represent the cone.
 </LI>
<LI>  <tt>int = obj.GetResolutionMinValue ()</tt> -  Set the number of facets used to represent the cone.
 </LI>
<LI>  <tt>int = obj.GetResolutionMaxValue ()</tt> -  Set the number of facets used to represent the cone.
 </LI>
<LI>  <tt>int = obj.GetResolution ()</tt> -  Set the number of facets used to represent the cone.
 </LI>
<LI>  <tt>obj.SetCenter (double , double , double )</tt> -  Set the center of the cone. It is located at the middle of the axis of
 the cone. Warning: this is not the center of the base of the cone!
 The default is 0,0,0.
 </LI>
<LI>  <tt>obj.SetCenter (double  a[3])</tt> -  Set the center of the cone. It is located at the middle of the axis of
 the cone. Warning: this is not the center of the base of the cone!
 The default is 0,0,0.
 </LI>
<LI>  <tt>double = obj. GetCenter ()</tt> -  Set the center of the cone. It is located at the middle of the axis of
 the cone. Warning: this is not the center of the base of the cone!
 The default is 0,0,0.
 </LI>
<LI>  <tt>obj.SetDirection (double , double , double )</tt> -  Set the orientation vector of the cone. The vector does not have
 to be normalized. The direction goes from the center of the base toward
 the apex. The default is (1,0,0).
 </LI>
<LI>  <tt>obj.SetDirection (double  a[3])</tt> -  Set the orientation vector of the cone. The vector does not have
 to be normalized. The direction goes from the center of the base toward
 the apex. The default is (1,0,0).
 </LI>
<LI>  <tt>double = obj. GetDirection ()</tt> -  Set the orientation vector of the cone. The vector does not have
 to be normalized. The direction goes from the center of the base toward
 the apex. The default is (1,0,0).
 </LI>
<LI>  <tt>obj.SetAngle (double angle)</tt> -  Set the angle of the cone. This is the angle between the axis of the cone
 and a generatrix. Warning: this is not the aperture! The aperture is
 twice this angle.
 As a side effect, the angle plus height sets the base radius of the cone.
 Angle is expressed in degrees.
 </LI>
<LI>  <tt>double = obj.GetAngle ()</tt> -  Set the angle of the cone. This is the angle between the axis of the cone
 and a generatrix. Warning: this is not the aperture! The aperture is
 twice this angle.
 As a side effect, the angle plus height sets the base radius of the cone.
 Angle is expressed in degrees.
 </LI>
<LI>  <tt>obj.SetCapping (int )</tt> -  Turn on/off whether to cap the base of the cone with a polygon.
 </LI>
<LI>  <tt>int = obj.GetCapping ()</tt> -  Turn on/off whether to cap the base of the cone with a polygon.
 </LI>
<LI>  <tt>obj.CappingOn ()</tt> -  Turn on/off whether to cap the base of the cone with a polygon.
 </LI>
<LI>  <tt>obj.CappingOff ()</tt> -  Turn on/off whether to cap the base of the cone with a polygon.
 </LI>
</UL>
*/
