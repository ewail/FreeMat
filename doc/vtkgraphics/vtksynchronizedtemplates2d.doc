/*!
\page vtkgraphics_vtksynchronizedtemplates2d vtkSynchronizedTemplates2D

<p>
Section: \ref sec_vtkgraphics "Visualization Toolkit Graphics Classes"
\section Usage
 vtkSynchronizedTemplates2D is a 2D implementation of the synchronized 
 template algorithm. Note that vtkContourFilter will automatically
 use this class when appropriate.

To create an instance of class vtkSynchronizedTemplates2D, simply
invoke its constructor as follows
\verbatim
  obj = vtkSynchronizedTemplates2D
\endverbatim
\section Methods
The class vtkSynchronizedTemplates2D has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkSynchronizedTemplates2D class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkSynchronizedTemplates2D = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkSynchronizedTemplates2D = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>long = obj.GetMTime ()</tt> -  Because we delegate to vtkContourValues
 </LI>
<LI>  <tt>obj.SetValue (int i, double value)</tt> -  Get the ith contour value.
 </LI>
<LI>  <tt>double = obj.GetValue (int i)</tt> -  Get a pointer to an array of contour values. There will be
 GetNumberOfContours() values in the list.
 </LI>
<LI>  <tt>obj.GetValues (double contourValues)</tt> -  Set the number of contours to place into the list. You only really
 need to use this method to reduce list size. The method SetValue()
 will automatically increase list size as needed.
 </LI>
<LI>  <tt>obj.SetNumberOfContours (int number)</tt> -  Get the number of contours in the list of contour values.
 </LI>
<LI>  <tt>int = obj.GetNumberOfContours ()</tt> -  Generate numContours equally spaced contour values between specified
 range. Contour values will include min/max range values.
 </LI>
<LI>  <tt>obj.GenerateValues (int numContours, double range[2])</tt> -  Generate numContours equally spaced contour values between specified
 range. Contour values will include min/max range values.
 </LI>
<LI>  <tt>obj.GenerateValues (int numContours, double rangeStart, double rangeEnd)</tt> -  Option to set the point scalars of the output.  The scalars will be the 
 iso value of course.  By default this flag is on.
 </LI>
<LI>  <tt>obj.SetComputeScalars (int )</tt> -  Option to set the point scalars of the output.  The scalars will be the 
 iso value of course.  By default this flag is on.
 </LI>
<LI>  <tt>int = obj.GetComputeScalars ()</tt> -  Option to set the point scalars of the output.  The scalars will be the 
 iso value of course.  By default this flag is on.
 </LI>
<LI>  <tt>obj.ComputeScalarsOn ()</tt> -  Option to set the point scalars of the output.  The scalars will be the 
 iso value of course.  By default this flag is on.
 </LI>
<LI>  <tt>obj.ComputeScalarsOff ()</tt> -  Option to set the point scalars of the output.  The scalars will be the 
 iso value of course.  By default this flag is on.
 </LI>
<LI>  <tt>obj.SetArrayComponent (int )</tt> -  Set/get which component of the scalar array to contour on; defaults to 0.
 </LI>
<LI>  <tt>int = obj.GetArrayComponent ()</tt> -  Set/get which component of the scalar array to contour on; defaults to 0.
 </LI>
</UL>
*/
