/*!
\page vtkgraphics_vtkprogrammabledataobjectsource vtkProgrammableDataObjectSource

<p>
Section: \ref sec_vtkgraphics "Visualization Toolkit Graphics Classes"
\section Usage
 vtkProgrammableDataObjectSource is a source object that is programmable by
 the user. The output of the filter is a data object (vtkDataObject) which
 represents data via an instance of field data. To use this object, you
 must specify a function that creates the output.  

 Example use of this filter includes reading tabular data and encoding it
 as vtkFieldData. You can then use filters like vtkDataObjectToDataSetFilter
 to convert the data object to a dataset and then visualize it.  Another
 important use of this class is that it allows users of interpreters (e.g.,
 Tcl or Java) the ability to write source objects without having to
 recompile C++ code or generate new libraries.
 

To create an instance of class vtkProgrammableDataObjectSource, simply
invoke its constructor as follows
\verbatim
  obj = vtkProgrammableDataObjectSource
\endverbatim
\section Methods
The class vtkProgrammableDataObjectSource has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkProgrammableDataObjectSource class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkProgrammableDataObjectSource = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkProgrammableDataObjectSource = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
</UL>
*/
