/*!
\page vtkgraphics_vtkcurvatures vtkCurvatures

<p>
Section: \ref sec_vtkgraphics "Visualization Toolkit Graphics Classes"
\section Usage
 vtkCurvatures takes a polydata input and computes the curvature of the
 mesh at each point. Four possible methods of computation are available :

 Gauss Curvature
 discrete Gauss curvature (K) computation,
 \f$K(vertex v) = 2*PI-\sum_{facet neighbs f of v} (angle_f at v)\f$
 The contribution of every facet is for the moment weighted by \f$Area(facet)/3\f$
 The units of Gaussian Curvature are \f$[1/m^2]\f$

 Mean Curvature
 \f$H(vertex v) = average over edges neighbs e of H(e)\f$
 \f$H(edge e) = length(e)*dihedral_angle(e)\f$
 NB: dihedral_angle is the ORIENTED angle between -PI and PI,
 this means that the surface is assumed to be orientable
 the computation creates the orientation
 The units of Mean Curvature are [1/m]

 Maximum (\f$k_max\f$) and Minimum (\f$k_min\f$) Principal Curvatures
 \f$k_max = H + sqrt(H^2 - K)\f$
 \f$k_min = H - sqrt(H^2 - K)\f$
 Excepting spherical and planar surfaces which have equal principal curvatures,
 the curvature at a point on a surface varies with the direction one "sets off"
 from the point. For all directions, the curvature will pass through two extrema:
 a minimum (\f$k_min\f$) and a maximum (\f$k_max\f$) which occur at mutually orthogonal
 directions to each other.

 NB. The sign of the Gauss curvature is a geometric ivariant, it should be +ve
 when the surface looks like a sphere, -ve when it looks like a saddle,
 however, the sign of the Mean curvature is not, it depends on the
 convention for normals - This code assumes that normals point outwards (ie
 from the surface of a sphere outwards). If a given mesh produces curvatures
 of opposite senses then the flag InvertMeanCurvature can be set and the
 Curvature reported by the Mean calculation will be inverted.

 .SECTION Thanks
 Philip Batchelor philipp.batchelor@kcl.ac.uk for creating and contributing
 the class and Andrew Maclean a.maclean@acfr.usyd.edu.au for cleanups and 
 fixes. Thanks also to Goodwin Lawlor for contributing patch to calculate
 principal curvatures

To create an instance of class vtkCurvatures, simply
invoke its constructor as follows
\verbatim
  obj = vtkCurvatures
\endverbatim
\section Methods
The class vtkCurvatures has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkCurvatures class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkCurvatures = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkCurvatures = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetCurvatureType (int )</tt> -  Set/Get Curvature type
 VTK_CURVATURE_GAUSS: Gaussian curvature, stored as
 DataArray "Gauss_Curvature"
 VTK_CURVATURE_MEAN : Mean curvature, stored as
 DataArray "Mean_Curvature"
 </LI>
<LI>  <tt>int = obj.GetCurvatureType ()</tt> -  Set/Get Curvature type
 VTK_CURVATURE_GAUSS: Gaussian curvature, stored as
 DataArray "Gauss_Curvature"
 VTK_CURVATURE_MEAN : Mean curvature, stored as
 DataArray "Mean_Curvature"
 </LI>
<LI>  <tt>obj.SetCurvatureTypeToGaussian ()</tt> -  Set/Get Curvature type
 VTK_CURVATURE_GAUSS: Gaussian curvature, stored as
 DataArray "Gauss_Curvature"
 VTK_CURVATURE_MEAN : Mean curvature, stored as
 DataArray "Mean_Curvature"
 </LI>
<LI>  <tt>obj.SetCurvatureTypeToMean ()</tt> -  Set/Get Curvature type
 VTK_CURVATURE_GAUSS: Gaussian curvature, stored as
 DataArray "Gauss_Curvature"
 VTK_CURVATURE_MEAN : Mean curvature, stored as
 DataArray "Mean_Curvature"
 </LI>
<LI>  <tt>obj.SetCurvatureTypeToMaximum ()</tt> -  Set/Get Curvature type
 VTK_CURVATURE_GAUSS: Gaussian curvature, stored as
 DataArray "Gauss_Curvature"
 VTK_CURVATURE_MEAN : Mean curvature, stored as
 DataArray "Mean_Curvature"
 </LI>
<LI>  <tt>obj.SetCurvatureTypeToMinimum ()</tt> -  Set/Get the flag which inverts the mean curvature calculation for
 meshes with inward pointing normals (default false)
 </LI>
<LI>  <tt>obj.SetInvertMeanCurvature (int )</tt> -  Set/Get the flag which inverts the mean curvature calculation for
 meshes with inward pointing normals (default false)
 </LI>
<LI>  <tt>int = obj.GetInvertMeanCurvature ()</tt> -  Set/Get the flag which inverts the mean curvature calculation for
 meshes with inward pointing normals (default false)
 </LI>
<LI>  <tt>obj.InvertMeanCurvatureOn ()</tt> -  Set/Get the flag which inverts the mean curvature calculation for
 meshes with inward pointing normals (default false)
 </LI>
<LI>  <tt>obj.InvertMeanCurvatureOff ()</tt> -  Set/Get the flag which inverts the mean curvature calculation for
 meshes with inward pointing normals (default false)
 </LI>
</UL>
*/
