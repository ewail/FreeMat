/*!
\page vtkgraphics_vtkmassproperties vtkMassProperties

<p>
Section: \ref sec_vtkgraphics "Visualization Toolkit Graphics Classes"
\section Usage
 vtkMassProperties estimates the volume, the surface area, and the
 normalized shape index of a triangle mesh.  The algorithm
 implemented here is based on the discrete form of the divergence
 theorem.  The general assumption here is that the model is of
 closed surface.  For more details see the following reference
 (Alyassin A.M. et al, "Evaluation of new algorithms for the
 interactive measurement of surface area and volume", Med Phys 21(6)
 1994.).

To create an instance of class vtkMassProperties, simply
invoke its constructor as follows
\verbatim
  obj = vtkMassProperties
\endverbatim
\section Methods
The class vtkMassProperties has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkMassProperties class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkMassProperties = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkMassProperties = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>double = obj.GetVolume ()</tt> -  Compute and return the projected volume.
 Typically you should compare this volume to the value returned by GetVolume
 if you get an error (GetVolume()-GetVolumeProjected())*10000 that is greater
 than GetVolume() this should identify a problem:
 * Either the polydata is not closed
 * Or the polydata contains triangle that are flipped
 </LI>
<LI>  <tt>double = obj.GetVolumeProjected ()</tt> -  Compute and return the volume projected on to each axis aligned plane.
 </LI>
<LI>  <tt>double = obj.GetVolumeX ()</tt> -  Compute and return the volume projected on to each axis aligned plane.
 </LI>
<LI>  <tt>double = obj.GetVolumeY ()</tt> -  Compute and return the volume projected on to each axis aligned plane.
 </LI>
<LI>  <tt>double = obj.GetVolumeZ ()</tt> -  Compute and return the weighting factors for the maximum unit
 normal component (MUNC).
 </LI>
<LI>  <tt>double = obj.GetKx ()</tt> -  Compute and return the weighting factors for the maximum unit
 normal component (MUNC).
 </LI>
<LI>  <tt>double = obj.GetKy ()</tt> -  Compute and return the weighting factors for the maximum unit
 normal component (MUNC).
 </LI>
<LI>  <tt>double = obj.GetKz ()</tt> -  Compute and return the area.
 </LI>
<LI>  <tt>double = obj.GetSurfaceArea ()</tt> -  Compute and return the min cell area.
 </LI>
<LI>  <tt>double = obj.GetMinCellArea ()</tt> -  Compute and return the max cell area.
 </LI>
<LI>  <tt>double = obj.GetMaxCellArea ()</tt> -  Compute and return the normalized shape index. This characterizes the
 deviation of the shape of an object from a sphere. A sphere's NSI
 is one. This number is always >= 1.0.
 </LI>
<LI>  <tt>double = obj.GetNormalizedShapeIndex ()</tt>
 </LI>
</UL>
*/
