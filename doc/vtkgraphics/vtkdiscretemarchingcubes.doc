/*!
\page vtkgraphics_vtkdiscretemarchingcubes vtkDiscreteMarchingCubes

<p>
Section: \ref sec_vtkgraphics "Visualization Toolkit Graphics Classes"
\section Usage
 takes as input a volume (e.g., 3D structured point set) of
 segmentation labels and generates on output one or more
 models representing the boundaries between the specified label and
 the adjacent structures.  One or more label values must be specified to
 generate the models.  The boundary positions are always defined to
 be half-way between adjacent voxels. This filter works best with
 integral scalar values.
 If ComputeScalars is on (the default), each output cell will have
 cell data that corresponds to the scalar value (segmentation label)
 of the corresponding cube. Note that this differs from vtkMarchingCubes,
 which stores the scalar value as point data. The rationale for this
 difference is that cell vertices may be shared between multiple
 cells. This also means that the resultant polydata may be
 non-manifold (cell faces may be coincident). To further process the
 polydata, users should either: 1) extract cells that have a common
 scalar value using vtkThreshold, or 2) process the data with
 filters that can handle non-manifold polydata
 (e.g. vtkWindowedSincPolyDataFilter).
 Also note, Normals and Gradients are not computed.

To create an instance of class vtkDiscreteMarchingCubes, simply
invoke its constructor as follows
\verbatim
  obj = vtkDiscreteMarchingCubes
\endverbatim
\section Methods
The class vtkDiscreteMarchingCubes has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkDiscreteMarchingCubes class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkDiscreteMarchingCubes = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkDiscreteMarchingCubes = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
</UL>
*/
