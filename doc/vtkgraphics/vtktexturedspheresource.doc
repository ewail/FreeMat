/*!
\page vtkgraphics_vtktexturedspheresource vtkTexturedSphereSource

<p>
Section: \ref sec_vtkgraphics "Visualization Toolkit Graphics Classes"
\section Usage
 vtkTexturedSphereSource creates a polygonal sphere of specified radius 
 centered at the origin. The resolution (polygonal discretization) in both 
 the latitude (phi) and longitude (theta) directions can be specified. 
 It also is possible to create partial sphere by specifying maximum phi and 
 theta angles.

To create an instance of class vtkTexturedSphereSource, simply
invoke its constructor as follows
\verbatim
  obj = vtkTexturedSphereSource
\endverbatim
\section Methods
The class vtkTexturedSphereSource has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkTexturedSphereSource class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkTexturedSphereSource = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkTexturedSphereSource = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetRadius (double )</tt> -  Set radius of sphere.
 </LI>
<LI>  <tt>double = obj.GetRadiusMinValue ()</tt> -  Set radius of sphere.
 </LI>
<LI>  <tt>double = obj.GetRadiusMaxValue ()</tt> -  Set radius of sphere.
 </LI>
<LI>  <tt>double = obj.GetRadius ()</tt> -  Set radius of sphere.
 </LI>
<LI>  <tt>obj.SetThetaResolution (int )</tt> -  Set the number of points in the longitude direction.
 </LI>
<LI>  <tt>int = obj.GetThetaResolutionMinValue ()</tt> -  Set the number of points in the longitude direction.
 </LI>
<LI>  <tt>int = obj.GetThetaResolutionMaxValue ()</tt> -  Set the number of points in the longitude direction.
 </LI>
<LI>  <tt>int = obj.GetThetaResolution ()</tt> -  Set the number of points in the longitude direction.
 </LI>
<LI>  <tt>obj.SetPhiResolution (int )</tt> -  Set the number of points in the latitude direction.
 </LI>
<LI>  <tt>int = obj.GetPhiResolutionMinValue ()</tt> -  Set the number of points in the latitude direction.
 </LI>
<LI>  <tt>int = obj.GetPhiResolutionMaxValue ()</tt> -  Set the number of points in the latitude direction.
 </LI>
<LI>  <tt>int = obj.GetPhiResolution ()</tt> -  Set the number of points in the latitude direction.
 </LI>
<LI>  <tt>obj.SetTheta (double )</tt> -  Set the maximum longitude angle.
 </LI>
<LI>  <tt>double = obj.GetThetaMinValue ()</tt> -  Set the maximum longitude angle.
 </LI>
<LI>  <tt>double = obj.GetThetaMaxValue ()</tt> -  Set the maximum longitude angle.
 </LI>
<LI>  <tt>double = obj.GetTheta ()</tt> -  Set the maximum longitude angle.
 </LI>
<LI>  <tt>obj.SetPhi (double )</tt> -  Set the maximum latitude angle (0 is at north pole).
 </LI>
<LI>  <tt>double = obj.GetPhiMinValue ()</tt> -  Set the maximum latitude angle (0 is at north pole).
 </LI>
<LI>  <tt>double = obj.GetPhiMaxValue ()</tt> -  Set the maximum latitude angle (0 is at north pole).
 </LI>
<LI>  <tt>double = obj.GetPhi ()</tt> -  Set the maximum latitude angle (0 is at north pole).
 </LI>
</UL>
*/
