/*!
\page vtkgraphics_vtkrectangularbuttonsource vtkRectangularButtonSource

<p>
Section: \ref sec_vtkgraphics "Visualization Toolkit Graphics Classes"
\section Usage
 vtkRectangularButtonSource creates a rectangular shaped button with
 texture coordinates suitable for application of a texture map. This
 provides a way to make nice looking 3D buttons. The buttons are 
 represented as vtkPolyData that includes texture coordinates and
 normals. The button lies in the x-y plane.

 To use this class you must define its width, height and length. These
 measurements are all taken with respect to the shoulder of the button.
 The shoulder is defined as follows. Imagine a box sitting on the floor.
 The distance from the floor to the top of the box is the depth; the other
 directions are the length (x-direction) and height (y-direction). In
 this particular widget the box can have a smaller bottom than top. The
 ratio in size between bottom and top is called the box ratio (by 
 default=1.0). The ratio of the texture region to the shoulder region
 is the texture ratio. And finally the texture region may be out of plane
 compared to the shoulder. The texture height ratio controls this.

To create an instance of class vtkRectangularButtonSource, simply
invoke its constructor as follows
\verbatim
  obj = vtkRectangularButtonSource
\endverbatim
\section Methods
The class vtkRectangularButtonSource has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkRectangularButtonSource class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkRectangularButtonSource = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkRectangularButtonSource = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetWidth (double )</tt> -  Set/Get the width of the button.
 </LI>
<LI>  <tt>double = obj.GetWidthMinValue ()</tt> -  Set/Get the width of the button.
 </LI>
<LI>  <tt>double = obj.GetWidthMaxValue ()</tt> -  Set/Get the width of the button.
 </LI>
<LI>  <tt>double = obj.GetWidth ()</tt> -  Set/Get the width of the button.
 </LI>
<LI>  <tt>obj.SetHeight (double )</tt> -  Set/Get the height of the button.
 </LI>
<LI>  <tt>double = obj.GetHeightMinValue ()</tt> -  Set/Get the height of the button.
 </LI>
<LI>  <tt>double = obj.GetHeightMaxValue ()</tt> -  Set/Get the height of the button.
 </LI>
<LI>  <tt>double = obj.GetHeight ()</tt> -  Set/Get the height of the button.
 </LI>
<LI>  <tt>obj.SetDepth (double )</tt> -  Set/Get the depth of the button (the z-eliipsoid axis length).
 </LI>
<LI>  <tt>double = obj.GetDepthMinValue ()</tt> -  Set/Get the depth of the button (the z-eliipsoid axis length).
 </LI>
<LI>  <tt>double = obj.GetDepthMaxValue ()</tt> -  Set/Get the depth of the button (the z-eliipsoid axis length).
 </LI>
<LI>  <tt>double = obj.GetDepth ()</tt> -  Set/Get the depth of the button (the z-eliipsoid axis length).
 </LI>
<LI>  <tt>obj.SetBoxRatio (double )</tt> -  Set/Get the ratio of the bottom of the button with the
 shoulder region. Numbers greater than one produce buttons
 with a wider bottom than shoulder; ratios less than one
 produce buttons that have a wider shoulder than bottom.
 </LI>
<LI>  <tt>double = obj.GetBoxRatioMinValue ()</tt> -  Set/Get the ratio of the bottom of the button with the
 shoulder region. Numbers greater than one produce buttons
 with a wider bottom than shoulder; ratios less than one
 produce buttons that have a wider shoulder than bottom.
 </LI>
<LI>  <tt>double = obj.GetBoxRatioMaxValue ()</tt> -  Set/Get the ratio of the bottom of the button with the
 shoulder region. Numbers greater than one produce buttons
 with a wider bottom than shoulder; ratios less than one
 produce buttons that have a wider shoulder than bottom.
 </LI>
<LI>  <tt>double = obj.GetBoxRatio ()</tt> -  Set/Get the ratio of the bottom of the button with the
 shoulder region. Numbers greater than one produce buttons
 with a wider bottom than shoulder; ratios less than one
 produce buttons that have a wider shoulder than bottom.
 </LI>
<LI>  <tt>obj.SetTextureRatio (double )</tt> -  Set/Get the ratio of the texture region to the
 shoulder region. This number must be 0<=tr<=1.
 If the texture style is to fit the image, then satisfying
 the texture ratio may only be possible in one of the
 two directions (length or width) depending on the 
 dimensions of the texture.
 </LI>
<LI>  <tt>double = obj.GetTextureRatioMinValue ()</tt> -  Set/Get the ratio of the texture region to the
 shoulder region. This number must be 0<=tr<=1.
 If the texture style is to fit the image, then satisfying
 the texture ratio may only be possible in one of the
 two directions (length or width) depending on the 
 dimensions of the texture.
 </LI>
<LI>  <tt>double = obj.GetTextureRatioMaxValue ()</tt> -  Set/Get the ratio of the texture region to the
 shoulder region. This number must be 0<=tr<=1.
 If the texture style is to fit the image, then satisfying
 the texture ratio may only be possible in one of the
 two directions (length or width) depending on the 
 dimensions of the texture.
 </LI>
<LI>  <tt>double = obj.GetTextureRatio ()</tt> -  Set/Get the ratio of the texture region to the
 shoulder region. This number must be 0<=tr<=1.
 If the texture style is to fit the image, then satisfying
 the texture ratio may only be possible in one of the
 two directions (length or width) depending on the 
 dimensions of the texture.
 </LI>
<LI>  <tt>obj.SetTextureHeightRatio (double )</tt> -  Set/Get the ratio of the height of the texture region
 to the shoulder height. Values greater than 1.0 yield
 convex buttons with the texture region raised above the
 shoulder. Values less than 1.0 yield concave buttons with
 the texture region below the shoulder.
 </LI>
<LI>  <tt>double = obj.GetTextureHeightRatioMinValue ()</tt> -  Set/Get the ratio of the height of the texture region
 to the shoulder height. Values greater than 1.0 yield
 convex buttons with the texture region raised above the
 shoulder. Values less than 1.0 yield concave buttons with
 the texture region below the shoulder.
 </LI>
<LI>  <tt>double = obj.GetTextureHeightRatioMaxValue ()</tt> -  Set/Get the ratio of the height of the texture region
 to the shoulder height. Values greater than 1.0 yield
 convex buttons with the texture region raised above the
 shoulder. Values less than 1.0 yield concave buttons with
 the texture region below the shoulder.
 </LI>
<LI>  <tt>double = obj.GetTextureHeightRatio ()</tt> -  Set/Get the ratio of the height of the texture region
 to the shoulder height. Values greater than 1.0 yield
 convex buttons with the texture region raised above the
 shoulder. Values less than 1.0 yield concave buttons with
 the texture region below the shoulder.
 </LI>
</UL>
*/
