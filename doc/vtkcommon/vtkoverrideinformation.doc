/*!
\page vtkcommon_vtkoverrideinformation vtkOverrideInformation

<p>
Section: \ref sec_vtkcommon "Visualization Toolkit Common Classes"
\section Usage
 vtkOverrideInformation is used to represent the information about
 a class which is overriden in a vtkObjectFactory.


To create an instance of class vtkOverrideInformation, simply
invoke its constructor as follows
\verbatim
  obj = vtkOverrideInformation
\endverbatim
\section Methods
The class vtkOverrideInformation has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkOverrideInformation class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkOverrideInformation = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkOverrideInformation = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>string = obj.GetClassOverrideName ()</tt> -  Returns the name of the class that will override the class.
 For example, if you had a factory that provided an override for
 vtkVertex called vtkMyVertex, then this would return "vtkMyVertex"
 </LI>
<LI>  <tt>string = obj.GetClassOverrideWithName ()</tt> -  Return a human readable or GUI displayable description of this
 override.   
 </LI>
<LI>  <tt>string = obj.GetDescription ()</tt> -  Return the specific object factory that this override occurs in.
 </LI>
<LI>  <tt>vtkObjectFactory = obj.GetObjectFactory ()</tt> -  Set the class override name
 </LI>
<LI>  <tt>obj.SetClassOverrideName (string )</tt> -  Set the class override name
 </LI>
<LI>  <tt>obj.SetClassOverrideWithName (string )</tt> -  Set the class override name
 Set the class override with name
 </LI>
<LI>  <tt>obj.SetDescription (string )</tt> -  Set the class override name
 Set the class override with name
 Set the description
 </LI>
</UL>
*/
