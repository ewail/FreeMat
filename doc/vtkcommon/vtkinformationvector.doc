/*!
\page vtkcommon_vtkinformationvector vtkInformationVector

<p>
Section: \ref sec_vtkcommon "Visualization Toolkit Common Classes"
\section Usage

To create an instance of class vtkInformationVector, simply
invoke its constructor as follows
\verbatim
  obj = vtkInformationVector
\endverbatim
\section Methods
The class vtkInformationVector has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkInformationVector class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkInformationVector = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkInformationVector = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>int = obj.GetNumberOfInformationObjects ()</tt> -  Get/Set the number of information objects in the vector.  Setting
 the number to larger than the current number will create empty
 vtkInformation instances.  Setting the number to smaller than the
 current number will remove entries from higher indices.
 </LI>
<LI>  <tt>obj.SetNumberOfInformationObjects (int n)</tt> -  Get/Set the number of information objects in the vector.  Setting
 the number to larger than the current number will create empty
 vtkInformation instances.  Setting the number to smaller than the
 current number will remove entries from higher indices.
 </LI>
<LI>  <tt>obj.SetInformationObject (int index, vtkInformation info)</tt> -  Get/Set the vtkInformation instance stored at the given index in
 the vector.  The vector will automatically expand to include the
 index given if necessary.  Missing entries in-between will be
 filled with empty vtkInformation instances.
 </LI>
<LI>  <tt>vtkInformation = obj.GetInformationObject (int index)</tt> -  Get/Set the vtkInformation instance stored at the given index in
 the vector.  The vector will automatically expand to include the
 index given if necessary.  Missing entries in-between will be
 filled with empty vtkInformation instances.
 </LI>
<LI>  <tt>obj.Append (vtkInformation info)</tt> -  Append/Remove an information object.
 </LI>
<LI>  <tt>obj.Remove (vtkInformation info)</tt> -  Append/Remove an information object.
 </LI>
<LI>  <tt>obj.Register (vtkObjectBase o)</tt> -  Initiate garbage collection when a reference is removed.
 </LI>
<LI>  <tt>obj.UnRegister (vtkObjectBase o)</tt> -  Initiate garbage collection when a reference is removed.
 </LI>
<LI>  <tt>obj.Copy (vtkInformationVector from, int deep)</tt> -  Copy all information entries from the given vtkInformation
 instance.  Any previously existing entries are removed.  If 
 deep==1, a deep copy of the information structure is performed (new 
 instances of any contained vtkInformation and vtkInformationVector 
 objects are created).
 </LI>
</UL>
*/
