/*!
\page vtkcommon_vtkpolynomialsolversunivariate vtkPolynomialSolversUnivariate

<p>
Section: \ref sec_vtkcommon "Visualization Toolkit Common Classes"
\section Usage
 vtkPolynomialSolversUnivariate provides solvers for
 univariate polynomial equations with real coefficients.
 The Tartaglia-Cardan and Ferrari solvers work on polynomials of fixed
 degree 3 and 4, respectively.
 The Lin-Bairstow and Sturm solvers work on polynomials of arbitrary
 degree. The Sturm solver is the most robust solver but only reports
 roots within an interval and does not report multiplicities.
 The Lin-Bairstow solver reports multiplicities.

 For difficult polynomials, you may wish to use FilterRoots to
 eliminate some of the roots reported by the Sturm solver.
 FilterRoots evaluates the derivatives near each root to
 eliminate cases where a local minimum or maximum is close
 to zero.

 .SECTION Thanks
 Thanks to Philippe Pebay, Korben Rusek, David Thompson, and Maurice Rojas
 for implementing these solvers.

To create an instance of class vtkPolynomialSolversUnivariate, simply
invoke its constructor as follows
\verbatim
  obj = vtkPolynomialSolversUnivariate
\endverbatim
\section Methods
The class vtkPolynomialSolversUnivariate has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkPolynomialSolversUnivariate class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkPolynomialSolversUnivariate = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkPolynomialSolversUnivariate = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
</UL>
*/
