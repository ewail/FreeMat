/*!
\page vtkcommon_vtkmatrix4x4 vtkMatrix4x4

<p>
Section: \ref sec_vtkcommon "Visualization Toolkit Common Classes"
\section Usage
 vtkMatrix4x4 is a class to represent and manipulate 4x4 matrices. 
 Specifically, it is designed to work on 4x4 transformation matrices
 found in 3D rendering using homogeneous coordinates [x y z w].

To create an instance of class vtkMatrix4x4, simply
invoke its constructor as follows
\verbatim
  obj = vtkMatrix4x4
\endverbatim
\section Methods
The class vtkMatrix4x4 has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkMatrix4x4 class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkMatrix4x4 = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkMatrix4x4 = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.DeepCopy (vtkMatrix4x4 source)</tt> -  Non-static member function. Assigns *from* elements array
 </LI>
<LI>  <tt>obj.DeepCopy (double Elements[16])</tt> -  Set all of the elements to zero.
 </LI>
<LI>  <tt>obj.Zero ()</tt> -  Set equal to Identity matrix
 </LI>
<LI>  <tt>obj.Identity ()</tt> -  Matrix Inversion (adapted from Richard Carling in "Graphics Gems," 
 Academic Press, 1990).
 </LI>
<LI>  <tt>obj.Invert ()</tt> -  Transpose the matrix and put it into out. 
 </LI>
<LI>  <tt>obj.Transpose ()</tt> -  Multiply a homogeneous coordinate by this matrix, i.e. out = A*in.
 The in[4] and out[4] can be the same array.
 </LI>
<LI>  <tt>obj.MultiplyPoint (float in[4], float out[4])</tt> -  Multiply a homogeneous coordinate by this matrix, i.e. out = A*in.
 The in[4] and out[4] can be the same array.
 </LI>
<LI>  <tt>obj.MultiplyPoint (double in[4], double out[4])</tt> -  For use in Java, Python or Tcl.  The default MultiplyPoint() uses
 a single-precision point.
 </LI>
<LI>  <tt>float = obj.MultiplyPoint (float in[4])</tt> -  For use in Java, Python or Tcl.  The default MultiplyPoint() uses
 a single-precision point.
 </LI>
<LI>  <tt>float = obj.MultiplyFloatPoint (float in[4])</tt> -  For use in Java, Python or Tcl.  The default MultiplyPoint() uses
 a single-precision point.
 </LI>
<LI>  <tt>double = obj.MultiplyDoublePoint (double in[4])</tt> -  Multiplies matrices a and b and stores the result in c.
 </LI>
<LI>  <tt>obj.Adjoint (vtkMatrix4x4 in, vtkMatrix4x4 out)</tt> -  Compute the determinant of the matrix and return it.
 </LI>
<LI>  <tt>double = obj.Determinant ()</tt> -  Sets the element i,j in the matrix.
 </LI>
<LI>  <tt>obj.SetElement (int i, int j, double value)</tt> -  Sets the element i,j in the matrix.
 </LI>
<LI>  <tt>double = obj.GetElement (int i, int j) const</tt>
 </LI>
</UL>
*/
