/*!
\page vtkcommon_vtkmultithreader vtkMultiThreader

<p>
Section: \ref sec_vtkcommon "Visualization Toolkit Common Classes"
\section Usage
 vtkMultithreader is a class that provides support for multithreaded
 execution using sproc() on an SGI, or pthread_create on any platform
 supporting POSIX threads.  This class can be used to execute a single
 method on multiple threads, or to specify a method per thread. 

To create an instance of class vtkMultiThreader, simply
invoke its constructor as follows
\verbatim
  obj = vtkMultiThreader
\endverbatim
\section Methods
The class vtkMultiThreader has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkMultiThreader class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkMultiThreader = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkMultiThreader = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetNumberOfThreads (int )</tt> -  Get/Set the number of threads to create. It will be clamped to the range
 1 - VTK_MAX_THREADS, so the caller of this method should check that the
 requested number of threads was accepted.
 </LI>
<LI>  <tt>int = obj.GetNumberOfThreadsMinValue ()</tt> -  Get/Set the number of threads to create. It will be clamped to the range
 1 - VTK_MAX_THREADS, so the caller of this method should check that the
 requested number of threads was accepted.
 </LI>
<LI>  <tt>int = obj.GetNumberOfThreadsMaxValue ()</tt> -  Get/Set the number of threads to create. It will be clamped to the range
 1 - VTK_MAX_THREADS, so the caller of this method should check that the
 requested number of threads was accepted.
 </LI>
<LI>  <tt>int = obj.GetNumberOfThreads ()</tt> -  Get/Set the number of threads to create. It will be clamped to the range
 1 - VTK_MAX_THREADS, so the caller of this method should check that the
 requested number of threads was accepted.
 </LI>
</UL>
*/
