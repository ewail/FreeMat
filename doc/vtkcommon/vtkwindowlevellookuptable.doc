/*!
\page vtkcommon_vtkwindowlevellookuptable vtkWindowLevelLookupTable

<p>
Section: \ref sec_vtkcommon "Visualization Toolkit Common Classes"
\section Usage
 vtkWindowLevelLookupTable is an object that is used by mapper objects
 to map scalar values into rgba (red-green-blue-alpha transparency)
 color specification, or rgba into scalar values. The color table can
 be created by direct insertion of color values, or by specifying a
 window and level. Window / Level is used in medical imaging to specify
 a linear greyscale ramp. The Level is the center of the ramp.  The
 Window is the width of the ramp.

To create an instance of class vtkWindowLevelLookupTable, simply
invoke its constructor as follows
\verbatim
  obj = vtkWindowLevelLookupTable
\endverbatim
\section Methods
The class vtkWindowLevelLookupTable has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkWindowLevelLookupTable class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkWindowLevelLookupTable = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkWindowLevelLookupTable = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.Build ()</tt> -  Generate lookup table as a linear ramp between MinimumTableValue
 and MaximumTableValue.
 </LI>
<LI>  <tt>obj.SetWindow (double window)</tt> -  Set the window for the lookup table.  The window is the difference
 between TableRange[0] and TableRange[1].
 </LI>
<LI>  <tt>double = obj.GetWindow ()</tt> -  Set the window for the lookup table.  The window is the difference
 between TableRange[0] and TableRange[1].
 </LI>
<LI>  <tt>obj.SetLevel (double level)</tt> -  Set the Level for the lookup table.  The level is the average of
 TableRange[0] and TableRange[1].
 </LI>
<LI>  <tt>double = obj.GetLevel ()</tt> -  Set the Level for the lookup table.  The level is the average of
 TableRange[0] and TableRange[1].
 </LI>
<LI>  <tt>obj.SetInverseVideo (int iv)</tt> -  Set inverse video on or off.  You can achieve the same effect by
 switching the MinimumTableValue and the MaximumTableValue.
 </LI>
<LI>  <tt>int = obj.GetInverseVideo ()</tt> -  Set inverse video on or off.  You can achieve the same effect by
 switching the MinimumTableValue and the MaximumTableValue.
 </LI>
<LI>  <tt>obj.InverseVideoOn ()</tt> -  Set inverse video on or off.  You can achieve the same effect by
 switching the MinimumTableValue and the MaximumTableValue.
 </LI>
<LI>  <tt>obj.InverseVideoOff ()</tt> -  Set inverse video on or off.  You can achieve the same effect by
 switching the MinimumTableValue and the MaximumTableValue.
 </LI>
<LI>  <tt>obj.SetMinimumTableValue (double , double , double , double )</tt> -  Set the minimum table value.  All lookup table entries below the
 start of the ramp will be set to this color.  After you change
 this value, you must re-build the lookup table.
 </LI>
<LI>  <tt>obj.SetMinimumTableValue (double  a[4])</tt> -  Set the minimum table value.  All lookup table entries below the
 start of the ramp will be set to this color.  After you change
 this value, you must re-build the lookup table.
 </LI>
<LI>  <tt>double = obj. GetMinimumTableValue ()</tt> -  Set the minimum table value.  All lookup table entries below the
 start of the ramp will be set to this color.  After you change
 this value, you must re-build the lookup table.
 </LI>
<LI>  <tt>obj.SetMaximumTableValue (double , double , double , double )</tt> -  Set the maximum table value. All lookup table entries above the
 end of the ramp will be set to this color.  After you change
 this value, you must re-build the lookup table.
 </LI>
<LI>  <tt>obj.SetMaximumTableValue (double  a[4])</tt> -  Set the maximum table value. All lookup table entries above the
 end of the ramp will be set to this color.  After you change
 this value, you must re-build the lookup table.
 </LI>
<LI>  <tt>double = obj. GetMaximumTableValue ()</tt> -  Set the maximum table value. All lookup table entries above the
 end of the ramp will be set to this color.  After you change
 this value, you must re-build the lookup table.
 </LI>
<LI>  <tt>obj.SetMinimumColor (int r, int g, int b, int a)</tt> -  @deprecated For backwards compatibility: specify the color using 
 integers in the range [0,255].  
 </LI>
<LI>  <tt>obj.SetMinimumColor (char rgba[4])</tt> -  @deprecated For backwards compatibility: specify the color using 
 integers in the range [0,255].  
 </LI>
<LI>  <tt>obj.GetMinimumColor (char rgba[4])</tt> -  @deprecated For backwards compatibility: specify the color using 
 integers in the range [0,255].  
 </LI>
<LI>  <tt>obj.SetMaximumColor (int r, int g, int b, int a)</tt> -  @deprecated For backwards compatibility: specify the color using 
 integers in the range [0,255].  
 </LI>
<LI>  <tt>obj.SetMaximumColor (char rgba[4])</tt> -  @deprecated For backwards compatibility: specify the color using 
 integers in the range [0,255].  
 </LI>
<LI>  <tt>obj.GetMaximumColor (char rgba[4])</tt> -  @deprecated For backwards compatibility: specify the color using 
 integers in the range [0,255].  
 </LI>
</UL>
*/
