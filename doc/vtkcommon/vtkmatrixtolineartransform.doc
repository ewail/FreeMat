/*!
\page vtkcommon_vtkmatrixtolineartransform vtkMatrixToLinearTransform

<p>
Section: \ref sec_vtkcommon "Visualization Toolkit Common Classes"
\section Usage
 This is a very simple class which allows a vtkMatrix4x4 to be used in
 place of a vtkLinearTransform or vtkAbstractTransform.  For example,
 if you use it as a proxy between a matrix and vtkTransformPolyDataFilter
 then any modifications to the matrix will automatically be reflected in
 the output of the filter.

To create an instance of class vtkMatrixToLinearTransform, simply
invoke its constructor as follows
\verbatim
  obj = vtkMatrixToLinearTransform
\endverbatim
\section Methods
The class vtkMatrixToLinearTransform has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkMatrixToLinearTransform class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkMatrixToLinearTransform = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkMatrixToLinearTransform = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetInput (vtkMatrix4x4 )</tt> -  Set the input matrix.  Any modifications to the matrix will be
 reflected in the transformation.
 </LI>
<LI>  <tt>vtkMatrix4x4 = obj.GetInput ()</tt> -  Set the input matrix.  Any modifications to the matrix will be
 reflected in the transformation.
 </LI>
<LI>  <tt>obj.Inverse ()</tt> -  The input matrix is left as-is, but the transformation matrix
 is inverted.
 </LI>
<LI>  <tt>long = obj.GetMTime ()</tt> -  Get the MTime: this is the bit of magic that makes everything work.
 </LI>
<LI>  <tt>vtkAbstractTransform = obj.MakeTransform ()</tt> -  Make a new transform of the same type.
 </LI>
<LI>  <tt>obj.SetMatrix (vtkMatrix4x4 matrix)</tt> -  @deprecated This method is deprecated.
 </LI>
</UL>
*/
