/*!
\page vtkcommon_vtkparametricellipsoid vtkParametricEllipsoid

<p>
Section: \ref sec_vtkcommon "Visualization Toolkit Common Classes"
\section Usage
 vtkParametricEllipsoid generates an ellipsoid.
 If all the radii are the same, we have a sphere.
 An oblate spheroid occurs if RadiusX = RadiusY > RadiusZ. 
 Here the Z-axis forms the symmetry axis. To a first
 approximation, this is the shape of the earth.
 A prolate spheroid occurs if RadiusX = RadiusY < RadiusZ.

 For further information about this surface, please consult the 
 technical description "Parametric surfaces" in http://www.vtk.org/documents.php 
 in the "VTK Technical Documents" section in the VTk.org web pages.

 .SECTION Thanks
 Andrew Maclean a.maclean@cas.edu.au for creating and contributing the
 class.


To create an instance of class vtkParametricEllipsoid, simply
invoke its constructor as follows
\verbatim
  obj = vtkParametricEllipsoid
\endverbatim
\section Methods
The class vtkParametricEllipsoid has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkParametricEllipsoid class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkParametricEllipsoid = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkParametricEllipsoid = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>int = obj.GetDimension ()</tt> -  Set/Get the scaling factor for the x-axis. Default = 1.
 </LI>
<LI>  <tt>obj.SetXRadius (double )</tt> -  Set/Get the scaling factor for the x-axis. Default = 1.
 </LI>
<LI>  <tt>double = obj.GetXRadius ()</tt> -  Set/Get the scaling factor for the x-axis. Default = 1.
 </LI>
<LI>  <tt>obj.SetYRadius (double )</tt> -  Set/Get the scaling factor for the y-axis. Default = 1.
 </LI>
<LI>  <tt>double = obj.GetYRadius ()</tt> -  Set/Get the scaling factor for the y-axis. Default = 1.
 </LI>
<LI>  <tt>obj.SetZRadius (double )</tt> -  Set/Get the scaling factor for the z-axis. Default = 1.
 </LI>
<LI>  <tt>double = obj.GetZRadius ()</tt> -  Set/Get the scaling factor for the z-axis. Default = 1.
 </LI>
<LI>  <tt>obj.Evaluate (double uvw[3], double Pt[3], double Duvw[9])</tt> -  An ellipsoid.

 This function performs the mapping \f$f(u,v) \rightarrow (x,y,x)\f$, returning it
 as Pt. It also returns the partial derivatives Du and Dv.
 \f$Pt = (x, y, z), Du = (dx/du, dy/du, dz/du), Dv = (dx/dv, dy/dv, dz/dv)\f$ .
 Then the normal is \f$N = Du X Dv\f$ .
 </LI>
<LI>  <tt>double = obj.EvaluateScalar (double uvw[3], double Pt[3], double Duvw[9])</tt> -  Calculate a user defined scalar using one or all of uvw, Pt, Duvw.

 uvw are the parameters with Pt being the the cartesian point, 
 Duvw are the derivatives of this point with respect to u, v and w.
 Pt, Duvw are obtained from Evaluate().

 This function is only called if the ScalarMode has the value
 vtkParametricFunctionSource::SCALAR_FUNCTION_DEFINED

 If the user does not need to calculate a scalar, then the 
 instantiated function should return zero. 

 </LI>
</UL>
*/
