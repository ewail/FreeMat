/*!
\page typecast_char CHAR Convert to character array or string

<p>
Section: \ref sec_typecast "Type Conversion Functions"
\section Usage
The <tt>char</tt> function can be used to convert an array
into a string.  It has several forms.  The first form
is
\verbatim
   y = char(x)
\endverbatim
where <tt>x</tt> is a numeric array containing character codes.
FreeMat does not currently support Unicode, so the
character codes must be in the range of <tt>[0,255]</tt>.  The
output is a string of the same size as <tt>x</tt>.  A second
form is
\verbatim
   y = char(c)
\endverbatim
where <tt>c</tt> is a cell array of strings, creates a matrix string
where each row contains a string from the corresponding cell array.
The third form is
\verbatim
   y = char(s1, s2, s3, ...)
\endverbatim
where <tt>si</tt> are a character arrays.  The result is a matrix string
where each row contains a string from the corresponding argument.
\section Example
Here is an example of the first technique being used to generate
a string containing some ASCII characters

\if FRAGMENT
frag_typecast_char_000.m
0
char([32:64;65:97])
\endif


\verbinclude frag_typecast_char_000.m.out 

In the next example, we form a character array from a set of
strings in a cell array.  Note that the character array is padded
with spaces to make the rows all have the same length.

\if FRAGMENT
frag_typecast_char_001.m
0
char({'hello','to','the','world'})
\endif


\verbinclude frag_typecast_char_001.m.out 

In the last example, we pass the individual strings as explicit
arguments to <tt>char</tt>

\if FRAGMENT
frag_typecast_char_002.m
0
char('hello','to','the','world')
\endif


\verbinclude frag_typecast_char_002.m.out 

*/
