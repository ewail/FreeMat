/*!
\page typecast_uint8 UINT8 Convert to Unsigned 8-bit Integer

<p>
Section: \ref sec_typecast "Type Conversion Functions"
\section Usage
Converts the argument to an unsigned 8-bit Integer.  The syntax
for its use is
\verbatim
   y = uint8(x)
\endverbatim
where <tt>x</tt> is an <tt>n</tt>-dimensional numerical array.  Conversion
follows saturation rules (e.g., if <tt>x</tt> is outside the normal
range for an unsigned 8-bit integer of <tt>[0,255]</tt>, it is truncated 
to that range. Note that
both <tt>NaN</tt> and <tt>Inf</tt> both map to 0.
\section Example
The following piece of code demonstrates several uses of <tt>uint8</tt>.

\if FRAGMENT
frag_typecast_uint8_000.m
0
uint8(200)
\endif


\verbinclude frag_typecast_uint8_000.m.out 

In the next example, an integer outside the range  of the type is passed in.  
The result is truncated to the maximum value of the data type.

\if FRAGMENT
frag_typecast_uint8_001.m
0
uint8(400)
\endif


\verbinclude frag_typecast_uint8_001.m.out 

In the next example, a negative integer is passed in.  The result is 
trunated to zero.

\if FRAGMENT
frag_typecast_uint8_002.m
0
uint8(-100)
\endif


\verbinclude frag_typecast_uint8_002.m.out 

In the next example, a positive double precision argument is passed in.  
The result is the unsigned integer that is closest to the argument.

\if FRAGMENT
frag_typecast_uint8_003.m
0
uint8(pi)
\endif


\verbinclude frag_typecast_uint8_003.m.out 

In the next example, a complex argument is passed in.  The result is 
complex unsigned integer that is closest to the argument.

\if FRAGMENT
frag_typecast_uint8_004.m
0
uint8(5+2*i)
\endif


\verbinclude frag_typecast_uint8_004.m.out 

In the next example, a string argument is passed in.  The string argument 
is converted into an integer array corresponding to the ASCII values of each character.

\if FRAGMENT
frag_typecast_uint8_005.m
0
uint8('helo')
\endif


\verbinclude frag_typecast_uint8_005.m.out 

In the last example, a cell-array is passed in.  For cell-arrays and 
structure arrays, the result is an error.

\if FRAGMENT
frag_typecast_uint8_006.m
1
uint8({4})
\endif


\verbinclude frag_typecast_uint8_006.m.out 

*/
