/*!
\page typecast_float FLOAT Convert to 32-bit Floating Point

<p>
Section: \ref sec_typecast "Type Conversion Functions"
\section Usage
Converts the argument to a 32-bit floating point number.  The syntax
for its use is
\verbatim
   y = float(x)
\endverbatim
where <tt>x</tt> is an <tt>n</tt>-dimensional numerical array.  
Conversion follows the saturation rules.  Note that both 
<tt>NaN</tt> and <tt>Inf</tt> are both preserved under type conversion.
\section Example
The following piece of code demonstrates several uses of <tt>float</tt>. 
First, we convert from an integer (the argument is an integer 
because no decimal is present):

\if FRAGMENT
frag_typecast_float_000.m
0
float(200)
\endif


\verbinclude frag_typecast_float_000.m.out 

In the next example, a double precision argument is passed 
in

\if FRAGMENT
frag_typecast_float_001.m
0
float(400.0)
\endif


\verbinclude frag_typecast_float_001.m.out 

In the next example, a complex argument is passed in.

\if FRAGMENT
frag_typecast_float_002.m
0
float(3.0+4.0*i)
\endif


\verbinclude frag_typecast_float_002.m.out 

In the next example, a string argument is passed in.  The string 
argument is converted into an integer array corresponding to the 
ASCII values of each character.

\if FRAGMENT
frag_typecast_float_003.m
0
float('helo')
\endif


\verbinclude frag_typecast_float_003.m.out 

In the last example, a cell-array is passed in.  For cell-arrays 
and structure arrays, the result is an error.

\if FRAGMENT
frag_typecast_float_004.m
1
float({4})
\endif


\verbinclude frag_typecast_float_004.m.out 

*/
