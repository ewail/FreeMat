/*!
\page typecast_uint64 UINT64 Convert to Unsigned 64-bit Integer

<p>
Section: \ref sec_typecast "Type Conversion Functions"
\section Usage
Converts the argument to an unsigned 64-bit Integer.  The syntax
for its use is
\verbatim
   y = uint64(x)
\endverbatim
where <tt>x</tt> is an <tt>n</tt>-dimensional numerical array.  Conversion
follows saturation rules (e.g., if <tt>x</tt> is outside the normal
range for an unsigned 64-bit integer of <tt>[0,2^64-1]</tt>, it is
truncated to that range.  Note that both <tt>NaN</tt> and <tt>Inf</tt> both map to 0.
\section Example
The following piece of code demonstrates several uses of <tt>uint64</tt>.

\if FRAGMENT
frag_typecast_uint64_000.m
0
uint64(200)
\endif


\verbinclude frag_typecast_uint64_000.m.out 

In the next example, an integer outside the range  of the type is passed in.
The result is truncated to the maximum value of the data type.

\if FRAGMENT
frag_typecast_uint64_001.m
0
uint64(40e9)
\endif


\verbinclude frag_typecast_uint64_001.m.out 

In the next example, a negative integer is passed in.  The result is zero.

\if FRAGMENT
frag_typecast_uint64_002.m
0
uint64(-100)
\endif


\verbinclude frag_typecast_uint64_002.m.out 

In the next example, a positive double precision argument is passed in.  
The result is the unsigned integer that is closest to the argument.

\if FRAGMENT
frag_typecast_uint64_003.m
0
uint64(pi)
\endif


\verbinclude frag_typecast_uint64_003.m.out 

In the next example, a complex argument is passed in.  The result is the 
complex unsigned integer that is closest to the argument.

\if FRAGMENT
frag_typecast_uint64_004.m
0
uint64(5+2*i)
\endif


\verbinclude frag_typecast_uint64_004.m.out 

In the next example, a string argument is passed in.  The string argument is 
converted into an integer array corresponding to the ASCII values of each character.

\if FRAGMENT
frag_typecast_uint64_005.m
0
uint64('helo')
\endif


\verbinclude frag_typecast_uint64_005.m.out 

In the last example, a cell-array is passed in.  For cell-arrays and structure 
arrays, the result is an error.

\if FRAGMENT
frag_typecast_uint64_006.m
1
uint64({4})
\endif


\verbinclude frag_typecast_uint64_006.m.out 

*/
