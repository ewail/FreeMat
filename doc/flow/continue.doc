/*!
\page flow_continue CONTINUE Continue Execution In Loop

<p>
Section: \ref sec_flow "Flow Control"
\section Usage
The <tt>continue</tt> statement is used to change the order of
execution within a loop.  The <tt>continue</tt> statement can
be used inside a <tt>for</tt> loop or a <tt>while</tt> loop.  The
syntax for its use is
\verbatim
   continue
\endverbatim
inside the body of the loop.  The <tt>continue</tt> statement
forces execution to start at the top of the loop with
the next iteration.  The examples section shows how
the <tt>continue</tt> statement works.
\section Example
Here is a simple example of using a <tt>continue</tt> statement.
We want to sum the integers from <tt>1</tt> to <tt>10</tt>, but not
the number <tt>5</tt>.  We will use a <tt>for</tt> loop and a continue
statement.

\if FILE
continue_ex.m
function accum = continue_ex
  accum = 0;
  for i=1:10
    if (i==5)
      continue;
    end
    accum = accum + 1; %skipped if i == 5!
  end
\endif
\verbatim
     continue_ex.m
\endverbatim

\verbinclude continue_ex.m

The function is exercised here:

\if FRAGMENT
frag_flow_continue_000.m
0
continue_ex
sum([1:4,6:10])
\endif


\verbinclude frag_flow_continue_000.m.out 

*/
