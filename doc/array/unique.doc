/*!
\page array_unique UNIQUE Unique

<p>
Section: \ref sec_array "Array Generation and Manipulations"
\section Usage
Returns a vector containing the unique elements of an array.  The first
form is simply
\verbatim
   y = unique(x)
\endverbatim
where <tt>x</tt> is either a numerical array or a cell-array of strings.  The 
result is sorted in increasing order.  You can also retrieve two sets
of index vectors
\verbatim
   [y, m, n] = unique(x)
\endverbatim
such that <tt>y = x(m)</tt> and <tt>x = y(n)</tt>.  If the argument <tt>x</tt> is a matrix,
you can also indicate that FreeMat should look for unique rows in the
matrix via
\verbatim
   y = unique(x,'rows')
\endverbatim
and
\verbatim
   [y, m, n] = unique(x,'rows')
\endverbatim
\section Example
Here is an example in row mode

\if FRAGMENT
frag_array_unique_000.m
0
A = randi(1,3*ones(15,3))
unique(A,'rows')
[b,m,n] = unique(A,'rows');
b
A(m,:)
b(n,:)
\endif


\verbinclude frag_array_unique_000.m.out 

Here is an example in vector mode

\if FRAGMENT
frag_array_unique_001.m
0
A = randi(1,5*ones(10,1))
unique(A)
[b,m,n] = unique(A,'rows');
b
A(m)
b(n)
\endif


\verbinclude frag_array_unique_001.m.out 

For cell arrays of strings.

\if FRAGMENT
frag_array_unique_002.m
0
A = {'hi','bye','good','tell','hi','bye'}
unique(A)
\endif


\verbinclude frag_array_unique_002.m.out 

*/
