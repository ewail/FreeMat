/*!
\page array_ndgrid NDGRID Generate N-Dimensional Grid

<p>
Section: \ref sec_array "Array Generation and Manipulations"
\section Usage
Generates N-dimensional grids, each of which is constant in all but
one dimension.  The syntax for its use is either
\verbatim
   [y1, y2, ..., ym] = ndgrid(x1, x2, ..., xn)
\endverbatim
where <tt>m <= n</tt> or 
\verbatim
   [y1, y2, ..., ym] = ndgrid(x1)
\endverbatim
which is equivalent to the first form, with <tt>x1=x2=...=xn</tt>.  Each
output <tt>yi</tt> is an <tt>n</tt>-dimensional array, with values such that
\f[
y_i(d_1,\ldots,d_{i-1},d_{i},d_{i+1},\ldots,d_m) = x_i(d_{i})
\f]
<tt>ndgrid</tt> is useful for evaluating multivariate functionals over a
range of arguments.  It is a generalization of <tt>meshgrid</tt>, except
that <tt>meshgrid</tt> transposes the dimensions corresponding to the 
first two arguments to better fit graphical applications.
\section Example
Here is a simple <tt>ndgrid</tt> example

\if FRAGMENT
frag_array_ndgrid_000.m
0
[a,b] = ndgrid(1:2,3:5)
[a,b,c] = ndgrid(1:2,3:5,0:1)
\endif


\verbinclude frag_array_ndgrid_000.m.out 

Here we use the second form

\if FRAGMENT
frag_array_ndgrid_001.m
0
[a,b,c] = ndgrid(1:3)
\endif


\verbinclude frag_array_ndgrid_001.m.out 

*/
