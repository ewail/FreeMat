/*!
\page array_ones ONES Array of Ones

<p>
Section: \ref sec_array "Array Generation and Manipulations"
\section Usage
Creates an array of ones of the specified size.  Two seperate 
syntaxes are possible.  The first syntax specifies the array 
dimensions as a sequence of scalar dimensions:
\verbatim
   y = ones(d1,d2,...,dn).
\endverbatim
The resulting array has the given dimensions, and is filled with
all ones.  The type of <tt>y</tt> is <tt>float</tt>, a 32-bit floating
point array.  To get arrays of other types, use the typecast 
functions (e.g., <tt>uint8</tt>, <tt>int8</tt>, etc.).
    
The second syntax specifies the array dimensions as a vector,
where each element in the vector specifies a dimension length:
\verbatim
   y = ones([d1,d2,...,dn]).
\endverbatim
This syntax is more convenient for calling <tt>ones</tt> using a 
variable for the argument.  In both cases, specifying only one
dimension results in a square matrix output.
\section Example
The following examples demonstrate generation of some arrays of ones
using the first form.

\if FRAGMENT
frag_array_ones_000.m
0
ones(2,3,2)
ones(1,3)
\endif


\verbinclude frag_array_ones_000.m.out 

The same expressions, using the second form.

\if FRAGMENT
frag_array_ones_001.m
0
ones([2,6])
ones([1,3])
\endif


\verbinclude frag_array_ones_001.m.out 

Finally, an example of using the type casting function <tt>uint16</tt> to generate an array of 16-bit unsigned integers with a value of 1.

\if FRAGMENT
frag_array_ones_002.m
0
uint16(ones(3))
\endif


\verbinclude frag_array_ones_002.m.out 

*/
