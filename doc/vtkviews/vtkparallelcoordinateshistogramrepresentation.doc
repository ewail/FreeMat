/*!
\page vtkviews_vtkparallelcoordinateshistogramrepresentation vtkParallelCoordinatesHistogramRepresentation

<p>
Section: \ref sec_vtkviews "Visualization Toolkit View Classes"
\section Usage
  A parallel coordinates plot represents each variable in a multivariate
  data set as a separate axis.  Individual samples of that data set are
  represented as a polyline that pass through each variable axis at 
  positions that correspond to data values.  This class can generate
  parallel coordinates plots identical to its superclass 
  (vtkParallelCoordinatesRepresentation) and has the same interaction
  styles.

  In addition to the standard parallel coordinates plot, this class also
  can draw a histogram summary of the parallel coordinates plot.  
  Rather than draw every row in an input data set, first it computes
  a 2D histogram for all neighboring variable axes, then it draws
  bar (thickness corresponds to bin size) for each bin the histogram
  with opacity weighted by the number of rows contained in the bin.
  The result is essentially a density map.  

  Because this emphasizes dense regions over sparse outliers, this class
  also uses a vtkComputeHistogram2DOutliers instance to identify outlier
  table rows and draws those as standard parallel coordinates lines.


To create an instance of class vtkParallelCoordinatesHistogramRepresentation, simply
invoke its constructor as follows
\verbatim
  obj = vtkParallelCoordinatesHistogramRepresentation
\endverbatim
\section Methods
The class vtkParallelCoordinatesHistogramRepresentation has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkParallelCoordinatesHistogramRepresentation class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkParallelCoordinatesHistogramRepresentation = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkParallelCoordinatesHistogramRepresentation = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.ApplyViewTheme (vtkViewTheme theme)</tt> -  Apply the theme to this view.
 </LI>
<LI>  <tt>obj.SetUseHistograms (int )</tt> -  Whether to use the histogram rendering mode or the superclass's line rendering mode
 </LI>
<LI>  <tt>int = obj.GetUseHistograms ()</tt> -  Whether to use the histogram rendering mode or the superclass's line rendering mode
 </LI>
<LI>  <tt>obj.UseHistogramsOn ()</tt> -  Whether to use the histogram rendering mode or the superclass's line rendering mode
 </LI>
<LI>  <tt>obj.UseHistogramsOff ()</tt> -  Whether to use the histogram rendering mode or the superclass's line rendering mode
 </LI>
<LI>  <tt>obj.SetShowOutliers (int )</tt> -  Whether to compute and show outlier lines
 </LI>
<LI>  <tt>int = obj.GetShowOutliers ()</tt> -  Whether to compute and show outlier lines
 </LI>
<LI>  <tt>obj.ShowOutliersOn ()</tt> -  Whether to compute and show outlier lines
 </LI>
<LI>  <tt>obj.ShowOutliersOff ()</tt> -  Whether to compute and show outlier lines
 </LI>
<LI>  <tt>obj.SetHistogramLookupTableRange (double , double )</tt> -  Control over the range of the lookup table used to draw the histogram quads.
 </LI>
<LI>  <tt>obj.SetHistogramLookupTableRange (double  a[2])</tt> -  Control over the range of the lookup table used to draw the histogram quads.
 </LI>
<LI>  <tt>double = obj. GetHistogramLookupTableRange ()</tt> -  Control over the range of the lookup table used to draw the histogram quads.
 </LI>
<LI>  <tt>obj.SetPreferredNumberOfOutliers (int )</tt> -  Target maximum number of outliers to be drawn, although not guaranteed.
 </LI>
<LI>  <tt>int = obj.GetPreferredNumberOfOutliers ()</tt> -  Target maximum number of outliers to be drawn, although not guaranteed.
 </LI>
<LI>  <tt>int = obj.SwapAxisPositions (int position1, int position2)</tt> -  Calls superclass swap, and assures that only histograms affected by the 
 swap get recomputed.
 </LI>
<LI>  <tt>int = obj.SetRangeAtPosition (int position, double range[2])</tt> -  Calls the superclass method, and assures that only the two histograms
 affect by this call get recomputed.
 </LI>
</UL>
*/
