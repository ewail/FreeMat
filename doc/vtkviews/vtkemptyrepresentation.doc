/*!
\page vtkviews_vtkemptyrepresentation vtkEmptyRepresentation

<p>
Section: \ref sec_vtkviews "Visualization Toolkit View Classes"
\section Usage

To create an instance of class vtkEmptyRepresentation, simply
invoke its constructor as follows
\verbatim
  obj = vtkEmptyRepresentation
\endverbatim
\section Methods
The class vtkEmptyRepresentation has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkEmptyRepresentation class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkEmptyRepresentation = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkEmptyRepresentation = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>vtkAlgorithmOutput = obj.GetInternalAnnotationOutputPort ()</tt> -  Since this representation has no inputs, override superclass 
 implementation with one that ignores "port" and "conn" and still allows it
 to have an annotation output.
 </LI>
<LI>  <tt>vtkAlgorithmOutput = obj.GetInternalAnnotationOutputPort (int port)</tt> -  Since this representation has no inputs, override superclass 
 implementation with one that ignores "port" and "conn" and still allows it
 to have an annotation output.
 </LI>
<LI>  <tt>vtkAlgorithmOutput = obj.GetInternalAnnotationOutputPort (int port, int conn)</tt> -  Since this representation has no inputs, override superclass 
 implementation with one that ignores "port" and "conn" and still allows it
 to have an annotation output.
 </LI>
</UL>
*/
