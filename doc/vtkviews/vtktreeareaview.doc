/*!
\page vtkviews_vtktreeareaview vtkTreeAreaView

<p>
Section: \ref sec_vtkviews "Visualization Toolkit View Classes"
\section Usage
 Takes a graph and a hierarchy (currently a tree) and lays out the graph
 vertices based on their categorization within the hierarchy.

 .SEE ALSO
 vtkGraphLayoutView

 .SECTION Thanks
 Thanks to Jason Shepherd for implementing this class

To create an instance of class vtkTreeAreaView, simply
invoke its constructor as follows
\verbatim
  obj = vtkTreeAreaView
\endverbatim
\section Methods
The class vtkTreeAreaView has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkTreeAreaView class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkTreeAreaView = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkTreeAreaView = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>vtkDataRepresentation = obj.SetTreeFromInputConnection (vtkAlgorithmOutput conn)</tt> -  Set the tree and graph representations to the appropriate input ports.
 </LI>
<LI>  <tt>vtkDataRepresentation = obj.SetTreeFromInput (vtkTree input)</tt> -  Set the tree and graph representations to the appropriate input ports.
 </LI>
<LI>  <tt>vtkDataRepresentation = obj.SetGraphFromInputConnection (vtkAlgorithmOutput conn)</tt> -  Set the tree and graph representations to the appropriate input ports.
 </LI>
<LI>  <tt>vtkDataRepresentation = obj.SetGraphFromInput (vtkGraph input)</tt> -  Set the tree and graph representations to the appropriate input ports.
 </LI>
<LI>  <tt>obj.SetAreaLabelArrayName (string name)</tt> -  The array to use for area labeling.  Default is "label".
 </LI>
<LI>  <tt>string = obj.GetAreaLabelArrayName ()</tt> -  The array to use for area labeling.  Default is "label".
 </LI>
<LI>  <tt>obj.SetAreaSizeArrayName (string name)</tt> -  The array to use for area sizes. Default is "size".
 </LI>
<LI>  <tt>string = obj.GetAreaSizeArrayName ()</tt> -  The array to use for area sizes. Default is "size".
 </LI>
<LI>  <tt>obj.SetLabelPriorityArrayName (string name)</tt> -  The array to use for area labeling priority.
 Default is "GraphVertexDegree".
 </LI>
<LI>  <tt>string = obj.GetLabelPriorityArrayName ()</tt> -  The array to use for area labeling priority.
 Default is "GraphVertexDegree".
 </LI>
<LI>  <tt>obj.SetEdgeLabelArrayName (string name)</tt> -  The array to use for edge labeling.  Default is "label".
 </LI>
<LI>  <tt>string = obj.GetEdgeLabelArrayName ()</tt> -  The array to use for edge labeling.  Default is "label".
 </LI>
<LI>  <tt>obj.SetAreaHoverArrayName (string name)</tt> -  The name of the array whose value appears when the mouse hovers
 over a rectangle in the treemap.
 This must be a string array.
 </LI>
<LI>  <tt>string = obj.GetAreaHoverArrayName ()</tt> -  The name of the array whose value appears when the mouse hovers
 over a rectangle in the treemap.
 This must be a string array.
 </LI>
<LI>  <tt>obj.SetAreaLabelVisibility (bool vis)</tt> -  Whether to show area labels.  Default is off.
 </LI>
<LI>  <tt>bool = obj.GetAreaLabelVisibility ()</tt> -  Whether to show area labels.  Default is off.
 </LI>
<LI>  <tt>obj.AreaLabelVisibilityOn ()</tt> -  Whether to show area labels.  Default is off.
 </LI>
<LI>  <tt>obj.AreaLabelVisibilityOff ()</tt> -  Whether to show area labels.  Default is off.
 </LI>
<LI>  <tt>obj.SetEdgeLabelVisibility (bool vis)</tt> -  Whether to show edge labels.  Default is off.
 </LI>
<LI>  <tt>bool = obj.GetEdgeLabelVisibility ()</tt> -  Whether to show edge labels.  Default is off.
 </LI>
<LI>  <tt>obj.EdgeLabelVisibilityOn ()</tt> -  Whether to show edge labels.  Default is off.
 </LI>
<LI>  <tt>obj.EdgeLabelVisibilityOff ()</tt> -  Whether to show edge labels.  Default is off.
 </LI>
<LI>  <tt>obj.SetAreaColorArrayName (string name)</tt> -  The array to use for coloring vertices.  Default is "color".
 </LI>
<LI>  <tt>string = obj.GetAreaColorArrayName ()</tt> -  The array to use for coloring vertices.  Default is "color".
 </LI>
<LI>  <tt>obj.SetColorAreas (bool vis)</tt> -  Whether to color vertices.  Default is off.
 </LI>
<LI>  <tt>bool = obj.GetColorAreas ()</tt> -  Whether to color vertices.  Default is off.
 </LI>
<LI>  <tt>obj.ColorAreasOn ()</tt> -  Whether to color vertices.  Default is off.
 </LI>
<LI>  <tt>obj.ColorAreasOff ()</tt> -  Whether to color vertices.  Default is off.
 </LI>
<LI>  <tt>obj.SetEdgeColorArrayName (string name)</tt> -  The array to use for coloring edges.  Default is "color".
 </LI>
<LI>  <tt>string = obj.GetEdgeColorArrayName ()</tt> -  The array to use for coloring edges.  Default is "color".
 </LI>
<LI>  <tt>obj.SetEdgeColorToSplineFraction ()</tt> -  Set the color to be the spline fraction
 </LI>
<LI>  <tt>obj.SetShrinkPercentage (double value)</tt> -  Set the region shrink percentage between 0.0 and 1.0.
 </LI>
<LI>  <tt>double = obj.GetShrinkPercentage ()</tt> -  Set the region shrink percentage between 0.0 and 1.0.
 </LI>
<LI>  <tt>obj.SetColorEdges (bool vis)</tt> -  Whether to color edges.  Default is off.
 </LI>
<LI>  <tt>bool = obj.GetColorEdges ()</tt> -  Whether to color edges.  Default is off.
 </LI>
<LI>  <tt>obj.ColorEdgesOn ()</tt> -  Whether to color edges.  Default is off.
 </LI>
<LI>  <tt>obj.ColorEdgesOff ()</tt> -  Whether to color edges.  Default is off.
 </LI>
<LI>  <tt>obj.SetBundlingStrength (double strength)</tt> -  Set the bundling strength.
 </LI>
<LI>  <tt>double = obj.GetBundlingStrength ()</tt> -  Set the bundling strength.
 </LI>
<LI>  <tt>obj.SetAreaLabelFontSize (int size)</tt> -  The size of the font used for area labeling
 </LI>
<LI>  <tt>int = obj.GetAreaLabelFontSize ()</tt> -  The size of the font used for area labeling
 </LI>
<LI>  <tt>obj.SetEdgeLabelFontSize (int size)</tt> -  The size of the font used for edge labeling
 </LI>
<LI>  <tt>int = obj.GetEdgeLabelFontSize ()</tt> -  The size of the font used for edge labeling
 </LI>
<LI>  <tt>obj.SetLayoutStrategy (vtkAreaLayoutStrategy strategy)</tt> -  The layout strategy for producing spatial regions for the tree.
 </LI>
<LI>  <tt>vtkAreaLayoutStrategy = obj.GetLayoutStrategy ()</tt> -  The layout strategy for producing spatial regions for the tree.
 </LI>
<LI>  <tt>obj.SetUseRectangularCoordinates (bool rect)</tt> -  Whether the area represents radial or rectangular coordinates.
 </LI>
<LI>  <tt>bool = obj.GetUseRectangularCoordinates ()</tt> -  Whether the area represents radial or rectangular coordinates.
 </LI>
<LI>  <tt>obj.UseRectangularCoordinatesOn ()</tt> -  Whether the area represents radial or rectangular coordinates.
 </LI>
<LI>  <tt>obj.UseRectangularCoordinatesOff ()</tt> -  Whether the area represents radial or rectangular coordinates.
 </LI>
<LI>  <tt>obj.SetEdgeScalarBarVisibility (bool b)</tt> -  Visibility of scalar bar actor for edges.
 </LI>
<LI>  <tt>bool = obj.GetEdgeScalarBarVisibility ()</tt> -  Visibility of scalar bar actor for edges.
 </LI>
</UL>
*/
