/*!
\page vtkinfovis_vtkpairwiseextracthistogram2d vtkPairwiseExtractHistogram2D

<p>
Section: \ref sec_vtkinfovis "Visualization Toolkit Infovis Classes"
\section Usage
  This class computes a 2D histogram between all adjacent pairs of columns 
  of an input vtkTable. Internally it creates multiple vtkExtractHistogram2D
  instances (one for each pair of adjacent table columns).  It also
  manages updating histogram computations intelligently, only recomputing
  those histograms for whom a relevant property has been altered.

  Note that there are two different outputs from this filter.  One is a 
  table for which each column contains a flattened 2D histogram array.
  The other is a vtkMultiBlockDataSet for which each block is a 
  vtkImageData representation of the 2D histogram.


To create an instance of class vtkPairwiseExtractHistogram2D, simply
invoke its constructor as follows
\verbatim
  obj = vtkPairwiseExtractHistogram2D
\endverbatim
\section Methods
The class vtkPairwiseExtractHistogram2D has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkPairwiseExtractHistogram2D class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkPairwiseExtractHistogram2D = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkPairwiseExtractHistogram2D = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetNumberOfBins (int , int )</tt> -  Set/get the bin dimensions of the histograms to compute
 </LI>
<LI>  <tt>obj.SetNumberOfBins (int  a[2])</tt> -  Set/get the bin dimensions of the histograms to compute
 </LI>
<LI>  <tt>int = obj. GetNumberOfBins ()</tt> -  Set/get the bin dimensions of the histograms to compute
 </LI>
<LI>  <tt>obj.SetCustomColumnRangeIndex (int )</tt> -  Strange method for setting an index to be used for setting custom 
 column range. This was (probably) necessary to get this class
 to interact with the ParaView client/server message passing interface.
 </LI>
<LI>  <tt>obj.SetCustomColumnRangeByIndex (double , double )</tt> -  Strange method for setting an index to be used for setting custom 
 column range. This was (probably) necessary to get this class
 to interact with the ParaView client/server message passing interface.
 </LI>
<LI>  <tt>obj.SetCustomColumnRange (int col, double range[2])</tt> -  More standard way to set the custom range for a particular column.
 This makes sure that only the affected histograms know that they
 need to be updated.
 </LI>
<LI>  <tt>obj.SetCustomColumnRange (int col, double rmin, double rmax)</tt> -  More standard way to set the custom range for a particular column.
 This makes sure that only the affected histograms know that they
 need to be updated.
 </LI>
<LI>  <tt>obj.SetScalarType (int )</tt> -  Set the scalar type for each of the computed histograms.
 </LI>
<LI>  <tt>obj.SetScalarTypeToUnsignedInt ()</tt> -  Set the scalar type for each of the computed histograms.
 </LI>
<LI>  <tt>obj.SetScalarTypeToUnsignedLong ()</tt> -  Set the scalar type for each of the computed histograms.
 </LI>
<LI>  <tt>obj.SetScalarTypeToUnsignedShort ()</tt> -  Set the scalar type for each of the computed histograms.
 </LI>
<LI>  <tt>obj.SetScalarTypeToUnsignedChar ()</tt> -  Set the scalar type for each of the computed histograms.
 </LI>
<LI>  <tt>int = obj.GetScalarType ()</tt> -  Set the scalar type for each of the computed histograms.
 </LI>
<LI>  <tt>double = obj.GetMaximumBinCount (int idx)</tt> -  Get the maximum bin count for a single histogram
 </LI>
<LI>  <tt>double = obj.GetMaximumBinCount ()</tt> -  Get the maximum bin count over all histograms
 </LI>
<LI>  <tt>int = obj.GetBinRange (int idx, vtkIdType binX, vtkIdType binY, double range[4])</tt> -  Compute the range of the bin located at position (binX,binY) in
 the 2D histogram at idx.
 </LI>
<LI>  <tt>int = obj.GetBinRange (int idx, vtkIdType bin, double range[4])</tt> -  Get the range of the of the bin located at 1D position index bin
 in the 2D histogram array at idx.
 </LI>
<LI>  <tt>obj.GetBinWidth (int idx, double bw[2])</tt> -  Get the width of all of the bins. Also stored in the spacing
 ivar of the histogram image output at idx.
 </LI>
<LI>  <tt>vtkImageData = obj.GetOutputHistogramImage (int idx)</tt> -  Get the vtkImageData output of the idx'th histogram filter
 </LI>
<LI>  <tt>vtkExtractHistogram2D = obj.GetHistogramFilter (int idx)</tt> -  Get a pointer to the idx'th histogram filter.
 </LI>
<LI>  <tt>obj.Aggregate (vtkDataObjectCollection , vtkDataObject )</tt> -  Given a collection of models, calculate aggregate model.  Not used
 </LI>
</UL>
*/
