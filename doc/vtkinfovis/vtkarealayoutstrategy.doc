/*!
\page vtkinfovis_vtkarealayoutstrategy vtkAreaLayoutStrategy

<p>
Section: \ref sec_vtkinfovis "Visualization Toolkit Infovis Classes"
\section Usage
 All subclasses of this class perform a area layout on a tree.
 This involves assigning a region to each vertex in the tree,
 and placing that information in a data array with four components per
 tuple representing (innerRadius, outerRadius, startAngle, endAngle).

 Instances of subclasses of this class may be assigned as the layout
 strategy to vtkAreaLayout

 .SECTION Thanks
 Thanks to Jason Shepherd from Sandia National Laboratories
 for help developing this class.

To create an instance of class vtkAreaLayoutStrategy, simply
invoke its constructor as follows
\verbatim
  obj = vtkAreaLayoutStrategy
\endverbatim
\section Methods
The class vtkAreaLayoutStrategy has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkAreaLayoutStrategy class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkAreaLayoutStrategy = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkAreaLayoutStrategy = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.Layout (vtkTree inputTree, vtkDataArray areaArray, vtkDataArray sizeArray)</tt> -  Perform the layout of the input tree, and store the sector
 bounds of each vertex as a tuple in a data array.
 For radial layout, this is
 (innerRadius, outerRadius, startAngle, endAngle).
 For rectangular layout, this is
 (xmin, xmax, ymin, ymax).

 The sizeArray may be NULL, or may contain the desired
 size of each vertex in the tree.
 </LI>
<LI>  <tt>obj.LayoutEdgePoints (vtkTree inputTree, vtkDataArray areaArray, vtkDataArray sizeArray, vtkTree edgeLayoutTree)</tt>
 </LI>
<LI>  <tt>vtkIdType = obj.FindVertex (vtkTree tree, vtkDataArray array, float pnt[2])</tt> -  Returns the vertex id that contains pnt (or -1 if no one contains it)
 </LI>
<LI>  <tt>obj.SetShrinkPercentage (double )</tt>
 </LI>
<LI>  <tt>double = obj.GetShrinkPercentageMinValue ()</tt>
 </LI>
<LI>  <tt>double = obj.GetShrinkPercentageMaxValue ()</tt>
 </LI>
<LI>  <tt>double = obj.GetShrinkPercentage ()</tt>
 </LI>
</UL>
*/
