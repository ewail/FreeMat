/*!
\page vtkinfovis_vtktreemaplayout vtkTreeMapLayout

<p>
Section: \ref sec_vtkinfovis "Visualization Toolkit Infovis Classes"
\section Usage
 vtkTreeMapLayout assigns rectangular regions to each vertex in the tree,
 creating a tree map.  The data is added as a data array with four
 components per tuple representing the location and size of the
 rectangle using the format (Xmin, Xmax, Ymin, Ymax).

 This algorithm relies on a helper class to perform the actual layout.
 This helper class is a subclass of vtkTreeMapLayoutStrategy.

 .SECTION Thanks
 Thanks to Brian Wylie and Ken Moreland from Sandia National Laboratories
 for help developing this class.
 
 Tree map concept comes from:
 Shneiderman, B. 1992. Tree visualization with tree-maps: 2-d space-filling approach. 
 ACM Trans. Graph. 11, 1 (Jan. 1992), 92-99. 

To create an instance of class vtkTreeMapLayout, simply
invoke its constructor as follows
\verbatim
  obj = vtkTreeMapLayout
\endverbatim
\section Methods
The class vtkTreeMapLayout has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkTreeMapLayout class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkTreeMapLayout = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkTreeMapLayout = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>string = obj.GetRectanglesFieldName ()</tt> -  The field name to use for storing the rectangles for each vertex.
 The rectangles are stored in a quadruple float array
 (minX, maxX, minY, maxY).
 </LI>
<LI>  <tt>obj.SetRectanglesFieldName (string )</tt> -  The field name to use for storing the rectangles for each vertex.
 The rectangles are stored in a quadruple float array
 (minX, maxX, minY, maxY).
 </LI>
<LI>  <tt>obj.SetSizeArrayName (string name)</tt> -  The strategy to use when laying out the tree map.
 </LI>
<LI>  <tt>vtkTreeMapLayoutStrategy = obj.GetLayoutStrategy ()</tt> -  The strategy to use when laying out the tree map.
 </LI>
<LI>  <tt>obj.SetLayoutStrategy (vtkTreeMapLayoutStrategy strategy)</tt> -  The strategy to use when laying out the tree map.
 </LI>
<LI>  <tt>vtkIdType = obj.FindVertex (float pnt[2], float binfo)</tt> -  Returns the vertex id that contains pnt (or -1 if no one contains it)
 </LI>
<LI>  <tt>obj.GetBoundingBox (vtkIdType id, float binfo)</tt> -  Return the min and max 2D points of the
 vertex's bounding box
 </LI>
<LI>  <tt>long = obj.GetMTime ()</tt> -  Get the modification time of the layout algorithm.
 </LI>
</UL>
*/
