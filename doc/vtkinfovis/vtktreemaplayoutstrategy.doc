/*!
\page vtkinfovis_vtktreemaplayoutstrategy vtkTreeMapLayoutStrategy

<p>
Section: \ref sec_vtkinfovis "Visualization Toolkit Infovis Classes"
\section Usage
 All subclasses of this class perform a tree map layout on a tree.
 This involves assigning a rectangular region to each vertex in the tree,
 and placing that information in a data array with four components per
 tuple representing (Xmin, Xmax, Ymin, Ymax).

 Instances of subclasses of this class may be assigned as the layout
 strategy to vtkTreeMapLayout

 .SECTION Thanks
 Thanks to Brian Wylie and Ken Moreland from Sandia National Laboratories
 for help developing this class.

To create an instance of class vtkTreeMapLayoutStrategy, simply
invoke its constructor as follows
\verbatim
  obj = vtkTreeMapLayoutStrategy
\endverbatim
\section Methods
The class vtkTreeMapLayoutStrategy has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkTreeMapLayoutStrategy class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkTreeMapLayoutStrategy = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkTreeMapLayoutStrategy = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>vtkIdType = obj.FindVertex (vtkTree tree, vtkDataArray areaArray, float pnt[2])</tt> -  Find the vertex at a certain location, or -1 if none found.
 </LI>
</UL>
*/
