/*!
\page vtkinfovis_vtkexpandselectedgraph vtkExpandSelectedGraph

<p>
Section: \ref sec_vtkinfovis "Visualization Toolkit Infovis Classes"
\section Usage
 The first input is a vtkSelection containing the selected vertices.
 The second input is a vtkGraph.
 This filter 'grows' the selection set in one of the following ways
 1) SetBFSDistance controls how many 'hops' the selection is grown
    from each seed point in the selection set (defaults to 1)
 2) IncludeShortestPaths controls whether this filter tries to 
    'connect' the vertices in the selection set by computing the
    shortest path between the vertices (if such a path exists)
 Note: IncludeShortestPaths is currently non-functional

To create an instance of class vtkExpandSelectedGraph, simply
invoke its constructor as follows
\verbatim
  obj = vtkExpandSelectedGraph
\endverbatim
\section Methods
The class vtkExpandSelectedGraph has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkExpandSelectedGraph class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkExpandSelectedGraph = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkExpandSelectedGraph = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetGraphConnection (vtkAlgorithmOutput in)</tt> -  A convenience method for setting the second input (i.e. the graph).
 </LI>
<LI>  <tt>int = obj.FillInputPortInformation (int port, vtkInformation info)</tt> -  Specify the first vtkSelection input and the second vtkGraph input.
 </LI>
<LI>  <tt>obj.SetBFSDistance (int )</tt> -  Set/Get BFSDistance which controls how many 'hops' the selection 
 is grown from each seed point in the selection set (defaults to 1)
 </LI>
<LI>  <tt>int = obj.GetBFSDistance ()</tt> -  Set/Get BFSDistance which controls how many 'hops' the selection 
 is grown from each seed point in the selection set (defaults to 1)
 </LI>
<LI>  <tt>obj.SetIncludeShortestPaths (bool )</tt> -  Set/Get IncludeShortestPaths controls whether this filter tries to 
 'connect' the vertices in the selection set by computing the
 shortest path between the vertices (if such a path exists)
 Note: IncludeShortestPaths is currently non-functional
 </LI>
<LI>  <tt>bool = obj.GetIncludeShortestPaths ()</tt> -  Set/Get IncludeShortestPaths controls whether this filter tries to 
 'connect' the vertices in the selection set by computing the
 shortest path between the vertices (if such a path exists)
 Note: IncludeShortestPaths is currently non-functional
 </LI>
<LI>  <tt>obj.IncludeShortestPathsOn ()</tt> -  Set/Get IncludeShortestPaths controls whether this filter tries to 
 'connect' the vertices in the selection set by computing the
 shortest path between the vertices (if such a path exists)
 Note: IncludeShortestPaths is currently non-functional
 </LI>
<LI>  <tt>obj.IncludeShortestPathsOff ()</tt> -  Set/Get IncludeShortestPaths controls whether this filter tries to 
 'connect' the vertices in the selection set by computing the
 shortest path between the vertices (if such a path exists)
 Note: IncludeShortestPaths is currently non-functional
 </LI>
<LI>  <tt>obj.SetDomain (string )</tt> -  Set/Get the vertex domain to use in the expansion.
 </LI>
<LI>  <tt>string = obj.GetDomain ()</tt> -  Set/Get the vertex domain to use in the expansion.
 </LI>
<LI>  <tt>obj.SetUseDomain (bool )</tt> -  Whether or not to use the domain when deciding to add a vertex to the 
 expansion. Defaults to false. 
 </LI>
<LI>  <tt>bool = obj.GetUseDomain ()</tt> -  Whether or not to use the domain when deciding to add a vertex to the 
 expansion. Defaults to false. 
 </LI>
<LI>  <tt>obj.UseDomainOn ()</tt> -  Whether or not to use the domain when deciding to add a vertex to the 
 expansion. Defaults to false. 
 </LI>
<LI>  <tt>obj.UseDomainOff ()</tt> -  Whether or not to use the domain when deciding to add a vertex to the 
 expansion. Defaults to false. 
 </LI>
</UL>
*/
