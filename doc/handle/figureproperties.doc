/*!
\page handle_figureproperties FIGUREPROPERTIES Figure Object Properties

<p>
Section: \ref sec_handle "Handle-Based Graphics"
\section Usage
Below is a summary of the properties for the axis.
<UL>
<LI>  <tt>alphamap</tt> - <tt>vector</tt> - Contains the alpha (transparency) map for the
 figure.  If this is set to a scalar, then all values are mapped to the same 
 transparency.  It defaults to <tt>1</tt>, which is all values being fully opaque.  
 If you set this to a vector, the values of graphics objects will be mapped to 
 different transparency values, based on the setting of their <tt>alphadatamapping</tt>
 property.
 </LI>
<LI>  <tt>color</tt> - <tt>colorspec</tt> - The background color of the figure (defaults to a
 gray <tt>[0.6,0.6,0.6]</tt>).  During printing, this color is set to white, and then
 is restored.
 </LI>
<LI>  <tt>colormap</tt> - <tt>color vector</tt> - an <tt>N x 3</tt> matrix of RGB values that
 specifies the colormap for the figure.  Defaults to an <tt>HSV</tt> map.  
 </LI>
<LI>  <tt>children</tt> - <tt>handle vector</tt> - the handles for objects that are children
 of this figure.  These should be axis objects.
 </LI>
<LI>  <tt>currentaxes</tt> - <tt>handle</tt> - the handle for the current axes.  Also returned
 by <tt>gca</tt>.
 </LI>
<LI>  <tt>doublebuffer</tt> - Not used.
 </LI>
<LI>  <tt>parent</tt> -  Not used.
 </LI>
<LI>  <tt>position</tt> - Not used.
 </LI>
<LI>  <tt>type</tt> - <tt>string</tt> - returns the string <tt>'figure'</tt>.
 </LI>
<LI>  <tt>userdata</tt> - <tt>array</tt> - arbitrary array you can use to store data associated
 with the figure.
 </LI>
<LI>  <tt>nextplot</tt> - <tt>{'add','replace','replacechildren'}</tt> - If set to <tt>'add'</tt> then
 additional axes are added to the list of children for the current figure.  If set to 
 <tt>'replace'</tt>, then a new axis replaces all of the existing children.
 </LI>
<LI>  <tt>figsize</tt> - <tt>two vector</tt> - the size of the figure window in pixels (width x height).
 </LI>
<LI>  <tt>renderer</tt> - <tt>{'painters','opengl'}</tt> - When set to <tt>'painters'</tt> drawing is based
 on the Qt drawing methods (which can handle flat shading of surfaces with transparency).
 If you set the renderer to <tt>'opengl'</tt> then OpenGL is used for rendering.  Support for 
 OpenGL is currently in the alpha stage, and FreeMat does not enable it automatically.
 You can set the renderer mode to <tt>'opengl'</tt> manually to experiment.  Also, OpenGL 
 figures cannot be printed yet.
 </LI>
</UL>
*/
