/*!
\page vtkimaging_vtkimageseparableconvolution vtkImageSeparableConvolution

<p>
Section: \ref sec_vtkimaging "Visualization Toolkit Imaging Classes"
\section Usage
 vtkImageSeparableConvolution performs a convolution along the X, Y,
 and Z axes of an image, based on the three different 1D convolution
 kernels.  The kernels must be of odd size, and are considered to be
 centered at (int)((kernelsize - 1) / 2.0 ).  If a kernel is NULL,
 that dimension is skipped.  This filter is designed to efficiently
 convolve separable filters that can be decomposed into 1 or more 1D
 convolutions.  It also handles arbitrarly large kernel sizes, and
 uses edge replication to handle boundaries.

To create an instance of class vtkImageSeparableConvolution, simply
invoke its constructor as follows
\verbatim
  obj = vtkImageSeparableConvolution
\endverbatim
\section Methods
The class vtkImageSeparableConvolution has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkImageSeparableConvolution class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkImageSeparableConvolution = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkImageSeparableConvolution = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetXKernel (vtkFloatArray )</tt>
 </LI>
<LI>  <tt>vtkFloatArray = obj.GetXKernel ()</tt>
 </LI>
<LI>  <tt>obj.SetYKernel (vtkFloatArray )</tt>
 </LI>
<LI>  <tt>vtkFloatArray = obj.GetYKernel ()</tt>
 </LI>
<LI>  <tt>obj.SetZKernel (vtkFloatArray )</tt>
 </LI>
<LI>  <tt>vtkFloatArray = obj.GetZKernel ()</tt>
 </LI>
<LI>  <tt>long = obj.GetMTime ()</tt> -  Overload standard modified time function. If kernel arrays are modified,
 then this object is modified as well.
 </LI>
</UL>
*/
