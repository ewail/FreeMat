/*!
\page vtkimaging_vtktriangulartexture vtkTriangularTexture

<p>
Section: \ref sec_vtkimaging "Visualization Toolkit Imaging Classes"
\section Usage
 vtkTriangularTexture is a filter that generates a 2D texture map based on 
 the paper "Opacity-modulating Triangular Textures for Irregular Surfaces,"
 by Penny Rheingans, IEEE Visualization '96, pp. 219-225.
 The textures assume texture coordinates of (0,0), (1.0) and
 (.5, sqrt(3)/2). The sequence of texture values is the same along each
 edge of the triangular texture map. So, the assignment order of texture
 coordinates is arbitrary.

To create an instance of class vtkTriangularTexture, simply
invoke its constructor as follows
\verbatim
  obj = vtkTriangularTexture
\endverbatim
\section Methods
The class vtkTriangularTexture has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkTriangularTexture class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkTriangularTexture = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkTriangularTexture = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetScaleFactor (double )</tt> -  Set a Scale Factor.
 </LI>
<LI>  <tt>double = obj.GetScaleFactor ()</tt> -  Set a Scale Factor.
 </LI>
<LI>  <tt>obj.SetXSize (int )</tt> -  Set the X texture map dimension. Default is 64.
 </LI>
<LI>  <tt>int = obj.GetXSize ()</tt> -  Set the X texture map dimension. Default is 64.
 </LI>
<LI>  <tt>obj.SetYSize (int )</tt> -  Set the Y texture map dimension. Default is 64.
 </LI>
<LI>  <tt>int = obj.GetYSize ()</tt> -  Set the Y texture map dimension. Default is 64.
 </LI>
<LI>  <tt>obj.SetTexturePattern (int )</tt> -  Set the texture pattern.
    1 = opaque at centroid (default)
    2 = opaque at vertices
    3 = opaque in rings around vertices
 </LI>
<LI>  <tt>int = obj.GetTexturePatternMinValue ()</tt> -  Set the texture pattern.
    1 = opaque at centroid (default)
    2 = opaque at vertices
    3 = opaque in rings around vertices
 </LI>
<LI>  <tt>int = obj.GetTexturePatternMaxValue ()</tt> -  Set the texture pattern.
    1 = opaque at centroid (default)
    2 = opaque at vertices
    3 = opaque in rings around vertices
 </LI>
<LI>  <tt>int = obj.GetTexturePattern ()</tt> -  Set the texture pattern.
    1 = opaque at centroid (default)
    2 = opaque at vertices
    3 = opaque in rings around vertices
 </LI>
</UL>
*/
