/*!
\page vtkimaging_vtkimagemaptocolors vtkImageMapToColors

<p>
Section: \ref sec_vtkimaging "Visualization Toolkit Imaging Classes"
\section Usage
 The vtkImageMapToColors filter will take an input image of any valid
 scalar type, and map the first component of the image through a
 lookup table.  The result is an image of type VTK_UNSIGNED_CHAR.
 If the lookup table is not set, or is set to NULL, then the input
 data will be passed through if it is already of type VTK_UNSIGNED_CHAR.

To create an instance of class vtkImageMapToColors, simply
invoke its constructor as follows
\verbatim
  obj = vtkImageMapToColors
\endverbatim
\section Methods
The class vtkImageMapToColors has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkImageMapToColors class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkImageMapToColors = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkImageMapToColors = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetLookupTable (vtkScalarsToColors )</tt> -  Set the lookup table.
 </LI>
<LI>  <tt>vtkScalarsToColors = obj.GetLookupTable ()</tt> -  Set the lookup table.
 </LI>
<LI>  <tt>obj.SetOutputFormat (int )</tt> -  Set the output format, the default is RGBA.  
 </LI>
<LI>  <tt>int = obj.GetOutputFormat ()</tt> -  Set the output format, the default is RGBA.  
 </LI>
<LI>  <tt>obj.SetOutputFormatToRGBA ()</tt> -  Set the output format, the default is RGBA.  
 </LI>
<LI>  <tt>obj.SetOutputFormatToRGB ()</tt> -  Set the output format, the default is RGBA.  
 </LI>
<LI>  <tt>obj.SetOutputFormatToLuminanceAlpha ()</tt> -  Set the output format, the default is RGBA.  
 </LI>
<LI>  <tt>obj.SetOutputFormatToLuminance ()</tt> -  Set the output format, the default is RGBA.  
 </LI>
<LI>  <tt>obj.SetActiveComponent (int )</tt> -  Set the component to map for multi-component images (default: 0)
 </LI>
<LI>  <tt>int = obj.GetActiveComponent ()</tt> -  Set the component to map for multi-component images (default: 0)
 </LI>
<LI>  <tt>obj.SetPassAlphaToOutput (int )</tt> -  Use the alpha component of the input when computing the alpha component
 of the output (useful when converting monochrome+alpha data to RGBA)
 </LI>
<LI>  <tt>obj.PassAlphaToOutputOn ()</tt> -  Use the alpha component of the input when computing the alpha component
 of the output (useful when converting monochrome+alpha data to RGBA)
 </LI>
<LI>  <tt>obj.PassAlphaToOutputOff ()</tt> -  Use the alpha component of the input when computing the alpha component
 of the output (useful when converting monochrome+alpha data to RGBA)
 </LI>
<LI>  <tt>int = obj.GetPassAlphaToOutput ()</tt> -  Use the alpha component of the input when computing the alpha component
 of the output (useful when converting monochrome+alpha data to RGBA)
 </LI>
<LI>  <tt>long = obj.GetMTime ()</tt> -  We need to check the modified time of the lookup table too.
 </LI>
</UL>
*/
