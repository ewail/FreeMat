/*!
\page variables_cell CELL Cell Array Definitions

<p>
Section: \ref sec_variables "Variables and Arrays"
\section Usage
The cell array is a fairly powerful array type that is available
in FreeMat.  Generally speaking, a cell array is a heterogenous
array type, meaning that different elements in the array can
contain variables of different type (including other cell arrays).
For those of you familiar with <tt>C</tt>, it is the equivalent to the
<tt>void *</tt> array.  The general syntax for their construction is
\verbatim
   A = {row_def1;row_def2;...;row_defN}
\endverbatim
where each row consists of one or more elements, seperated by
commas
\verbatim
  row_defi = element_i1,element_i2,...,element_iM
\endverbatim
Each element can be any type of FreeMat variable, including
matrices, arrays, cell-arrays, structures, strings, etc.  The
restriction on the definition is that each row must have the
same number of elements in it.
\section Examples
Here is an example of a cell-array that contains a number,
a string, and an array

\if FRAGMENT
frag_variables_cell_000.m
0
A = {14,'hello',[1:10]}
\endif


\verbinclude frag_variables_cell_000.m.out 

Note that in the output, the number and string are explicitly
printed, but the array is summarized.
We can create a 2-dimensional cell-array by adding another
row definition

\if FRAGMENT
frag_variables_cell_001.m
0
B = {pi,i;e,-1}
\endif


\verbinclude frag_variables_cell_001.m.out 

Finally, we create a new cell array by placing <tt>A</tt> and <tt>B</tt>
together

\if FRAGMENT
frag_variables_cell_002.m
0
C = {A,B}
\endif


\verbinclude frag_variables_cell_002.m.out 

*/
