/*!
\page vtkparallel_vtkbranchextenttranslator vtkBranchExtentTranslator

<p>
Section: \ref sec_vtkparallel "Visualization Toolkit Parallel Classes"
\section Usage
 vtkBranchExtentTranslator is like extent translator, but it uses an 
 alternative source as a whole extent. The whole extent passed is assumed 
 to be a subextent of the original source.  we simply take the intersection 
 of the split extent and the whole extdent passed in.  We are attempting to
 make branching pipelines request consistent extents with the same piece 
 requests.  

To create an instance of class vtkBranchExtentTranslator, simply
invoke its constructor as follows
\verbatim
  obj = vtkBranchExtentTranslator
\endverbatim
\section Methods
The class vtkBranchExtentTranslator has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkBranchExtentTranslator class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkBranchExtentTranslator = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkBranchExtentTranslator = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetOriginalSource (vtkImageData )</tt> -  This is the original upstream image source.
 </LI>
<LI>  <tt>vtkImageData = obj.GetOriginalSource ()</tt> -  This is the original upstream image source.
 </LI>
<LI>  <tt>int = obj.PieceToExtent ()</tt> -  Generates the extent from the pieces.
 </LI>
<LI>  <tt>obj.SetAssignedPiece (int )</tt> -  This unstructured extent/piece is store here for the users convenience.
 It is not used internally.  The intent was to let an "assignment" be made
 when the translator/first source is created.  The translator/assignment
 can be used for any new filter that uses the original source as output.
 Branches will then have the same assignment.
 </LI>
<LI>  <tt>int = obj.GetAssignedPiece ()</tt> -  This unstructured extent/piece is store here for the users convenience.
 It is not used internally.  The intent was to let an "assignment" be made
 when the translator/first source is created.  The translator/assignment
 can be used for any new filter that uses the original source as output.
 Branches will then have the same assignment.
 </LI>
<LI>  <tt>obj.SetAssignedNumberOfPieces (int )</tt> -  This unstructured extent/piece is store here for the users convenience.
 It is not used internally.  The intent was to let an "assignment" be made
 when the translator/first source is created.  The translator/assignment
 can be used for any new filter that uses the original source as output.
 Branches will then have the same assignment.
 </LI>
<LI>  <tt>int = obj.GetAssignedNumberOfPieces ()</tt> -  This unstructured extent/piece is store here for the users convenience.
 It is not used internally.  The intent was to let an "assignment" be made
 when the translator/first source is created.  The translator/assignment
 can be used for any new filter that uses the original source as output.
 Branches will then have the same assignment.
 </LI>
</UL>
*/
