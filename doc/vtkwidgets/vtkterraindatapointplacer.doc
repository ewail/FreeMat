/*!
\page vtkwidgets_vtkterraindatapointplacer vtkTerrainDataPointPlacer

<p>
Section: \ref sec_vtkwidgets "Visualization Toolkit Widget Classes"
\section Usage
 vtkTerrainDataPointPlacer dictates the placement of points on height field 
 data. The class takes as input the list of props that represent the terrain
 in a rendered scene. A height offset can be specified to dicatate the 
 placement of points at a certain height above the surface. 

 .SECTION Usage
 A typical usage of this class is as follows:
 \verbatim
 pointPlacer->AddProp(demActor);    // the actor(s) containing the terrain.
 rep->SetPointPlacer(pointPlacer);
 pointPlacer->SetHeightOffset( 100 );
 \endverbatim


To create an instance of class vtkTerrainDataPointPlacer, simply
invoke its constructor as follows
\verbatim
  obj = vtkTerrainDataPointPlacer
\endverbatim
\section Methods
The class vtkTerrainDataPointPlacer has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkTerrainDataPointPlacer class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt> -  Standard methods for instances of this class.
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt> -  Standard methods for instances of this class.
 </LI>
<LI>  <tt>vtkTerrainDataPointPlacer = obj.NewInstance ()</tt> -  Standard methods for instances of this class.
 </LI>
<LI>  <tt>vtkTerrainDataPointPlacer = obj.SafeDownCast (vtkObject o)</tt> -  Standard methods for instances of this class.
 </LI>
<LI>  <tt>obj.AddProp (vtkProp )</tt>
 </LI>
<LI>  <tt>obj.RemoveAllProps ()</tt>
 </LI>
<LI>  <tt>obj.SetHeightOffset (double )</tt> -  This is the height above (or below) the terrain that the dictated
 point should be placed. Positive values indicate distances above the 
 terrain; negative values indicate distances below the terrain. The 
 default is 0.0. 
 </LI>
<LI>  <tt>double = obj.GetHeightOffset ()</tt> -  This is the height above (or below) the terrain that the dictated
 point should be placed. Positive values indicate distances above the 
 terrain; negative values indicate distances below the terrain. The 
 default is 0.0. 
 </LI>
<LI>  <tt>int = obj.ComputeWorldPosition (vtkRenderer ren, double displayPos[2], double worldPos[3], double worldOrient[9])</tt> -  Given a renderer and a display position in pixel coordinates,
 compute the world position and orientation where this point
 will be placed. This method is typically used by the
 representation to place the point initially.
 For the Terrain point placer this computes world points that
 lie at the specified height above the terrain.
 </LI>
<LI>  <tt>int = obj.ComputeWorldPosition (vtkRenderer ren, double displayPos[2], double refWorldPos[3], double worldPos[3], double worldOrient[9])</tt> -  Given a renderer, a display position, and a reference world
 position, compute the new world position and orientation 
 of this point. This method is typically used by the 
 representation to move the point.
 </LI>
<LI>  <tt>int = obj.ValidateWorldPosition (double worldPos[3])</tt> -  Given a world position check the validity of this 
 position according to the constraints of the placer
 </LI>
<LI>  <tt>int = obj.ValidateDisplayPosition (vtkRenderer , double displayPos[2])</tt> -  Given a display position, check the validity of this position.
 </LI>
<LI>  <tt>int = obj.ValidateWorldPosition (double worldPos[3], double worldOrient[9])</tt> -  Given a world position and a world orientation,
 validate it according to the constraints of the placer.
 </LI>
<LI>  <tt>vtkPropPicker = obj.GetPropPicker ()</tt> -  Get the Prop picker.
 </LI>
</UL>
*/
