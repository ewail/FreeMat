/*!
\page vtkwidgets_vtksliderrepresentation vtkSliderRepresentation

<p>
Section: \ref sec_vtkwidgets "Visualization Toolkit Widget Classes"
\section Usage
 This abstract class is used to specify how the vtkSliderWidget should
 interact with representations of the vtkSliderWidget. This class may be
 subclassed so that alternative representations can be created. The class
 defines an API, and a default implementation, that the vtkSliderWidget
 interacts with to render itself in the scene.

To create an instance of class vtkSliderRepresentation, simply
invoke its constructor as follows
\verbatim
  obj = vtkSliderRepresentation
\endverbatim
\section Methods
The class vtkSliderRepresentation has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkSliderRepresentation class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt> -  Standard methods for the class.
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt> -  Standard methods for the class.
 </LI>
<LI>  <tt>vtkSliderRepresentation = obj.NewInstance ()</tt> -  Standard methods for the class.
 </LI>
<LI>  <tt>vtkSliderRepresentation = obj.SafeDownCast (vtkObject o)</tt> -  Standard methods for the class.
 </LI>
<LI>  <tt>obj.SetValue (double value)</tt> -  Specify the current value for the widget. The value should lie between
 the minimum and maximum values.
 </LI>
<LI>  <tt>double = obj.GetValue ()</tt> -  Specify the current value for the widget. The value should lie between
 the minimum and maximum values.
 </LI>
<LI>  <tt>obj.SetMinimumValue (double value)</tt> -  Set the current minimum value that the slider can take. Setting the
 minimum value greater than the maximum value will cause the maximum
 value to grow to (minimum value + 1).
 </LI>
<LI>  <tt>double = obj.GetMinimumValue ()</tt> -  Set the current minimum value that the slider can take. Setting the
 minimum value greater than the maximum value will cause the maximum
 value to grow to (minimum value + 1).
 </LI>
<LI>  <tt>obj.SetMaximumValue (double value)</tt> -  Set the current maximum value that the slider can take. Setting the
 maximum value less than the minimum value will cause the minimum
 value to change to (maximum value - 1).
 </LI>
<LI>  <tt>double = obj.GetMaximumValue ()</tt> -  Set the current maximum value that the slider can take. Setting the
 maximum value less than the minimum value will cause the minimum
 value to change to (maximum value - 1).
 </LI>
<LI>  <tt>obj.SetSliderLength (double )</tt> -  Specify the length of the slider shape (in normalized display coordinates
 [0.01,0.5]). The slider length by default is 0.05.
 </LI>
<LI>  <tt>double = obj.GetSliderLengthMinValue ()</tt> -  Specify the length of the slider shape (in normalized display coordinates
 [0.01,0.5]). The slider length by default is 0.05.
 </LI>
<LI>  <tt>double = obj.GetSliderLengthMaxValue ()</tt> -  Specify the length of the slider shape (in normalized display coordinates
 [0.01,0.5]). The slider length by default is 0.05.
 </LI>
<LI>  <tt>double = obj.GetSliderLength ()</tt> -  Specify the length of the slider shape (in normalized display coordinates
 [0.01,0.5]). The slider length by default is 0.05.
 </LI>
<LI>  <tt>obj.SetSliderWidth (double )</tt> -  Set the width of the slider in the directions orthogonal to the
 slider axis. Using this it is possible to create ellipsoidal and hockey
 puck sliders (in some subclasses). By default the width is 0.05.
 </LI>
<LI>  <tt>double = obj.GetSliderWidthMinValue ()</tt> -  Set the width of the slider in the directions orthogonal to the
 slider axis. Using this it is possible to create ellipsoidal and hockey
 puck sliders (in some subclasses). By default the width is 0.05.
 </LI>
<LI>  <tt>double = obj.GetSliderWidthMaxValue ()</tt> -  Set the width of the slider in the directions orthogonal to the
 slider axis. Using this it is possible to create ellipsoidal and hockey
 puck sliders (in some subclasses). By default the width is 0.05.
 </LI>
<LI>  <tt>double = obj.GetSliderWidth ()</tt> -  Set the width of the slider in the directions orthogonal to the
 slider axis. Using this it is possible to create ellipsoidal and hockey
 puck sliders (in some subclasses). By default the width is 0.05.
 </LI>
<LI>  <tt>obj.SetTubeWidth (double )</tt> -  Set the width of the tube (in normalized display coordinates) on which
 the slider moves. By default the width is 0.05.
 </LI>
<LI>  <tt>double = obj.GetTubeWidthMinValue ()</tt> -  Set the width of the tube (in normalized display coordinates) on which
 the slider moves. By default the width is 0.05.
 </LI>
<LI>  <tt>double = obj.GetTubeWidthMaxValue ()</tt> -  Set the width of the tube (in normalized display coordinates) on which
 the slider moves. By default the width is 0.05.
 </LI>
<LI>  <tt>double = obj.GetTubeWidth ()</tt> -  Set the width of the tube (in normalized display coordinates) on which
 the slider moves. By default the width is 0.05.
 </LI>
<LI>  <tt>obj.SetEndCapLength (double )</tt> -  Specify the length of each end cap (in normalized coordinates
 [0.0,0.25]). By default the length is 0.025. If the end cap length
 is set to 0.0, then the end cap will not display at all.
 </LI>
<LI>  <tt>double = obj.GetEndCapLengthMinValue ()</tt> -  Specify the length of each end cap (in normalized coordinates
 [0.0,0.25]). By default the length is 0.025. If the end cap length
 is set to 0.0, then the end cap will not display at all.
 </LI>
<LI>  <tt>double = obj.GetEndCapLengthMaxValue ()</tt> -  Specify the length of each end cap (in normalized coordinates
 [0.0,0.25]). By default the length is 0.025. If the end cap length
 is set to 0.0, then the end cap will not display at all.
 </LI>
<LI>  <tt>double = obj.GetEndCapLength ()</tt> -  Specify the length of each end cap (in normalized coordinates
 [0.0,0.25]). By default the length is 0.025. If the end cap length
 is set to 0.0, then the end cap will not display at all.
 </LI>
<LI>  <tt>obj.SetEndCapWidth (double )</tt> -  Specify the width of each end cap (in normalized coordinates
 [0.0,0.25]). By default the width is twice the tube width. 
 </LI>
<LI>  <tt>double = obj.GetEndCapWidthMinValue ()</tt> -  Specify the width of each end cap (in normalized coordinates
 [0.0,0.25]). By default the width is twice the tube width. 
 </LI>
<LI>  <tt>double = obj.GetEndCapWidthMaxValue ()</tt> -  Specify the width of each end cap (in normalized coordinates
 [0.0,0.25]). By default the width is twice the tube width. 
 </LI>
<LI>  <tt>double = obj.GetEndCapWidth ()</tt> -  Specify the width of each end cap (in normalized coordinates
 [0.0,0.25]). By default the width is twice the tube width. 
 </LI>
<LI>  <tt>obj.SetTitleText (string )</tt> -  Specify the label text for this widget. If the value is not set, or set
 to the empty string "", then the label text is not displayed.
 </LI>
<LI>  <tt>string = obj.GetTitleText ()</tt> -  Set/Get the format with which to print the slider value.
 </LI>
<LI>  <tt>obj.SetLabelFormat (string )</tt> -  Set/Get the format with which to print the slider value.
 </LI>
<LI>  <tt>string = obj.GetLabelFormat ()</tt> -  Set/Get the format with which to print the slider value.
 </LI>
<LI>  <tt>obj.SetLabelHeight (double )</tt> -  Specify the relative height of the label as compared to the length of the
 slider. 
 </LI>
<LI>  <tt>double = obj.GetLabelHeightMinValue ()</tt> -  Specify the relative height of the label as compared to the length of the
 slider. 
 </LI>
<LI>  <tt>double = obj.GetLabelHeightMaxValue ()</tt> -  Specify the relative height of the label as compared to the length of the
 slider. 
 </LI>
<LI>  <tt>double = obj.GetLabelHeight ()</tt> -  Specify the relative height of the label as compared to the length of the
 slider. 
 </LI>
<LI>  <tt>obj.SetTitleHeight (double )</tt> -  Specify the relative height of the title as compared to the length of the
 slider. 
 </LI>
<LI>  <tt>double = obj.GetTitleHeightMinValue ()</tt> -  Specify the relative height of the title as compared to the length of the
 slider. 
 </LI>
<LI>  <tt>double = obj.GetTitleHeightMaxValue ()</tt> -  Specify the relative height of the title as compared to the length of the
 slider. 
 </LI>
<LI>  <tt>double = obj.GetTitleHeight ()</tt> -  Specify the relative height of the title as compared to the length of the
 slider. 
 </LI>
<LI>  <tt>obj.SetShowSliderLabel (int )</tt> -  Indicate whether the slider text label should be displayed. This is
 a number corresponding to the current Value of this widget.
 </LI>
<LI>  <tt>int = obj.GetShowSliderLabel ()</tt> -  Indicate whether the slider text label should be displayed. This is
 a number corresponding to the current Value of this widget.
 </LI>
<LI>  <tt>obj.ShowSliderLabelOn ()</tt> -  Indicate whether the slider text label should be displayed. This is
 a number corresponding to the current Value of this widget.
 </LI>
<LI>  <tt>obj.ShowSliderLabelOff ()</tt> -  Indicate whether the slider text label should be displayed. This is
 a number corresponding to the current Value of this widget.
 </LI>
<LI>  <tt>double = obj.GetCurrentT ()</tt> -  Methods to interface with the vtkSliderWidget. Subclasses of this class 
 actually do something.
 </LI>
<LI>  <tt>double = obj.GetPickedT ()</tt>
 </LI>
</UL>
*/
