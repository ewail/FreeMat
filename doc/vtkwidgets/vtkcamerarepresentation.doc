/*!
\page vtkwidgets_vtkcamerarepresentation vtkCameraRepresentation

<p>
Section: \ref sec_vtkwidgets "Visualization Toolkit Widget Classes"
\section Usage
 This class provides support for interactively saving a series of camera
 views into an interpolated path (using vtkCameraInterpolator). The class
 typically works in conjunction with vtkCameraWidget. To use this class
 simply specify the camera to interpolate and use the methods
 AddCameraToPath(), AnimatePath(), and InitializePath() to add a new camera
 view, animate the current views, and initialize the interpolation.

To create an instance of class vtkCameraRepresentation, simply
invoke its constructor as follows
\verbatim
  obj = vtkCameraRepresentation
\endverbatim
\section Methods
The class vtkCameraRepresentation has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkCameraRepresentation class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt> -  Standard VTK class methods.
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt> -  Standard VTK class methods.
 </LI>
<LI>  <tt>vtkCameraRepresentation = obj.NewInstance ()</tt> -  Standard VTK class methods.
 </LI>
<LI>  <tt>vtkCameraRepresentation = obj.SafeDownCast (vtkObject o)</tt> -  Standard VTK class methods.
 </LI>
<LI>  <tt>obj.SetCamera (vtkCamera camera)</tt> -  Specify the camera to interpolate. This must be specified by
 the user.
 </LI>
<LI>  <tt>vtkCamera = obj.GetCamera ()</tt> -  Specify the camera to interpolate. This must be specified by
 the user.
 </LI>
<LI>  <tt>obj.SetInterpolator (vtkCameraInterpolator camInt)</tt> -  Get the vtkCameraInterpolator used to interpolate and save the
 sequence of camera views. If not defined, one is created
 automatically. Note that you can access this object to set
 the interpolation type (linear, spline) and other instance
 variables.
 </LI>
<LI>  <tt>vtkCameraInterpolator = obj.GetInterpolator ()</tt> -  Get the vtkCameraInterpolator used to interpolate and save the
 sequence of camera views. If not defined, one is created
 automatically. Note that you can access this object to set
 the interpolation type (linear, spline) and other instance
 variables.
 </LI>
<LI>  <tt>obj.SetNumberOfFrames (int )</tt> -  Set the number of frames to generate when playback is initiated.
 </LI>
<LI>  <tt>int = obj.GetNumberOfFramesMinValue ()</tt> -  Set the number of frames to generate when playback is initiated.
 </LI>
<LI>  <tt>int = obj.GetNumberOfFramesMaxValue ()</tt> -  Set the number of frames to generate when playback is initiated.
 </LI>
<LI>  <tt>int = obj.GetNumberOfFrames ()</tt> -  Set the number of frames to generate when playback is initiated.
 </LI>
<LI>  <tt>vtkProperty2D = obj.GetProperty ()</tt> -  By obtaining this property you can specify the properties of the 
 representation.
 </LI>
<LI>  <tt>obj.AddCameraToPath ()</tt> -  These methods are used to create interpolated camera paths.  The
 AddCameraToPath() method adds the view defined by the current camera
 (via SetCamera()) to the interpolated camera path. AnimatePath()
 interpolates NumberOfFrames along the current path. InitializePath()
 resets the interpolated path to its initial, empty configuration.
 </LI>
<LI>  <tt>obj.AnimatePath (vtkRenderWindowInteractor rwi)</tt> -  These methods are used to create interpolated camera paths.  The
 AddCameraToPath() method adds the view defined by the current camera
 (via SetCamera()) to the interpolated camera path. AnimatePath()
 interpolates NumberOfFrames along the current path. InitializePath()
 resets the interpolated path to its initial, empty configuration.
 </LI>
<LI>  <tt>obj.InitializePath ()</tt> -  These methods are used to create interpolated camera paths.  The
 AddCameraToPath() method adds the view defined by the current camera
 (via SetCamera()) to the interpolated camera path. AnimatePath()
 interpolates NumberOfFrames along the current path. InitializePath()
 resets the interpolated path to its initial, empty configuration.
 </LI>
<LI>  <tt>obj.BuildRepresentation ()</tt> -  Satisfy the superclasses' API.
 </LI>
<LI>  <tt>obj.GetSize (double size[2])</tt> -  These methods are necessary to make this representation behave as
 a vtkProp.
 </LI>
<LI>  <tt>obj.GetActors2D (vtkPropCollection )</tt> -  These methods are necessary to make this representation behave as
 a vtkProp.
 </LI>
<LI>  <tt>obj.ReleaseGraphicsResources (vtkWindow )</tt> -  These methods are necessary to make this representation behave as
 a vtkProp.
 </LI>
<LI>  <tt>int = obj.RenderOverlay (vtkViewport )</tt> -  These methods are necessary to make this representation behave as
 a vtkProp.
 </LI>
<LI>  <tt>int = obj.RenderOpaqueGeometry (vtkViewport )</tt> -  These methods are necessary to make this representation behave as
 a vtkProp.
 </LI>
<LI>  <tt>int = obj.RenderTranslucentPolygonalGeometry (vtkViewport )</tt> -  These methods are necessary to make this representation behave as
 a vtkProp.
 </LI>
<LI>  <tt>int = obj.HasTranslucentPolygonalGeometry ()</tt> -  These methods are necessary to make this representation behave as
 a vtkProp.
 </LI>
</UL>
*/
