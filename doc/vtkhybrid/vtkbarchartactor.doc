/*!
\page vtkhybrid_vtkbarchartactor vtkBarChartActor

<p>
Section: \ref sec_vtkhybrid "Visualization Toolkit Hybrid Classes"
\section Usage
 vtkBarChartActor generates a bar chart from an array of numbers defined in
 field data (a vtkDataObject). To use this class, you must specify an input
 data object. You'll probably also want to specify the position of the plot
 be setting the Position and Position2 instance variables, which define a
 rectangle in which the plot lies.  There are also many other instance
 variables that control the look of the plot includes its title and legend.

 Set the text property/attributes of the title and the labels through the 
 vtkTextProperty objects associated with these components.

To create an instance of class vtkBarChartActor, simply
invoke its constructor as follows
\verbatim
  obj = vtkBarChartActor
\endverbatim
\section Methods
The class vtkBarChartActor has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkBarChartActor class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt> -  Standard methods for type information and printing.
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt> -  Standard methods for type information and printing.
 </LI>
<LI>  <tt>vtkBarChartActor = obj.NewInstance ()</tt> -  Standard methods for type information and printing.
 </LI>
<LI>  <tt>vtkBarChartActor = obj.SafeDownCast (vtkObject o)</tt> -  Standard methods for type information and printing.
 </LI>
<LI>  <tt>obj.SetInput (vtkDataObject )</tt> -  Set the input to the bar chart actor.
 </LI>
<LI>  <tt>vtkDataObject = obj.GetInput ()</tt> -  Get the input data object to this actor.
 </LI>
<LI>  <tt>obj.SetTitleVisibility (int )</tt> -  Enable/Disable the display of a plot title.
 </LI>
<LI>  <tt>int = obj.GetTitleVisibility ()</tt> -  Enable/Disable the display of a plot title.
 </LI>
<LI>  <tt>obj.TitleVisibilityOn ()</tt> -  Enable/Disable the display of a plot title.
 </LI>
<LI>  <tt>obj.TitleVisibilityOff ()</tt> -  Enable/Disable the display of a plot title.
 </LI>
<LI>  <tt>obj.SetTitle (string )</tt> -  Set/Get the title of the bar chart.
 </LI>
<LI>  <tt>string = obj.GetTitle ()</tt> -  Set/Get the title of the bar chart.
 </LI>
<LI>  <tt>obj.SetTitleTextProperty (vtkTextProperty p)</tt> -  Set/Get the title text property. The property controls the
 appearance of the plot title.
 </LI>
<LI>  <tt>vtkTextProperty = obj.GetTitleTextProperty ()</tt> -  Set/Get the title text property. The property controls the
 appearance of the plot title.
 </LI>
<LI>  <tt>obj.SetLabelVisibility (int )</tt> -  Enable/Disable the display of bar labels.
 </LI>
<LI>  <tt>int = obj.GetLabelVisibility ()</tt> -  Enable/Disable the display of bar labels.
 </LI>
<LI>  <tt>obj.LabelVisibilityOn ()</tt> -  Enable/Disable the display of bar labels.
 </LI>
<LI>  <tt>obj.LabelVisibilityOff ()</tt> -  Enable/Disable the display of bar labels.
 </LI>
<LI>  <tt>obj.SetLabelTextProperty (vtkTextProperty p)</tt> -  Set/Get the labels text property. This controls the appearance
 of all bar bar labels.
 </LI>
<LI>  <tt>vtkTextProperty = obj.GetLabelTextProperty ()</tt> -  Set/Get the labels text property. This controls the appearance
 of all bar bar labels.
 </LI>
<LI>  <tt>obj.SetBarColor (int i, double r, double g, double b)</tt> -  Specify colors for each bar. If not specified, they are 
 automatically generated.
 </LI>
<LI>  <tt>obj.SetBarColor (int i, double color[3])</tt> -  Specify colors for each bar. If not specified, they are 
 automatically generated.
 </LI>
<LI>  <tt>obj.SetBarLabel (int i, string )</tt> -  Specify the names of each bar. If
 not specified, then an integer number is automatically generated.
 </LI>
<LI>  <tt>string = obj.GetBarLabel (int i)</tt> -  Specify the names of each bar. If
 not specified, then an integer number is automatically generated.
 </LI>
<LI>  <tt>obj.SetYTitle (string )</tt> -  Specify the title of the y-axis.
 </LI>
<LI>  <tt>string = obj.GetYTitle ()</tt> -  Specify the title of the y-axis.
 </LI>
<LI>  <tt>obj.SetLegendVisibility (int )</tt> -  Enable/Disable the creation of a legend. If on, the legend labels will
 be created automatically unless the per plot legend symbol has been
 set.
 </LI>
<LI>  <tt>int = obj.GetLegendVisibility ()</tt> -  Enable/Disable the creation of a legend. If on, the legend labels will
 be created automatically unless the per plot legend symbol has been
 set.
 </LI>
<LI>  <tt>obj.LegendVisibilityOn ()</tt> -  Enable/Disable the creation of a legend. If on, the legend labels will
 be created automatically unless the per plot legend symbol has been
 set.
 </LI>
<LI>  <tt>obj.LegendVisibilityOff ()</tt> -  Enable/Disable the creation of a legend. If on, the legend labels will
 be created automatically unless the per plot legend symbol has been
 set.
 </LI>
<LI>  <tt>vtkLegendBoxActor = obj.GetLegendActor ()</tt> -  Retrieve handles to the legend box. This is useful if you would like 
 to manually control the legend appearance.
 </LI>
<LI>  <tt>int = obj.RenderOverlay (vtkViewport )</tt> -  Draw the bar plot.
 </LI>
<LI>  <tt>int = obj.RenderOpaqueGeometry (vtkViewport )</tt> -  Draw the bar plot.
 </LI>
<LI>  <tt>int = obj.RenderTranslucentPolygonalGeometry (vtkViewport )</tt> -  Does this prop have some translucent polygonal geometry?
 </LI>
<LI>  <tt>int = obj.HasTranslucentPolygonalGeometry ()</tt> -  Does this prop have some translucent polygonal geometry?
 </LI>
<LI>  <tt>obj.ReleaseGraphicsResources (vtkWindow )</tt> -  Release any graphics resources that are being consumed by this actor.
 The parameter window could be used to determine which graphic
 resources to release.
 </LI>
</UL>
*/
