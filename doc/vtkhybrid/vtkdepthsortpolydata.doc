/*!
\page vtkhybrid_vtkdepthsortpolydata vtkDepthSortPolyData

<p>
Section: \ref sec_vtkhybrid "Visualization Toolkit Hybrid Classes"
\section Usage
 vtkDepthSortPolyData rearranges the order of cells so that certain
 rendering operations (e.g., transparency or Painter's algorithms)
 generate correct results. To use this filter you must specify the
 direction vector along which to sort the cells. You can do this by 
 specifying a camera and/or prop to define a view direction; or 
 explicitly set a view direction.

To create an instance of class vtkDepthSortPolyData, simply
invoke its constructor as follows
\verbatim
  obj = vtkDepthSortPolyData
\endverbatim
\section Methods
The class vtkDepthSortPolyData has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkDepthSortPolyData class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkDepthSortPolyData = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkDepthSortPolyData = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetDirection (int )</tt> -  Specify the sort method for the polygonal primitives. By default, the
 poly data is sorted from back to front.
 </LI>
<LI>  <tt>int = obj.GetDirection ()</tt> -  Specify the sort method for the polygonal primitives. By default, the
 poly data is sorted from back to front.
 </LI>
<LI>  <tt>obj.SetDirectionToFrontToBack ()</tt> -  Specify the sort method for the polygonal primitives. By default, the
 poly data is sorted from back to front.
 </LI>
<LI>  <tt>obj.SetDirectionToBackToFront ()</tt> -  Specify the sort method for the polygonal primitives. By default, the
 poly data is sorted from back to front.
 </LI>
<LI>  <tt>obj.SetDirectionToSpecifiedVector ()</tt> -  Specify the point to use when sorting. The fastest is to just
 take the first cell point. Other options are to take the bounding
 box center or the parametric center of the cell. By default, the
 first cell point is used.
 </LI>
<LI>  <tt>obj.SetDepthSortMode (int )</tt> -  Specify the point to use when sorting. The fastest is to just
 take the first cell point. Other options are to take the bounding
 box center or the parametric center of the cell. By default, the
 first cell point is used.
 </LI>
<LI>  <tt>int = obj.GetDepthSortMode ()</tt> -  Specify the point to use when sorting. The fastest is to just
 take the first cell point. Other options are to take the bounding
 box center or the parametric center of the cell. By default, the
 first cell point is used.
 </LI>
<LI>  <tt>obj.SetDepthSortModeToFirstPoint ()</tt> -  Specify the point to use when sorting. The fastest is to just
 take the first cell point. Other options are to take the bounding
 box center or the parametric center of the cell. By default, the
 first cell point is used.
 </LI>
<LI>  <tt>obj.SetDepthSortModeToBoundsCenter ()</tt> -  Specify the point to use when sorting. The fastest is to just
 take the first cell point. Other options are to take the bounding
 box center or the parametric center of the cell. By default, the
 first cell point is used.
 </LI>
<LI>  <tt>obj.SetDepthSortModeToParametricCenter ()</tt> -  Specify a camera that is used to define a view direction along which
 the cells are sorted. This ivar only has effect if the direction is set
 to front-to-back or back-to-front, and a camera is specified.
 </LI>
<LI>  <tt>obj.SetCamera (vtkCamera )</tt> -  Specify a camera that is used to define a view direction along which
 the cells are sorted. This ivar only has effect if the direction is set
 to front-to-back or back-to-front, and a camera is specified.
 </LI>
<LI>  <tt>vtkCamera = obj.GetCamera ()</tt> -  Specify a camera that is used to define a view direction along which
 the cells are sorted. This ivar only has effect if the direction is set
 to front-to-back or back-to-front, and a camera is specified.
 </LI>
<LI>  <tt>obj.SetProp3D (vtkProp3D )</tt> -  Specify a transformation matrix (via the vtkProp3D::GetMatrix() method)
 that is used to include the effects of transformation. This ivar only
 has effect if the direction is set to front-to-back or back-to-front,
 and a camera is specified. Specifying the vtkProp3D is optional.
 </LI>
<LI>  <tt>vtkProp3D = obj.GetProp3D ()</tt> -  Specify a transformation matrix (via the vtkProp3D::GetMatrix() method)
 that is used to include the effects of transformation. This ivar only
 has effect if the direction is set to front-to-back or back-to-front,
 and a camera is specified. Specifying the vtkProp3D is optional.
 </LI>
<LI>  <tt>obj.SetVector (double , double , double )</tt> -  Set/Get the sort direction. This ivar only has effect if the sort
 direction is set to SetDirectionToSpecifiedVector(). The sort occurs
 in the direction of the vector.
 </LI>
<LI>  <tt>obj.SetVector (double  a[3])</tt> -  Set/Get the sort direction. This ivar only has effect if the sort
 direction is set to SetDirectionToSpecifiedVector(). The sort occurs
 in the direction of the vector.
 </LI>
<LI>  <tt>double = obj. GetVector ()</tt> -  Set/Get the sort direction. This ivar only has effect if the sort
 direction is set to SetDirectionToSpecifiedVector(). The sort occurs
 in the direction of the vector.
 </LI>
<LI>  <tt>obj.SetOrigin (double , double , double )</tt> -  Set/Get the sort origin. This ivar only has effect if the sort
 direction is set to SetDirectionToSpecifiedVector(). The sort occurs
 in the direction of the vector, with this point specifying the
 origin.
 </LI>
<LI>  <tt>obj.SetOrigin (double  a[3])</tt> -  Set/Get the sort origin. This ivar only has effect if the sort
 direction is set to SetDirectionToSpecifiedVector(). The sort occurs
 in the direction of the vector, with this point specifying the
 origin.
 </LI>
<LI>  <tt>double = obj. GetOrigin ()</tt> -  Set/Get the sort origin. This ivar only has effect if the sort
 direction is set to SetDirectionToSpecifiedVector(). The sort occurs
 in the direction of the vector, with this point specifying the
 origin.
 </LI>
<LI>  <tt>obj.SetSortScalars (int )</tt> -  Set/Get a flag that controls the generation of scalar values
 corresponding to the sort order. If enabled, the output of this
 filter will include scalar values that range from 0 to (ncells-1),
 where 0 is closest to the sort direction.
 </LI>
<LI>  <tt>int = obj.GetSortScalars ()</tt> -  Set/Get a flag that controls the generation of scalar values
 corresponding to the sort order. If enabled, the output of this
 filter will include scalar values that range from 0 to (ncells-1),
 where 0 is closest to the sort direction.
 </LI>
<LI>  <tt>obj.SortScalarsOn ()</tt> -  Set/Get a flag that controls the generation of scalar values
 corresponding to the sort order. If enabled, the output of this
 filter will include scalar values that range from 0 to (ncells-1),
 where 0 is closest to the sort direction.
 </LI>
<LI>  <tt>obj.SortScalarsOff ()</tt> -  Set/Get a flag that controls the generation of scalar values
 corresponding to the sort order. If enabled, the output of this
 filter will include scalar values that range from 0 to (ncells-1),
 where 0 is closest to the sort direction.
 </LI>
<LI>  <tt>long = obj.GetMTime ()</tt> -  Return MTime also considering the dependent objects: the camera
 and/or the prop3D.
 </LI>
</UL>
*/
