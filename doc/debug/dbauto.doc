/*!
\page debug_dbauto DBAUTO Control Dbauto Functionality

<p>
Section: \ref sec_debug "Debugging FreeMat Code"
\section Usage
The dbauto functionality in FreeMat allows you to debug your
FreeMat programs.  When <tt>dbauto</tt> is <tt>on</tt>, then any error
that occurs while the program is running causes FreeMat to 
stop execution at that point and return you to the command line
(just as if you had placed a <tt>keyboard</tt> command there).  You can
then examine variables, modify them, and resume execution using
<tt>return</tt>.  Alternately, you can exit out of all running routines
via a <tt>retall</tt> statement.  Note that errors that occur inside of
<tt>try</tt>/<tt>catch</tt> blocks do not (by design) cause auto breakpoints.  The
<tt>dbauto</tt> function toggles the dbauto state of FreeMat.  The
syntax for its use is
\verbatim
   dbauto(state)
\endverbatim
where <tt>state</tt> is either
\verbatim
   dbauto('on')
\endverbatim
to activate dbauto, or
\verbatim
   dbauto('off')
\endverbatim
to deactivate dbauto.  Alternately, you can use FreeMat's string-syntax
equivalence and enter
\verbatim
   dbauto on
\endverbatim
or 
\verbatim
   dbauto off
\endverbatim
to turn dbauto on or off (respectively).  Entering <tt>dbauto</tt> with no arguments
returns the current state (either 'on' or 'off').
*/
