/*!
\page vtkrendering_vtkinteractorstyleimage vtkInteractorStyleImage

<p>
Section: \ref sec_vtkrendering "Visualization Toolkit Rendering Classes"
\section Usage
 vtkInteractorStyleImage allows the user to interactively manipulate
 (rotate, pan, zoomm etc.) the camera. vtkInteractorStyleImage is specially
 designed to work with images that are being rendered with
 vtkImageActor. Several events are overloaded from its superclass
 vtkInteractorStyle, hence the mouse bindings are different. (The bindings
 keep the camera's view plane normal perpendicular to the x-y plane.) In
 summary the mouse events are as follows:
 + Left Mouse button triggers window level events
 + CTRL Left Mouse spins the camera around its view plane normal
 + SHIFT Left Mouse pans the camera
 + CTRL SHIFT Left Mouse dollys (a positional zoom) the camera
 + Middle mouse button pans the camera
 + Right mouse button dollys the camera.
 + SHIFT Right Mouse triggers pick events

 Note that the renderer's actors are not moved; instead the camera is moved.

To create an instance of class vtkInteractorStyleImage, simply
invoke its constructor as follows
\verbatim
  obj = vtkInteractorStyleImage
\endverbatim
\section Methods
The class vtkInteractorStyleImage has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkInteractorStyleImage class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkInteractorStyleImage = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkInteractorStyleImage = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>int = obj. GetWindowLevelStartPosition ()</tt> -  Some useful information for handling window level
 </LI>
<LI>  <tt>int = obj. GetWindowLevelCurrentPosition ()</tt> -  Some useful information for handling window level
 </LI>
<LI>  <tt>obj.OnMouseMove ()</tt> -  Event bindings controlling the effects of pressing mouse buttons
 or moving the mouse.
 </LI>
<LI>  <tt>obj.OnLeftButtonDown ()</tt> -  Event bindings controlling the effects of pressing mouse buttons
 or moving the mouse.
 </LI>
<LI>  <tt>obj.OnLeftButtonUp ()</tt> -  Event bindings controlling the effects of pressing mouse buttons
 or moving the mouse.
 </LI>
<LI>  <tt>obj.OnRightButtonDown ()</tt> -  Event bindings controlling the effects of pressing mouse buttons
 or moving the mouse.
 </LI>
<LI>  <tt>obj.OnRightButtonUp ()</tt> -  Event bindings controlling the effects of pressing mouse buttons
 or moving the mouse.
 </LI>
<LI>  <tt>obj.OnChar ()</tt> -  Override the "fly-to" (f keypress) for images.
 </LI>
<LI>  <tt>obj.WindowLevel ()</tt>
 </LI>
<LI>  <tt>obj.Pick ()</tt>
 </LI>
<LI>  <tt>obj.StartWindowLevel ()</tt>
 </LI>
<LI>  <tt>obj.EndWindowLevel ()</tt>
 </LI>
<LI>  <tt>obj.StartPick ()</tt>
 </LI>
<LI>  <tt>obj.EndPick ()</tt>
 </LI>
</UL>
*/
