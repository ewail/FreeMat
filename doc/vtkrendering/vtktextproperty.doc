/*!
\page vtkrendering_vtktextproperty vtkTextProperty

<p>
Section: \ref sec_vtkrendering "Visualization Toolkit Rendering Classes"
\section Usage
 vtkTextProperty is an object that represents text properties.
 The primary properties that can be set are color, opacity, font size,
 font family horizontal and vertical justification, bold/italic/shadow
 styles.

To create an instance of class vtkTextProperty, simply
invoke its constructor as follows
\verbatim
  obj = vtkTextProperty
\endverbatim
\section Methods
The class vtkTextProperty has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkTextProperty class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkTextProperty = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkTextProperty = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.SetColor (double , double , double )</tt> -  Set the color of the text.
 </LI>
<LI>  <tt>obj.SetColor (double  a[3])</tt> -  Set the color of the text.
 </LI>
<LI>  <tt>double = obj. GetColor ()</tt> -  Set the color of the text.
 </LI>
<LI>  <tt>obj.SetOpacity (double )</tt> -  Set/Get the text's opacity. 1.0 is totally opaque and 0.0 is completely
 transparent.
 </LI>
<LI>  <tt>double = obj.GetOpacity ()</tt> -  Set/Get the text's opacity. 1.0 is totally opaque and 0.0 is completely
 transparent.
 </LI>
<LI>  <tt>string = obj.GetFontFamilyAsString ()</tt> -  Set/Get the font family. Supports legacy three font family system.
 </LI>
<LI>  <tt>obj.SetFontFamilyAsString (string )</tt> -  Set/Get the font family. Supports legacy three font family system.
 </LI>
<LI>  <tt>obj.SetFontFamily (int t)</tt> -  Set/Get the font family. Supports legacy three font family system.
 </LI>
<LI>  <tt>int = obj.GetFontFamily ()</tt> -  Set/Get the font family. Supports legacy three font family system.
 </LI>
<LI>  <tt>int = obj.GetFontFamilyMinValue ()</tt> -  Set/Get the font family. Supports legacy three font family system.
 </LI>
<LI>  <tt>obj.SetFontFamilyToArial ()</tt> -  Set/Get the font family. Supports legacy three font family system.
 </LI>
<LI>  <tt>obj.SetFontFamilyToCourier ()</tt> -  Set/Get the font family. Supports legacy three font family system.
 </LI>
<LI>  <tt>obj.SetFontFamilyToTimes ()</tt> -  Set/Get the font family. Supports legacy three font family system.
 </LI>
<LI>  <tt>obj.SetFontSize (int )</tt> -  Set/Get the font size (in points).
 </LI>
<LI>  <tt>int = obj.GetFontSizeMinValue ()</tt> -  Set/Get the font size (in points).
 </LI>
<LI>  <tt>int = obj.GetFontSizeMaxValue ()</tt> -  Set/Get the font size (in points).
 </LI>
<LI>  <tt>int = obj.GetFontSize ()</tt> -  Set/Get the font size (in points).
 </LI>
<LI>  <tt>obj.SetBold (int )</tt> -  Enable/disable text bolding.
 </LI>
<LI>  <tt>int = obj.GetBold ()</tt> -  Enable/disable text bolding.
 </LI>
<LI>  <tt>obj.BoldOn ()</tt> -  Enable/disable text bolding.
 </LI>
<LI>  <tt>obj.BoldOff ()</tt> -  Enable/disable text bolding.
 </LI>
<LI>  <tt>obj.SetItalic (int )</tt> -  Enable/disable text italic.
 </LI>
<LI>  <tt>int = obj.GetItalic ()</tt> -  Enable/disable text italic.
 </LI>
<LI>  <tt>obj.ItalicOn ()</tt> -  Enable/disable text italic.
 </LI>
<LI>  <tt>obj.ItalicOff ()</tt> -  Enable/disable text italic.
 </LI>
<LI>  <tt>obj.SetShadow (int )</tt> -  Enable/disable text shadow.
 </LI>
<LI>  <tt>int = obj.GetShadow ()</tt> -  Enable/disable text shadow.
 </LI>
<LI>  <tt>obj.ShadowOn ()</tt> -  Enable/disable text shadow.
 </LI>
<LI>  <tt>obj.ShadowOff ()</tt> -  Enable/disable text shadow.
 </LI>
<LI>  <tt>obj.SetShadowOffset (int , int )</tt> -  Set/Get the shadow offset, i.e. the distance from the text to
 its shadow, in the same unit as FontSize.
 </LI>
<LI>  <tt>obj.SetShadowOffset (int  a[2])</tt> -  Set/Get the shadow offset, i.e. the distance from the text to
 its shadow, in the same unit as FontSize.
 </LI>
<LI>  <tt>int = obj. GetShadowOffset ()</tt> -  Set/Get the shadow offset, i.e. the distance from the text to
 its shadow, in the same unit as FontSize.
 </LI>
<LI>  <tt>obj.GetShadowColor (double color[3])</tt> -  Get the shadow color. It is computed from the Color ivar
 </LI>
<LI>  <tt>obj.SetJustification (int )</tt> -  Set/Get the horizontal justification to left (default), centered,
 or right.
 </LI>
<LI>  <tt>int = obj.GetJustificationMinValue ()</tt> -  Set/Get the horizontal justification to left (default), centered,
 or right.
 </LI>
<LI>  <tt>int = obj.GetJustificationMaxValue ()</tt> -  Set/Get the horizontal justification to left (default), centered,
 or right.
 </LI>
<LI>  <tt>int = obj.GetJustification ()</tt> -  Set/Get the horizontal justification to left (default), centered,
 or right.
 </LI>
<LI>  <tt>obj.SetJustificationToLeft ()</tt> -  Set/Get the horizontal justification to left (default), centered,
 or right.
 </LI>
<LI>  <tt>obj.SetJustificationToCentered ()</tt> -  Set/Get the horizontal justification to left (default), centered,
 or right.
 </LI>
<LI>  <tt>obj.SetJustificationToRight ()</tt> -  Set/Get the horizontal justification to left (default), centered,
 or right.
 </LI>
<LI>  <tt>string = obj.GetJustificationAsString ()</tt> -  Set/Get the horizontal justification to left (default), centered,
 or right.
 </LI>
<LI>  <tt>obj.SetVerticalJustification (int )</tt> -  Set/Get the vertical justification to bottom (default), middle,
 or top.
 </LI>
<LI>  <tt>int = obj.GetVerticalJustificationMinValue ()</tt> -  Set/Get the vertical justification to bottom (default), middle,
 or top.
 </LI>
<LI>  <tt>int = obj.GetVerticalJustificationMaxValue ()</tt> -  Set/Get the vertical justification to bottom (default), middle,
 or top.
 </LI>
<LI>  <tt>int = obj.GetVerticalJustification ()</tt> -  Set/Get the vertical justification to bottom (default), middle,
 or top.
 </LI>
<LI>  <tt>obj.SetVerticalJustificationToBottom ()</tt> -  Set/Get the vertical justification to bottom (default), middle,
 or top.
 </LI>
<LI>  <tt>obj.SetVerticalJustificationToCentered ()</tt> -  Set/Get the vertical justification to bottom (default), middle,
 or top.
 </LI>
<LI>  <tt>obj.SetVerticalJustificationToTop ()</tt> -  Set/Get the vertical justification to bottom (default), middle,
 or top.
 </LI>
<LI>  <tt>string = obj.GetVerticalJustificationAsString ()</tt> -  Set/Get the vertical justification to bottom (default), middle,
 or top.
 </LI>
<LI>  <tt>obj.SetOrientation (double )</tt> -  Set/Get the text's orientation (in degrees).
 </LI>
<LI>  <tt>double = obj.GetOrientation ()</tt> -  Set/Get the text's orientation (in degrees).
 </LI>
<LI>  <tt>obj.SetLineSpacing (double )</tt> -  Set/Get the (extra) spacing between lines,
 expressed as a text height multiplication factor.
 </LI>
<LI>  <tt>double = obj.GetLineSpacing ()</tt> -  Set/Get the (extra) spacing between lines,
 expressed as a text height multiplication factor.
 </LI>
<LI>  <tt>obj.SetLineOffset (double )</tt> -  Set/Get the vertical offset (measured in pixels).
 </LI>
<LI>  <tt>double = obj.GetLineOffset ()</tt> -  Set/Get the vertical offset (measured in pixels).
 </LI>
<LI>  <tt>obj.ShallowCopy (vtkTextProperty tprop)</tt> -  Shallow copy of a text property.
 </LI>
</UL>
*/
