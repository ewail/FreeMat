/*!
\page vtkrendering_vtkglslshaderprogram vtkGLSLShaderProgram

<p>
Section: \ref sec_vtkrendering "Visualization Toolkit Rendering Classes"
\section Usage
 vtkGLSLShaderProgram is a concerete implementation of vtkShaderProgram.
 It's main function is to 'Link' a vertex and a fragment shader together
 and install them into the rendering pipeline by calling OpenGL2.0.

 Initialization of shader parameters is delegated to instances of vtkShader
 (vtkGLSLShader in this case).
 .SECTION Thanks
 Shader support in VTK includes key contributions by Gary Templet at 
 Sandia National Labs.

To create an instance of class vtkGLSLShaderProgram, simply
invoke its constructor as follows
\verbatim
  obj = vtkGLSLShaderProgram
\endverbatim
\section Methods
The class vtkGLSLShaderProgram has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkGLSLShaderProgram class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkGLSLShaderProgram = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkGLSLShaderProgram = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.Render (vtkActor actor, vtkRenderer renderer)</tt>
 </LI>
<LI>  <tt>obj.PostRender (vtkActor , vtkRenderer )</tt> -  Called to unload the shaders after the actor has been rendered.
 </LI>
<LI>  <tt>obj.ReleaseGraphicsResources (vtkWindow )</tt> -  Release any graphics resources that are being consumed by this actor.
 The parameter window could be used to determine which graphic
 resources to release.
 </LI>
<LI>  <tt>int = obj.GetProgram ()</tt>
 </LI>
</UL>
*/
