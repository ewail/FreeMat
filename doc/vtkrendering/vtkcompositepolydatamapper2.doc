/*!
\page vtkrendering_vtkcompositepolydatamapper2 vtkCompositePolyDataMapper2

<p>
Section: \ref sec_vtkrendering "Visualization Toolkit Rendering Classes"
\section Usage
 vtkCompositePolyDataMapper2 is similar to vtkCompositePolyDataMapper except
 that instead of creating individual mapper for each block in the composite
 dataset, it iterates over the blocks internally. 

To create an instance of class vtkCompositePolyDataMapper2, simply
invoke its constructor as follows
\verbatim
  obj = vtkCompositePolyDataMapper2
\endverbatim
\section Methods
The class vtkCompositePolyDataMapper2 has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkCompositePolyDataMapper2 class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkCompositePolyDataMapper2 = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkCompositePolyDataMapper2 = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>obj.RenderPiece (vtkRenderer ren, vtkActor act)</tt> -  Implemented by sub classes. Actual rendering is done here.
 </LI>
<LI>  <tt>double = obj.GetBounds ()</tt> -  Standard vtkProp method to get 3D bounds of a 3D prop
 </LI>
<LI>  <tt>obj.GetBounds (double bounds[6])</tt> -  Standard vtkProp method to get 3D bounds of a 3D prop
 </LI>
<LI>  <tt>obj.Render (vtkRenderer ren, vtkActor act)</tt> -  This calls RenderPiece (in a for loop is streaming is necessary).
 Basically a reimplementation for vtkPolyDataMapper::Render() since we don't
 want it to give up when vtkCompositeDataSet is encountered.
 </LI>
<LI>  <tt>obj.SetColorBlocks (int )</tt> -  When set, each block is colored with a different color. Note that scalar
 coloring will be ignored.
 </LI>
<LI>  <tt>int = obj.GetColorBlocks ()</tt> -  When set, each block is colored with a different color. Note that scalar
 coloring will be ignored.
 </LI>
</UL>
*/
