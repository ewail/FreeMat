/*!
\page vtkrendering_vtkabstractpicker vtkAbstractPicker

<p>
Section: \ref sec_vtkrendering "Visualization Toolkit Rendering Classes"
\section Usage
 vtkAbstractPicker is an abstract superclass that defines a minimal API
 for its concrete subclasses. The minimum functionality of a picker is
 to return the x-y-z global coordinate position of a pick (the pick
 itself is defined in display coordinates).

 The API to this class is to invoke the Pick() method with a selection
 point (in display coordinates - pixels) and a renderer. Then get the
 resulting pick position in global coordinates with the GetPickPosition()
 method.

 vtkPicker fires events during the picking process.  These
 events are StartPickEvent, PickEvent, and EndPickEvent which are
 invoked prior to picking, when something is picked, and after all picking
 candidates have been tested. Note that during the pick process the
 PickEvent of vtkProp (and its subclasses such as vtkActor) is fired
 prior to the PickEvent of vtkPicker.

To create an instance of class vtkAbstractPicker, simply
invoke its constructor as follows
\verbatim
  obj = vtkAbstractPicker
\endverbatim
\section Methods
The class vtkAbstractPicker has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkAbstractPicker class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkAbstractPicker = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkAbstractPicker = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>vtkRenderer = obj.GetRenderer ()</tt> -  Get the renderer in which pick event occurred.
 </LI>
<LI>  <tt>double = obj. GetSelectionPoint ()</tt> -  Get the selection point in screen (pixel) coordinates. The third
 value is related to z-buffer depth. (Normally should be =0.)
 </LI>
<LI>  <tt>double = obj. GetPickPosition ()</tt> -  Return position in global coordinates of pick point.
 </LI>
<LI>  <tt>int = obj.Pick (double selectionX, double selectionY, double selectionZ, vtkRenderer renderer)</tt> -  Perform pick operation with selection point provided. Normally the 
 first two values for the selection point are x-y pixel coordinate, and
 the third value is =0. Return non-zero if something was successfully 
 picked.
 </LI>
<LI>  <tt>int = obj.Pick (double selectionPt[3], vtkRenderer ren)</tt> -  provided. Normally the first two values for the selection point
 are x-y pixel coordinate, and the third value is =0. Return
 non-zero if something was successfully picked.
 </LI>
<LI>  <tt>obj.SetPickFromList (int )</tt> -  Use these methods to control whether to limit the picking to this list
 (rather than renderer's actors). Make sure that the pick list contains 
 actors that referred to by the picker's renderer.
 </LI>
<LI>  <tt>int = obj.GetPickFromList ()</tt> -  Use these methods to control whether to limit the picking to this list
 (rather than renderer's actors). Make sure that the pick list contains 
 actors that referred to by the picker's renderer.
 </LI>
<LI>  <tt>obj.PickFromListOn ()</tt> -  Use these methods to control whether to limit the picking to this list
 (rather than renderer's actors). Make sure that the pick list contains 
 actors that referred to by the picker's renderer.
 </LI>
<LI>  <tt>obj.PickFromListOff ()</tt> -  Use these methods to control whether to limit the picking to this list
 (rather than renderer's actors). Make sure that the pick list contains 
 actors that referred to by the picker's renderer.
 </LI>
<LI>  <tt>obj.InitializePickList ()</tt> -  Initialize list of actors in pick list.
 </LI>
<LI>  <tt>obj.AddPickList (vtkProp )</tt> -  Add an actor to the pick list.
 </LI>
<LI>  <tt>obj.DeletePickList (vtkProp )</tt> -  Delete an actor from the pick list.
 </LI>
<LI>  <tt>vtkPropCollection = obj.GetPickList ()</tt>
 </LI>
</UL>
*/
