/*!
\page vtkrendering_vtkpolydatapainter vtkPolyDataPainter

<p>
Section: \ref sec_vtkrendering "Visualization Toolkit Rendering Classes"
\section Usage
 vtkPolyDataPainter encapsulates a method of drawing poly data.  This is a subset
 of what a mapper does.  The painter does no maintenance of the rendering
 state (camera, lights, etc.).  It is solely responsible for issuing
 rendering commands that build graphics primitives.

 To simplify coding, an implementation of vtkPolyDataPainter is allowed to support
 only certain types of poly data or certain types of primitives. 


To create an instance of class vtkPolyDataPainter, simply
invoke its constructor as follows
\verbatim
  obj = vtkPolyDataPainter
\endverbatim
\section Methods
The class vtkPolyDataPainter has several methods that can be used.
  They are listed below.
Note that the documentation is translated automatically from the VTK sources,
and may not be completely intelligible.  When in doubt, consult the VTK website.
In the methods listed below, <tt>obj</tt> is an instance of the vtkPolyDataPainter class.
<UL>
<LI>  <tt>string = obj.GetClassName ()</tt>
 </LI>
<LI>  <tt>int = obj.IsA (string name)</tt>
 </LI>
<LI>  <tt>vtkPolyDataPainter = obj.NewInstance ()</tt>
 </LI>
<LI>  <tt>vtkPolyDataPainter = obj.SafeDownCast (vtkObject o)</tt>
 </LI>
<LI>  <tt>vtkPolyData = obj.GetInputAsPolyData ()</tt> -  Get/set the poly data to render.
 </LI>
<LI>  <tt>vtkPolyData = obj.GetOutputAsPolyData ()</tt> -  Get the output polydata from this Painter. The default 
 implementation forwards the input polydata as the output.
 </LI>
<LI>  <tt>obj.Render (vtkRenderer renderer, vtkActor actor, long typeflags, bool forceCompileOnly)</tt> -  Overridden to stop the render call if input polydata is not set,
 since PolyDataPainter cannot paint without any polydata input.
 </LI>
</UL>
*/
