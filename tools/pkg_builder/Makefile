#############################################################################
# Makefile for building: pkg_builder
# Generated by qmake (2.01a) (Qt 4.3.1) on: Fri Oct 19 01:41:11 2007
# Project:  pkg_builder.pro
# Template: app
# Command: /usr/lib/qt4/bin/qmake-qt4 -unix -o Makefile pkg_builder.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_SCRIPT_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/lib/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtCore -I/usr/include/QtNetwork -I/usr/include/QtNetwork -I/usr/include/QtGui -I/usr/include/QtGui -I/usr/include/QtScript -I/usr/include/QtScript -I/usr/include -I. -I. -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)   -lQtScript -lQtGui -lQtNetwork -lQtCore -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/qt4/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = pkg_builder.cpp \
		ioapi.c \
		quazip.cpp \
		quazipfile.cpp \
		quazipnewinfo.cpp \
		unzip.c \
		zip.c moc_pkg_builder.cpp \
		moc_quazipfile.cpp
OBJECTS       = pkg_builder.o \
		ioapi.o \
		quazip.o \
		quazipfile.o \
		quazipnewinfo.o \
		unzip.o \
		zip.o \
		moc_pkg_builder.o \
		moc_quazipfile.o
DIST          = /usr/share/qt4/mkspecs/common/g++-multilib.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		pkg_builder.pro
QMAKE_TARGET  = pkg_builder
DESTDIR       = 
TARGET        = pkg_builder

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: pkg_builder.pro  /usr/lib/qt4/mkspecs/linux-g++/qmake.conf /usr/lib/qt4/mkspecs/common/g++-multilib.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/lib/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf
	$(QMAKE) -unix -o Makefile pkg_builder.pro
/usr/lib/qt4/mkspecs/common/g++-multilib.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/lib/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile pkg_builder.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/pkg_builder1.0.0 || $(MKDIR) .tmp/pkg_builder1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/pkg_builder1.0.0/ && $(COPY_FILE) --parents pkg_builder.hpp crypt.h ioapi.h quazip.h quazipfile.h quazipfileinfo.h quazipnewinfo.h unzip.h zip.h .tmp/pkg_builder1.0.0/ && $(COPY_FILE) --parents pkg_builder.cpp ioapi.c quazip.cpp quazipfile.cpp quazipnewinfo.cpp unzip.c zip.c .tmp/pkg_builder1.0.0/ && (cd `dirname .tmp/pkg_builder1.0.0` && $(TAR) pkg_builder1.0.0.tar pkg_builder1.0.0 && $(COMPRESS) pkg_builder1.0.0.tar) && $(MOVE) `dirname .tmp/pkg_builder1.0.0`/pkg_builder1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/pkg_builder1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


/usr/lib/qt4/bin/moc:
	(cd $(QTDIR)/src/tools/moc && $(MAKE))

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_pkg_builder.cpp moc_quazipfile.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_pkg_builder.cpp moc_quazipfile.cpp
moc_pkg_builder.cpp: pkg_builder.hpp \
		/usr/lib/qt4/bin/moc
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) pkg_builder.hpp -o moc_pkg_builder.cpp

moc_quazipfile.cpp: quazip.h \
		zip.h \
		ioapi.h \
		unzip.h \
		quazipfileinfo.h \
		quazipnewinfo.h \
		quazipfile.h \
		/usr/lib/qt4/bin/moc
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) quazipfile.h -o moc_quazipfile.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

pkg_builder.o: pkg_builder.cpp pkg_builder.hpp \
		quazip.h \
		zip.h \
		ioapi.h \
		unzip.h \
		quazipfileinfo.h \
		quazipfile.h \
		quazipnewinfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pkg_builder.o pkg_builder.cpp

ioapi.o: ioapi.c ioapi.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o ioapi.o ioapi.c

quazip.o: quazip.cpp quazip.h \
		zip.h \
		ioapi.h \
		unzip.h \
		quazipfileinfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o quazip.o quazip.cpp

quazipfile.o: quazipfile.cpp quazipfile.h \
		quazip.h \
		zip.h \
		ioapi.h \
		unzip.h \
		quazipfileinfo.h \
		quazipnewinfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o quazipfile.o quazipfile.cpp

quazipnewinfo.o: quazipnewinfo.cpp quazipnewinfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o quazipnewinfo.o quazipnewinfo.cpp

unzip.o: unzip.c unzip.h \
		ioapi.h \
		crypt.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o unzip.o unzip.c

zip.o: zip.c zip.h \
		ioapi.h \
		crypt.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o zip.o zip.c

moc_pkg_builder.o: moc_pkg_builder.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_pkg_builder.o moc_pkg_builder.cpp

moc_quazipfile.o: moc_quazipfile.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_quazipfile.o moc_quazipfile.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

