
 Usage

This class is used to represent and render a
vtkSliderWidget. To use this class, you must at a minimum
specify the end points of the slider. Optional instance
variable can be used to modify the appearance of the widget.
To create an instance of class vtkSliderRepresentation3D,
simply invoke its constructor as follows

    obj = vtkSliderRepresentation3D



 Methods

The class vtkSliderRepresentation3D has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkSliderRepresentation3D class.

* string = obj.GetClassName () - Standard methods for the
  class.
* int = obj.IsA (string name) - Standard methods for the
  class.
* vtkSliderRepresentation3D = obj.NewInstance () - Standard
  methods for the class.
* vtkSliderRepresentation3D = obj.SafeDownCast (vtkObject o)
  - Standard methods for the class.
* vtkCoordinate = obj.GetPoint1Coordinate () - Position the
  first end point of the slider. Note that this point is an
  instance of vtkCoordinate, meaning that Point 1 can be
  specified in a variety of coordinate systems, and can even
  be relative to another point. To set the point, you'll
  want to get the Point1Coordinate and then invoke the
  necessary methods to put it into the correct coordinate
  system and set the correct initial value.
* obj.SetPoint1InWorldCoordinates (double x, double y,
  double z) - Position the first end point of the slider.
  Note that this point is an instance of vtkCoordinate,
  meaning that Point 1 can be specified in a variety of
  coordinate systems, and can even be relative to another
  point. To set the point, you'll want to get the
  Point1Coordinate and then invoke the necessary methods to
  put it into the correct coordinate system and set the
  correct initial value.
* vtkCoordinate = obj.GetPoint2Coordinate () - Position the
  second end point of the slider. Note that this point is an
  instance of vtkCoordinate, meaning that Point 1 can be
  specified in a variety of coordinate systems, and can even
  be relative to another point. To set the point, you'll
  want to get the Point2Coordinate and then invoke the
  necessary methods to put it into the correct coordinate
  system and set the correct initial value.
* obj.SetPoint2InWorldCoordinates (double x, double y,
  double z) - Position the second end point of the slider.
  Note that this point is an instance of vtkCoordinate,
  meaning that Point 1 can be specified in a variety of
  coordinate systems, and can even be relative to another
  point. To set the point, you'll want to get the
  Point2Coordinate and then invoke the necessary methods to
  put it into the correct coordinate system and set the
  correct initial value.
* obj.SetTitleText (string ) - Specify the title text for
  this widget. If the value is not set, or set to the empty
  string "", then the title text is not displayed.
* string = obj.GetTitleText () - Specify the title text for
  this widget. If the value is not set, or set to the empty
  string "", then the title text is not displayed.
* obj.SetSliderShape (int ) - Specify whether to use a
  sphere or cylinder slider shape. By default, a sphere
  shape is used.
* int = obj.GetSliderShapeMinValue () - Specify whether to
  use a sphere or cylinder slider shape. By default, a
  sphere shape is used.
* int = obj.GetSliderShapeMaxValue () - Specify whether to
  use a sphere or cylinder slider shape. By default, a
  sphere shape is used.
* int = obj.GetSliderShape () - Specify whether to use a
  sphere or cylinder slider shape. By default, a sphere
  shape is used.
* obj.SetSliderShapeToSphere () - Specify whether to use a
  sphere or cylinder slider shape. By default, a sphere
  shape is used.
* obj.SetSliderShapeToCylinder () - Set the rotation of the
  slider widget around the axis of the widget. This is used
  to control which way the widget is initially oriented.
  (This is especially important for the label and title.)
* obj.SetRotation (double ) - Set the rotation of the slider
  widget around the axis of the widget. This is used to
  control which way the widget is initially oriented. (This
  is especially important for the label and title.)
* double = obj.GetRotation () - Set the rotation of the
  slider widget around the axis of the widget. This is used
  to control which way the widget is initially oriented.
  (This is especially important for the label and title.)
* vtkProperty = obj.GetSliderProperty () - Get the slider
  properties. The properties of the slider when selected and
  unselected can be manipulated.
* vtkProperty = obj.GetTubeProperty () - Get the properties
  for the tube and end caps.
* vtkProperty = obj.GetCapProperty () - Get the properties
  for the tube and end caps.
* vtkProperty = obj.GetSelectedProperty () - Get the
  selection property. This property is used to modify the
  appearance of selected objects (e.g., the slider).
* obj.PlaceWidget (double bounds[6]) - Methods to interface
  with the vtkSliderWidget.
* obj.BuildRepresentation () - Methods to interface with the
  vtkSliderWidget.
* obj.StartWidgetInteraction (double eventPos[2]) - Methods
  to interface with the vtkSliderWidget.
* obj.WidgetInteraction (double newEventPos[2]) - Methods to
  interface with the vtkSliderWidget.
* obj.Highlight (int ) - Methods to interface with the
  vtkSliderWidget.
* double = obj.GetBounds ()
* obj.GetActors (vtkPropCollection )
* obj.ReleaseGraphicsResources (vtkWindow )
* int = obj.RenderOpaqueGeometry (vtkViewport )
* int = obj.RenderTranslucentPolygonalGeometry (vtkViewport
  )
* int = obj.HasTranslucentPolygonalGeometry ()
* long = obj.GetMTime () - Override GetMTime to include
  point coordinates


* FreeMat_Documentation
* Visualization_Toolkit_Widget_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

