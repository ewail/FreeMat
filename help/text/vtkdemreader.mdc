
 Usage

vtkDEMReader reads digital elevation files and creates image
data. Digital elevation files are produced by the US
Geological_Survey. A complete description of the DEM file is
located at the USGS site. The reader reads the entire dem
file and create a vtkImageData that contains a single scalar
component that is the elevation in meters. The spacing is
also expressed in meters. A number of get methods provide
access to fields on the header.
To create an instance of class vtkDEMReader, simply invoke
its constructor as follows

    obj = vtkDEMReader



 Methods

The class vtkDEMReader has several methods that can be used.
They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkDEMReader class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkDEMReader = obj.NewInstance ()
* vtkDEMReader = obj.SafeDownCast (vtkObject o)
* obj.SetFileName (string ) - Specify file name of Digital
  Elevation Model (DEM) file
* string = obj.GetFileName () - Specify file name of Digital
  Elevation Model (DEM) file
* obj.SetElevationReference (int ) - Specify the elevation
  origin to use. By default, the elevation origin is equal
  to ElevationBounds[0]. A more convenient origin is to use
  sea level (i.e., a value of 0.0).
* int = obj.GetElevationReferenceMinValue () - Specify the
  elevation origin to use. By default, the elevation origin
  is equal to ElevationBounds[0]. A more convenient origin
  is to use sea level (i.e., a value of 0.0).
* int = obj.GetElevationReferenceMaxValue () - Specify the
  elevation origin to use. By default, the elevation origin
  is equal to ElevationBounds[0]. A more convenient origin
  is to use sea level (i.e., a value of 0.0).
* int = obj.GetElevationReference () - Specify the elevation
  origin to use. By default, the elevation origin is equal
  to ElevationBounds[0]. A more convenient origin is to use
  sea level (i.e., a value of 0.0).
* obj.SetElevationReferenceToSeaLevel () - Specify the
  elevation origin to use. By default, the elevation origin
  is equal to ElevationBounds[0]. A more convenient origin
  is to use sea level (i.e., a value of 0.0).
* obj.SetElevationReferenceToElevationBounds () - Specify
  the elevation origin to use. By default, the elevation
  origin is equal to ElevationBounds[0]. A more convenient
  origin is to use sea level (i.e., a value of 0.0).
* string = obj.GetElevationReferenceAsString (void ) -
  Specify the elevation origin to use. By default, the
  elevation origin is equal to ElevationBounds[0]. A more
  convenient origin is to use sea level (i.e., a value of
  0.0).
* string = obj.GetMapLabel () - An ASCII description of the
  map
* int = obj.GetDEMLevel () - Code 1=DEM-1, 2=DEM_2, ...
* int = obj.GetElevationPattern () - Code 1=regular,
  2=random, reserved for future use
* int = obj.GetGroundSystem () - Ground planimetric
  reference system
* int = obj.GetGroundZone () - Zone in ground planimetric
  reference system
* float = obj. GetProjectionParameters () - Map Projection
  parameters. All are zero.
* int = obj.GetPlaneUnitOfMeasure () - Defining unit of
  measure for ground planimetric coordinates throughout the
  file. 0 = radians, 1 = feet, 2 = meters, 3 = arc-seconds.
* int = obj.GetElevationUnitOfMeasure () - Defining unit of
  measure for elevation coordinates throughout the file. 1 =
  feet, 2 = meters
* int = obj.GetPolygonSize () - Number of sides in the
  polygon which defines the coverage of the DEM file. Set to
  4.
* float = obj. GetElevationBounds () - Minimum and maximum
  elevation for the DEM. The units in the file are in
  ElevationUnitOfMeasure. This class converts them to
  meters.
* float = obj.GetLocalRotation () - Counterclockwise angle
  (in radians) from the primary axis of the planimetric
  reference to the primary axis of the DEM local reference
  system. IGNORED BY THIS IMPLEMENTATION.
* int = obj.GetAccuracyCode () - Accuracy code for
  elevations. 0=unknown accuracy
* float = obj. GetSpatialResolution () - DEM spatial
  resolution for x,y,z. Values are expressed in units of
  resolution. Since elevations are read as integers, this
  permits fractional elevations.
* int = obj. GetProfileDimension () - The number of rows and
  columns in the DEM.


* FreeMat_Documentation
* Visualization_Toolkit_IO_Classes
* Generated on Thu Jul 25 2013 17:18:34 for FreeMat by
  doxygen_ 1.8.1.1

