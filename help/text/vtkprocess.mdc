
 Usage

vtkProcess is an abstract class representing a process that
can be launched by a vtkMultiProcessController. Concrete
classes just have to implement Execute() method and make
sure it set the proper value in ReturnValue.
.SECTION Example class MyProcess: public vtkProcess ...
vtkMultiProcessController *c; MyProcess *p=new MyProcess::
New(); p->SetArgs(argc,argv); // some parameters specific to
the process p->SetX(10.0); // ... c->SetSingleProcess(p); c-
>SingleMethodExecute(); int returnValue=p->GetReturnValue();
To create an instance of class vtkProcess, simply invoke its
constructor as follows

    obj = vtkProcess



 Methods

The class vtkProcess has several methods that can be used.
They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkProcess class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkProcess = obj.NewInstance ()
* vtkProcess = obj.SafeDownCast (vtkObject o)
* obj.Execute ()
* vtkMultiProcessController = obj.GetController () - Give
  access to the controller that launched the process.
  Initial value is NULL.
* obj.SetController (vtkMultiProcessController aController)
  - This method should not be called directly but set by the
  controller itself.
* int = obj.GetReturnValue () - Value set at the end of a
  call to Execute.


* FreeMat_Documentation
* Visualization_Toolkit_Parallel_Classes
* Generated on Thu Jul 25 2013 17:18:34 for FreeMat by
  doxygen_ 1.8.1.1

