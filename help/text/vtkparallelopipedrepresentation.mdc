
 Usage

This class provides the default geometrical representation
for vtkParallelopipedWidget. As a result of interactions of
the widget, this representation can take on of the following
shapes:
1) A parallelopiped. (8 handles, 6 faces)
2) Paralleopiped with a chair depression on any one handle.
(A chair is a depression on one of the handles that carves
inwards so as to allow the user to visualize cuts in the
volume). (14 handles, 9 faces).
To create an instance of class
vtkParallelopipedRepresentation, simply invoke its
constructor as follows

    obj = vtkParallelopipedRepresentation



 Methods

The class vtkParallelopipedRepresentation has several
methods that can be used. They are listed below. Note that
the documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkParallelopipedRepresentation
class.

* string = obj.GetClassName () - Standard methods for
  instances of this class.
* int = obj.IsA (string name) - Standard methods for
  instances of this class.
* vtkParallelopipedRepresentation = obj.NewInstance () -
  Standard methods for instances of this class.
* vtkParallelopipedRepresentation = obj.SafeDownCast
  (vtkObject o) - Standard methods for instances of this
  class.
* obj.GetActors (vtkPropCollection pc) - Methods to satisfy
  the superclass.
* obj.PlaceWidget (double bounds[6]) - Place the widget in
  the scene. You can use either of the two APIs : 1)
  PlaceWidget( double bounds[6] ) Creates a cuboid
  conforming to the said bounds. 2) PlaceWidget( double
  corners[8][3] ) Creates a parallelopiped with corners
  specified. The order in which corners are specified must
  obey the following rule: Corner 0 - 1 - 2 - 3 - 0 forms a
  face Corner 4 - 5 - 6 - 7 - 4 forms a face Corner 0 - 4 -
  5 - 1 - 0 forms a face Corner 1 - 5 - 6 - 2 - 1 forms a
  face Corner 2 - 6 - 7 - 3 - 2 forms a face Corner 3 - 7 -
  4 - 0 - 3 forms a face
* obj.SetInteractionState (int ) - The interaction state may
  be set from a widget (e.g., PointWidget) or other object.
  This controls how the interaction with the widget
  proceeds.
* obj.GetBoundingPlanes (vtkPlaneCollection pc) - Get the
  bounding planes of the object. The first 6 planes will be
  bounding planes of the parallelopiped. If in chair mode,
  three additional planes will be present. The last three
  planes will be those of the chair. The normals of all the
  planes will point into the object.
* obj.GetPolyData (vtkPolyData pd) - The parallelopiped
  polydata.
* double = obj.GetBounds () - The parallelopiped polydata.
* obj.SetHandleProperty (vtkProperty ) - Set/Get the handle
  properties.
* obj.SetHoveredHandleProperty (vtkProperty ) - Set/Get the
  handle properties.
* obj.SetSelectedHandleProperty (vtkProperty ) - Set/Get the
  handle properties.
* vtkProperty = obj.GetHandleProperty () - Set/Get the
  handle properties.
* vtkProperty = obj.GetHoveredHandleProperty () - Set/Get
  the handle properties.
* vtkProperty = obj.GetSelectedHandleProperty () - Set/Get
  the handle properties.
* obj.SetHandleRepresentation (vtkHandleRepresentation
  handle)
* vtkHandleRepresentation = obj.GetHandleRepresentation (int
  index)
* obj.HandlesOn () - Turns the visibility of the handles on/
  off. Sometimes they may get in the way of visualization.
* obj.HandlesOff () - Turns the visibility of the handles
  on/off. Sometimes they may get in the way of
  visualization.
* vtkProperty = obj.GetFaceProperty () - Get the face
  properties. When a face is being translated, the face gets
  highlighted with the SelectedFaceProperty.
* vtkProperty = obj.GetSelectedFaceProperty () - Get the
  face properties. When a face is being translated, the face
  gets highlighted with the SelectedFaceProperty.
* vtkProperty = obj.GetOutlineProperty () - Get the outline
  properties. These are the properties with which the
  parallelopiped wireframe is rendered.
* vtkProperty = obj.GetSelectedOutlineProperty () - Get the
  outline properties. These are the properties with which
  the parallelopiped wireframe is rendered.
* obj.BuildRepresentation () - This actually constructs the
  geometry of the widget from the various data parameters.
* obj.ReleaseGraphicsResources (vtkWindow w) - Methods
  required by vtkProp superclass.
* int = obj.RenderOverlay (vtkViewport viewport) - Methods
  required by vtkProp superclass.
* int = obj.RenderOpaqueGeometry (vtkViewport viewport) -
  Methods required by vtkProp superclass.
* int = obj.ComputeInteractionState (int X, int Y, int
  modify) - Given and x-y display coordinate, compute the
  interaction state of the widget.
* obj.Translate (double translation[3])
* obj.Translate (int X, int Y)
* obj.Scale (int X, int Y)
* obj.PositionHandles () - Synchronize the parallelopiped
  handle positions with the Polygonal datastructure.
* obj.SetMinimumThickness (double ) - Minimum thickness for
  the parallelopiped. User interactions cannot make any
  individual axis of the parallopiped thinner than this
  value. Default is 0.05 expressed as a fraction of the
  diagonal of the bounding box used in the PlaceWidget()
  invocation.
* double = obj.GetMinimumThickness () - Minimum thickness
  for the parallelopiped. User interactions cannot make any
  individual axis of the parallopiped thinner than this
  value. Default is 0.05 expressed as a fraction of the
  diagonal of the bounding box used in the PlaceWidget()
  invocation.


* FreeMat_Documentation
* Visualization_Toolkit_Widget_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

