
 Usage

vtkSampleFunction is a source object that evaluates an
implicit function and normals at each point in a
vtkStructuredPoints. The user can specify the sample
dimensions and location in space to perform the sampling. To
create closed surfaces (in conjunction with the
vtkContourFilter), capping can be turned on to set a
particular value on the boundaries of the sample space.
To create an instance of class vtkSampleFunction, simply
invoke its constructor as follows

    obj = vtkSampleFunction



 Methods

The class vtkSampleFunction has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkSampleFunction class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkSampleFunction = obj.NewInstance ()
* vtkSampleFunction = obj.SafeDownCast (vtkObject o)
* obj.SetImplicitFunction (vtkImplicitFunction ) - Specify
  the implicit function to use to generate data.
* vtkImplicitFunction = obj.GetImplicitFunction () - Specify
  the implicit function to use to generate data.
* obj.SetOutputScalarType (int ) - Set what type of scalar
  data this source should generate.
* int = obj.GetOutputScalarType () - Set what type of scalar
  data this source should generate.
* obj.SetOutputScalarTypeToDouble () - Set what type of
  scalar data this source should generate.
* obj.SetOutputScalarTypeToFloat () - Set what type of
  scalar data this source should generate.
* obj.SetOutputScalarTypeToLong () - Set what type of scalar
  data this source should generate.
* obj.SetOutputScalarTypeToUnsignedLong () - Set what type
  of scalar data this source should generate.
* obj.SetOutputScalarTypeToInt () - Set what type of scalar
  data this source should generate.
* obj.SetOutputScalarTypeToUnsignedInt () - Set what type of
  scalar data this source should generate.
* obj.SetOutputScalarTypeToShort () - Set what type of
  scalar data this source should generate.
* obj.SetOutputScalarTypeToUnsignedShort () - Set what type
  of scalar data this source should generate.
* obj.SetOutputScalarTypeToChar () - Set what type of scalar
  data this source should generate.
* obj.SetOutputScalarTypeToUnsignedChar () - Control the
  type of the scalars object by explicitly providing a
  scalar object. THIS IS DEPRECATED, although it still
  works!!! Please use SetOutputScalarType instead.
* obj.SetScalars (vtkDataArray da) - Control the type of the
  scalars object by explicitly providing a scalar object.
  THIS IS DEPRECATED, although it still works!!! Please use
  SetOutputScalarType instead.
* obj.SetSampleDimensions (int i, int j, int k) - Specify
  the dimensions of the data on which to sample.
* obj.SetSampleDimensions (int dim[3]) - Specify the
  dimensions of the data on which to sample.
* int = obj. GetSampleDimensions () - Specify the dimensions
  of the data on which to sample.
* obj.SetModelBounds (double , double , double , double ,
  double , double ) - Specify the region in space over which
  the sampling occurs. The bounds is specified as
  (xMin,xMax, yMin,yMax, zMin,zMax).
* obj.SetModelBounds (double a[6]) - Specify the region in
  space over which the sampling occurs. The bounds is
  specified as (xMin,xMax, yMin,yMax, zMin,zMax).
* double = obj. GetModelBounds () - Specify the region in
  space over which the sampling occurs. The bounds is
  specified as (xMin,xMax, yMin,yMax, zMin,zMax).
* obj.SetCapping (int ) - Turn on/off capping. If capping is
  on, then the outer boundaries of the structured point set
  are set to cap value. This can be used to insure surfaces
  are closed.
* int = obj.GetCapping () - Turn on/off capping. If capping
  is on, then the outer boundaries of the structured point
  set are set to cap value. This can be used to insure
  surfaces are closed.
* obj.CappingOn () - Turn on/off capping. If capping is on,
  then the outer boundaries of the structured point set are
  set to cap value. This can be used to insure surfaces are
  closed.
* obj.CappingOff () - Turn on/off capping. If capping is on,
  then the outer boundaries of the structured point set are
  set to cap value. This can be used to insure surfaces are
  closed.
* obj.SetCapValue (double ) - Set the cap value.
* double = obj.GetCapValue () - Set the cap value.
* obj.SetComputeNormals (int ) - Turn on/off the computation
  of normals (normals are float values).
* int = obj.GetComputeNormals () - Turn on/off the
  computation of normals (normals are float values).
* obj.ComputeNormalsOn () - Turn on/off the computation of
  normals (normals are float values).
* obj.ComputeNormalsOff () - Turn on/off the computation of
  normals (normals are float values).
* obj.SetScalarArrayName (string ) - Set/get the scalar
  array name for this data set. Initial value is "scalars".
* string = obj.GetScalarArrayName () - Set/get the scalar
  array name for this data set. Initial value is "scalars".
* obj.SetNormalArrayName (string ) - Set/get the normal
  array name for this data set. Initial value is "normals".
* string = obj.GetNormalArrayName () - Set/get the normal
  array name for this data set. Initial value is "normals".
* long = obj.GetMTime () - Return the MTime also considering
  the implicit function.


* FreeMat_Documentation
* Visualization_Toolkit_Imaging_Classes
* Generated on Thu Jul 25 2013 17:18:33 for FreeMat by
  doxygen_ 1.8.1.1

