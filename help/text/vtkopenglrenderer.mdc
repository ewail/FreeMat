
 Usage

vtkOpenGLRenderer is a concrete implementation of the
abstract class vtkRenderer. vtkOpenGLRenderer interfaces to
the OpenGL graphics library.
To create an instance of class vtkOpenGLRenderer, simply
invoke its constructor as follows

    obj = vtkOpenGLRenderer



 Methods

The class vtkOpenGLRenderer has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkOpenGLRenderer class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkOpenGLRenderer = obj.NewInstance ()
* vtkOpenGLRenderer = obj.SafeDownCast (vtkObject o)
* obj.DeviceRender (void ) - Concrete open gl render method.
* obj.DeviceRenderTranslucentPolygonalGeometry () - Render
  translucent polygonal geometry. Default implementation
  just call UpdateTranslucentPolygonalGeometry(). Subclasses
  of vtkRenderer that can deal with depth peeling must
  override this method.
* obj.ClearLights (void ) - Internal method temporarily
  removes lights before reloading them into graphics
  pipeline.
* obj.Clear (void )
* int = obj.UpdateLights (void ) - Ask lights to load
  themselves into graphics pipeline.
* int = obj.GetDepthPeelingHigherLayer () - Is rendering at
  translucent geometry stage using depth peeling and
  rendering a layer other than the first one? (Boolean
  value) If so, the uniform variables UseTexture and Texture
  can be set. (Used by vtkOpenGLProperty or
  vtkOpenGLTexture)


* FreeMat_Documentation
* Visualization_Toolkit_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:35 for FreeMat by
  doxygen_ 1.8.1.1

