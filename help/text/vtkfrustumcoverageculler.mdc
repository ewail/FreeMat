
 Usage

vtkFrustumCoverageCuller will cull props based on the
coverage in the view frustum. The coverage is computed by
enclosing the prop in a bounding sphere, projecting that to
the viewing coordinate system, then taking a slice through
the view frustum at the center of the sphere. This results
in a circle on the plane slice through the view frustum.
This circle is enclosed in a squared, and the fraction of
the plane slice that this square covers is the coverage.
This is a number between 0 and 1. If the number is less than
the MinumumCoverage, the allocated render time for that prop
is set to zero. If it is greater than the MaximumCoverage,
the allocated render time is set to 1.0. In between, a
linear ramp is used to convert coverage into allocated
render time.
To create an instance of class vtkFrustumCoverageCuller,
simply invoke its constructor as follows

    obj = vtkFrustumCoverageCuller



 Methods

The class vtkFrustumCoverageCuller has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkFrustumCoverageCuller class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkFrustumCoverageCuller = obj.NewInstance ()
* vtkFrustumCoverageCuller = obj.SafeDownCast (vtkObject o)
* obj.SetMinimumCoverage (double ) - Set/Get the minimum
  coverage - props with less coverage than this are given no
  time to render (they are culled)
* double = obj.GetMinimumCoverage () - Set/Get the minimum
  coverage - props with less coverage than this are given no
  time to render (they are culled)
* obj.SetMaximumCoverage (double ) - Set/Get the maximum
  coverage - props with more coverage than this are given an
  allocated render time of 1.0 (the maximum)
* double = obj.GetMaximumCoverage () - Set/Get the maximum
  coverage - props with more coverage than this are given an
  allocated render time of 1.0 (the maximum)
* obj.SetSortingStyle (int ) - Set the sorting style - none,
  front-to-back or back-to-front The default is none
* int = obj.GetSortingStyleMinValue () - Set the sorting
  style - none, front-to-back or back-to-front The default
  is none
* int = obj.GetSortingStyleMaxValue () - Set the sorting
  style - none, front-to-back or back-to-front The default
  is none
* int = obj.GetSortingStyle () - Set the sorting style -
  none, front-to-back or back-to-front The default is none
* obj.SetSortingStyleToNone () - Set the sorting style -
  none, front-to-back or back-to-front The default is none
* obj.SetSortingStyleToBackToFront () - Set the sorting
  style - none, front-to-back or back-to-front The default
  is none
* obj.SetSortingStyleToFrontToBack () - Set the sorting
  style - none, front-to-back or back-to-front The default
  is none
* string = obj.GetSortingStyleAsString (void ) - Set the
  sorting style - none, front-to-back or back-to-front The
  default is none


* FreeMat_Documentation
* Visualization_Toolkit_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:35 for FreeMat by
  doxygen_ 1.8.1.1

