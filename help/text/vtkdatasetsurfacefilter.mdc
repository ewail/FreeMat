
 Usage

vtkDataSetSurfaceFilter is a faster version of vtkGeometry
filter, but it does not have an option to select bounds. It
may use more memory than vtkGeometryFilter. It only has one
option: whether to use triangle strips when the input type
is structured.
To create an instance of class vtkDataSetSurfaceFilter,
simply invoke its constructor as follows

    obj = vtkDataSetSurfaceFilter



 Methods

The class vtkDataSetSurfaceFilter has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkDataSetSurfaceFilter class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkDataSetSurfaceFilter = obj.NewInstance ()
* vtkDataSetSurfaceFilter = obj.SafeDownCast (vtkObject o)
* obj.SetUseStrips (int ) - When input is structured data,
  this flag will generate faces with triangle strips. This
  should render faster and use less memory, but no cell data
  is copied. By default, UseStrips is Off.
* int = obj.GetUseStrips () - When input is structured data,
  this flag will generate faces with triangle strips. This
  should render faster and use less memory, but no cell data
  is copied. By default, UseStrips is Off.
* obj.UseStripsOn () - When input is structured data, this
  flag will generate faces with triangle strips. This should
  render faster and use less memory, but no cell data is
  copied. By default, UseStrips is Off.
* obj.UseStripsOff () - When input is structured data, this
  flag will generate faces with triangle strips. This should
  render faster and use less memory, but no cell data is
  copied. By default, UseStrips is Off.
* obj.SetPieceInvariant (int ) - If PieceInvariant is true,
  vtkDataSetSurfaceFilter requests 1 ghost level from input
  in order to remove internal surface that are between
  processes. False by default.
* int = obj.GetPieceInvariant () - If PieceInvariant is
  true, vtkDataSetSurfaceFilter requests 1 ghost level from
  input in order to remove internal surface that are between
  processes. False by default.
* obj.SetPassThroughCellIds (int ) - If on, the output
  polygonal dataset will have a celldata array that holds
  the cell index of the original 3D cell that produced each
  output cell. This is useful for cell picking. The default
  is off to conserve memory. Note that PassThroughCellIds
  will be ignored if UseStrips is on, since in that case
  each tringle strip can represent more than on of the input
  cells.
* int = obj.GetPassThroughCellIds () - If on, the output
  polygonal dataset will have a celldata array that holds
  the cell index of the original 3D cell that produced each
  output cell. This is useful for cell picking. The default
  is off to conserve memory. Note that PassThroughCellIds
  will be ignored if UseStrips is on, since in that case
  each tringle strip can represent more than on of the input
  cells.
* obj.PassThroughCellIdsOn () - If on, the output polygonal
  dataset will have a celldata array that holds the cell
  index of the original 3D cell that produced each output
  cell. This is useful for cell picking. The default is off
  to conserve memory. Note that PassThroughCellIds will be
  ignored if UseStrips is on, since in that case each
  tringle strip can represent more than on of the input
  cells.
* obj.PassThroughCellIdsOff () - If on, the output polygonal
  dataset will have a celldata array that holds the cell
  index of the original 3D cell that produced each output
  cell. This is useful for cell picking. The default is off
  to conserve memory. Note that PassThroughCellIds will be
  ignored if UseStrips is on, since in that case each
  tringle strip can represent more than on of the input
  cells.
* obj.SetPassThroughPointIds (int ) - If on, the output
  polygonal dataset will have a celldata array that holds
  the cell index of the original 3D cell that produced each
  output cell. This is useful for cell picking. The default
  is off to conserve memory. Note that PassThroughCellIds
  will be ignored if UseStrips is on, since in that case
  each tringle strip can represent more than on of the input
  cells.
* int = obj.GetPassThroughPointIds () - If on, the output
  polygonal dataset will have a celldata array that holds
  the cell index of the original 3D cell that produced each
  output cell. This is useful for cell picking. The default
  is off to conserve memory. Note that PassThroughCellIds
  will be ignored if UseStrips is on, since in that case
  each tringle strip can represent more than on of the input
  cells.
* obj.PassThroughPointIdsOn () - If on, the output polygonal
  dataset will have a celldata array that holds the cell
  index of the original 3D cell that produced each output
  cell. This is useful for cell picking. The default is off
  to conserve memory. Note that PassThroughCellIds will be
  ignored if UseStrips is on, since in that case each
  tringle strip can represent more than on of the input
  cells.
* obj.PassThroughPointIdsOff () - If on, the output
  polygonal dataset will have a celldata array that holds
  the cell index of the original 3D cell that produced each
  output cell. This is useful for cell picking. The default
  is off to conserve memory. Note that PassThroughCellIds
  will be ignored if UseStrips is on, since in that case
  each tringle strip can represent more than on of the input
  cells.
* int = obj.StructuredExecute (vtkDataSet input, vtkPolyData
  output, int ext32, int wholeExt32) - Direct access methods
  that can be used to use the this class as an algorithm
  without using it as a filter.
* int = obj.UnstructuredGridExecute (vtkDataSet input,
  vtkPolyData output) - Direct access methods that can be
  used to use the this class as an algorithm without using
  it as a filter.
* int = obj.DataSetExecute (vtkDataSet input, vtkPolyData
  output) - Direct access methods that can be used to use
  the this class as an algorithm without using it as a
  filter.


* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:31 for FreeMat by
  doxygen_ 1.8.1.1

