
 Usage

This filter transforms points from one coordinate system to
another. The user must specify the coordinate systems in
which the input and output are specified. The user must also
specify the VTK viewport (i.e., renderer) in which the
transformation occurs.
To create an instance of class
vtkTransformCoordinateSystems, simply invoke its constructor
as follows

    obj = vtkTransformCoordinateSystems



 Methods

The class vtkTransformCoordinateSystems has several methods
that can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkTransformCoordinateSystems
class.

* string = obj.GetClassName () - Standard methods for type
  information and printing.
* int = obj.IsA (string name) - Standard methods for type
  information and printing.
* vtkTransformCoordinateSystems = obj.NewInstance () -
  Standard methods for type information and printing.
* vtkTransformCoordinateSystems = obj.SafeDownCast
  (vtkObject o) - Standard methods for type information and
  printing.
* obj.SetInputCoordinateSystem (int ) - Set/get the
  coordinate system in which the input is specified. The
  current options are World, Viewport, and Display. By
  default the input coordinate system is World.
* int = obj.GetInputCoordinateSystem () - Set/get the
  coordinate system in which the input is specified. The
  current options are World, Viewport, and Display. By
  default the input coordinate system is World.
* obj.SetInputCoordinateSystemToDisplay () - Set/get the
  coordinate system in which the input is specified. The
  current options are World, Viewport, and Display. By
  default the input coordinate system is World.
* obj.SetInputCoordinateSystemToViewport () - Set/get the
  coordinate system in which the input is specified. The
  current options are World, Viewport, and Display. By
  default the input coordinate system is World.
* obj.SetInputCoordinateSystemToWorld () - Set/get the
  coordinate system to which to transform the output. The
  current options are World, Viewport, and Display. By
  default the output coordinate system is Display.
* obj.SetOutputCoordinateSystem (int ) - Set/get the
  coordinate system to which to transform the output. The
  current options are World, Viewport, and Display. By
  default the output coordinate system is Display.
* int = obj.GetOutputCoordinateSystem () - Set/get the
  coordinate system to which to transform the output. The
  current options are World, Viewport, and Display. By
  default the output coordinate system is Display.
* obj.SetOutputCoordinateSystemToDisplay () - Set/get the
  coordinate system to which to transform the output. The
  current options are World, Viewport, and Display. By
  default the output coordinate system is Display.
* obj.SetOutputCoordinateSystemToViewport () - Set/get the
  coordinate system to which to transform the output. The
  current options are World, Viewport, and Display. By
  default the output coordinate system is Display.
* obj.SetOutputCoordinateSystemToWorld () - Return the MTime
  also considering the instance of vtkCoordinate.
* long = obj.GetMTime () - Return the MTime also considering
  the instance of vtkCoordinate.
* obj.SetViewport (vtkViewport viewport) - In order for
  successful coordinate transformation to occur, an instance
  of vtkViewport (e.g., a VTK renderer) must be specified.
  NOTE: this is a raw pointer, not a weak pointer not a
  reference counted object to avoid reference cycle loop
  between rendering classes and filter classes.
* vtkViewport = obj.GetViewport () - In order for successful
  coordinate transformation to occur, an instance of
  vtkViewport (e.g., a VTK renderer) must be specified.
  NOTE: this is a raw pointer, not a weak pointer not a
  reference counted object to avoid reference cycle loop
  between rendering classes and filter classes.


* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:32 for FreeMat by
  doxygen_ 1.8.1.1

