
 Usage

vtkMaskFields is used to mark which fields in the input
dataset get copied to the output. The output will contain
only those fields marked as on by the filter.
To create an instance of class vtkMaskFields, simply invoke
its constructor as follows

    obj = vtkMaskFields



 Methods

The class vtkMaskFields has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkMaskFields class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkMaskFields = obj.NewInstance ()
* vtkMaskFields = obj.SafeDownCast (vtkObject o)
* obj.CopyFieldOn (int fieldLocation, string name) - Turn
  on/off the copying of the field or specified by name.
  During the copying/passing, the following rules are
  followed for each array:

    1. If the copy flag for an array is set (on or off), it
       is applied This overrides rule 2.
    2. If CopyAllOn is set, copy the array. If CopyAllOff is
       set, do not copy the array A field name and a
       location must be specified. For example:

          maskFields->CopyFieldOff(vtkMaskFields::CELL_DATA,
         "foo");

       causes the field "foo" on the input cell data to not
       get copied to the output.

* obj.CopyFieldOff (int fieldLocation, string name) - Turn
  on/off the copying of the attribute or specified by
  vtkDataSetAttributes:AttributeTypes. During the copying/
  passing, the following rules are followed for each array:

    1. If the copy flag for an array is set (on or off), it
       is applied This overrides rule 2.
    2. If CopyAllOn is set, copy the array. If CopyAllOff is
       set, do not copy the array An attribute type and a
       location must be specified. For example:

          maskFields->CopyAttributeOff(vtkMaskFields::
         POINT_DATA, vtkDataSetAttributes::SCALARS);

       causes the scalars on the input point data to not get
       copied to the output.

* obj.CopyAttributeOn (int attributeLocation, int
  attributeType) - Turn on/off the copying of the attribute
  or specified by vtkDataSetAttributes:AttributeTypes.
  During the copying/passing, the following rules are
  followed for each array:

    1. If the copy flag for an array is set (on or off), it
       is applied This overrides rule 2.
    2. If CopyAllOn is set, copy the array. If CopyAllOff is
       set, do not copy the array An attribute type and a
       location must be specified. For example:

          maskFields->CopyAttributeOff(vtkMaskFields::
         POINT_DATA, vtkDataSetAttributes::SCALARS);

       causes the scalars on the input point data to not get
       copied to the output.

* obj.CopyAttributeOff (int attributeLocation, int
  attributeType) - Convenience methods which operate on all
  field data or attribute data. More specific than CopyAllOn
  or CopyAllOff
* obj.CopyFieldsOff () - Convenience methods which operate
  on all field data or attribute data. More specific than
  CopyAllOn or CopyAllOff
* obj.CopyAttributesOff ()
* obj.CopyFieldsOn ()
* obj.CopyAttributesOn () - Helper methods used by other
  language bindings. Allows the caller to specify arguments
  as strings instead of enums.
* obj.CopyAttributeOn (string attributeLoc, string
  attributeType) - Helper methods used by other language
  bindings. Allows the caller to specify arguments as
  strings instead of enums.
* obj.CopyAttributeOff (string attributeLoc, string
  attributeType) - Helper methods used by other language
  bindings. Allows the caller to specify arguments as
  strings instead of enums.
* obj.CopyFieldOn (string fieldLoc, string name) - Helper
  methods used by other language bindings. Allows the caller
  to specify arguments as strings instead of enums.
* obj.CopyFieldOff (string fieldLoc, string name) - Helper
  methods used by other language bindings. Allows the caller
  to specify arguments as strings instead of enums.
* obj.CopyAllOn () - Turn on copying of all data. During the
  copying/passing, the following rules are followed for each
  array:

    1. If the copy flag for an array is set (on or off), it
       is applied This overrides rule 2.
    2. If CopyAllOn is set, copy the array. If CopyAllOff is
       set, do not copy the array

* obj.CopyAllOff () - Turn off copying of all data. During
  the copying/passing, the following rules are followed for
  each array:

    1. If the copy flag for an array is set (on or off), it
       is applied This overrides rule 2.
    2. If CopyAllOn is set, copy the array. If CopyAllOff is
       set, do not copy the array



* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:32 for FreeMat by
  doxygen_ 1.8.1.1

