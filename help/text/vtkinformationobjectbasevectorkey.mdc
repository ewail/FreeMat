
 Usage

vtkInformationObjectBaseVectorKey is used to represent keys
for double vector values in vtkInformation.h. NOTE the
interface in this key differs from that in other similar
keys because of our internal use of smart pointers.
To create an instance of class
vtkInformationObjectBaseVectorKey, simply invoke its
constructor as follows

    obj = vtkInformationObjectBaseVectorKey



 Methods

The class vtkInformationObjectBaseVectorKey has several
methods that can be used. They are listed below. Note that
the documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkInformationObjectBaseVectorKey
class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkInformationObjectBaseVectorKey = obj.NewInstance ()
* vtkInformationObjectBaseVectorKey = obj.SafeDownCast
  (vtkObject o)
* vtkInformationObjectBaseVectorKey = obj.(string name,
  string location, string requiredClass) - The name of the
  static instance and the class in which it is defined
  (location) should be passed to the constructor. Providing
  "requiredClass" name one can insure that only objects of
  type "requiredClass" are stored in vectors associated with
  the instance of this key type created. These should be
  string literals as they are not coppied.
* ~vtkInformationObjectBaseVectorKey = obj.() - The name of
  the static instance and the class in which it is defined
  (location) should be passed to the constructor. Providing
  "requiredClass" name one can insure that only objects of
  type "requiredClass" are stored in vectors associated with
  the instance of this key type created. These should be
  string literals as they are not coppied.
* obj.Clear (vtkInformation info) - Clear the vector.
* obj.Resize (vtkInformation info, int n) - Resize (extend)
  the vector to hold n objects. Any new elements created
  will be null initialized.
* int = obj.Size (vtkInformation info) - Get the vector's
  length.
* int = obj.Length (vtkInformation info) - Put the value on
  the back of the vector, with ref counting.
* obj.Append (vtkInformation info, vtkObjectBase value) -
  Put the value on the back of the vector, with ref
  counting.
* obj.Set (vtkInformation info, vtkObjectBase value, int i)
  - Set element i of the vector to value. Resizes the vector
  if needed.
* vtkObjectBase = obj.Get (vtkInformation info, int idx) -
  Get the vtkObjectBase at a specific location in the
  vector.
* obj.ShallowCopy (vtkInformation from, vtkInformation to) -
  Copy the entry associated with this key from one
  information object to another. If there is no entry in the
  first information object for this key, the value is
  removed from the second.


* FreeMat_Documentation
* Visualization_Toolkit_Common_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

