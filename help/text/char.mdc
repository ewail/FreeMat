
 Usage

The char function can be used to convert an array into a
string. It has several forms. The first form is

     y = char(x)

where x is a numeric array containing character codes.
FreeMat does not currently support Unicode, so the character
codes must be in the range of [0,255]. The output is a
string of the same size as x. A second form is

     y = char(c)

where c is a cell array of strings, creates a matrix string
where each row contains a string from the corresponding cell
array. The third form is

     y = char(s1, s2, s3, ...)

where si are a character arrays. The result is a matrix
string where each row contains a string from the
corresponding argument.


 Example

Here is an example of the first technique being used to
generate a string containing some ASCII characters

  --> char([32:64;65:97])

  ans =
   !"#$%&amp;'()*+,-./0123456789:;<=>?@
  ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`a

In the next example, we form a character array from a set of
strings in a cell array. Note that the character array is
padded with spaces to make the rows all have the same
length.

  --> char({'hello','to','the','world'})

  ans =
  hello
  to
  the
  world

In the last example, we pass the individual strings as
explicit arguments to char

  --> char('hello','to','the','world')

  ans =
  hello
  to
  the
  world


* FreeMat_Documentation
* Type_Conversion_Functions
* Generated on Thu Jul 25 2013 17:18:29 for FreeMat by
  doxygen_ 1.8.1.1

