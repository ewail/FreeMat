
 Usage

A class to create a SQL database schema
.SECTION Thanks Thanks to Philippe Pebay and David Thompson
from Sandia National Laboratories for implementing this
class.
To create an instance of class vtkSQLDatabaseSchema, simply
invoke its constructor as follows

    obj = vtkSQLDatabaseSchema



 Methods

The class vtkSQLDatabaseSchema has several methods that can
be used. They are listed below. Note that the documentation
is translated automatically from the VTK sources, and may
not be completely intelligible. When in doubt, consult the
VTK website. In the methods listed below, obj is an instance
of the vtkSQLDatabaseSchema class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkSQLDatabaseSchema = obj.NewInstance ()
* vtkSQLDatabaseSchema = obj.SafeDownCast (vtkObject o)
* int = obj.AddPreamble (string preName, string preAction,
  string preBackendVTK_SQL_ALLBACKENDS)
* int = obj.AddTable (string tblName) - Add a table to the
  schema
* int = obj.AddColumnToTable (int tblHandle, int colType,
  string colName, int colSize, string colAttribs)
* int = obj.AddColumnToTable (string tblName, int colType,
  string colName, int colSize, string colAttribs)
* int = obj.AddIndexToTable (int tblHandle, int idxType,
  string idxName)
* int = obj.AddIndexToTable (string tblName, int idxType,
  string idxName)
* int = obj.AddColumnToIndex (int tblHandle, int idxHandle,
  int colHandle)
* int = obj.AddColumnToIndex (string tblName, string
  idxName, string colName)
* int = obj.AddTriggerToTable (int tblHandle, int trgType,
  string trgName, string trgAction, string
  trgBackendVTK_SQL_ALLBACKENDS)
* int = obj.AddTriggerToTable (string tblName, int trgType,
  string trgName, string trgAction, string
  trgBackendVTK_SQL_ALLBACKENDS) - Given a preamble name,
  get its handle.
* int = obj.GetPreambleHandleFromName (string preName) -
  Given a preamble name, get its handle.
* string = obj.GetPreambleNameFromHandle (int preHandle) -
  Given a preamble handle, get its name.
* string = obj.GetPreambleActionFromHandle (int preHandle) -
  Given a preamble handle, get its action.
* string = obj.GetPreambleBackendFromHandle (int preHandle)
  - Given a preamble handle, get its backend.
* int = obj.GetTableHandleFromName (string tblName) - Given
  a table name, get its handle.
* string = obj.GetTableNameFromHandle (int tblHandle) -
  Given a table hanlde, get its name.
* int = obj.GetIndexHandleFromName (string tblName, string
  idxName) - Given the names of a table and an index, get
  the handle of the index in this table.
* string = obj.GetIndexNameFromHandle (int tblHandle, int
  idxHandle) - Given the handles of a table and an index,
  get the name of the index.
* int = obj.GetIndexTypeFromHandle (int tblHandle, int
  idxHandle) - Given the handles of a table and an index,
  get the type of the index.
* string = obj.GetIndexColumnNameFromHandle (int tblHandle,
  int idxHandle, int cnmHandle) - Given the handles of a
  table, an index, and a column name, get the column name.
* int = obj.GetColumnHandleFromName (string tblName, string
  colName) - Given the names of a table and a column, get
  the handle of the column in this table.
* string = obj.GetColumnNameFromHandle (int tblHandle, int
  colHandle) - Given the handles of a table and a column,
  get the name of the column.
* int = obj.GetColumnTypeFromHandle (int tblHandle, int
  colHandle) - Given the handles of a table and a column,
  get the type of the column.
* int = obj.GetColumnSizeFromHandle (int tblHandle, int
  colHandle) - Given the handles of a table and a column,
  get the size of the column.
* string = obj.GetColumnAttributesFromHandle (int tblHandle,
  int colHandle) - Given the handles of a table and a
  column, get the attributes of the column.
* int = obj.GetTriggerHandleFromName (string tblName, string
  trgName) - Given the names of a trigger and a table, get
  the handle of the trigger in this table.
* string = obj.GetTriggerNameFromHandle (int tblHandle, int
  trgHandle) - Given the handles of a table and a trigger,
  get the name of the trigger.
* int = obj.GetTriggerTypeFromHandle (int tblHandle, int
  trgHandle) - Given the handles of a table and a trigger,
  get the type of the trigger.
* string = obj.GetTriggerActionFromHandle (int tblHandle,
  int trgHandle) - Given the handles of a table and a
  trigger, get the action of the trigger.
* string = obj.GetTriggerBackendFromHandle (int tblHandle,
  int trgHandle) - Given the handles of a table and a
  trigger, get the backend of the trigger.
* obj.Reset () - Reset the schema to its initial, empty
  state.
* int = obj.GetNumberOfPreambles () - Get the number of
  preambles.
* int = obj.GetNumberOfTables () - Get the number of tables.
* int = obj.GetNumberOfColumnsInTable (int tblHandle) - Get
  the number of columns in a particular table .
* int = obj.GetNumberOfIndicesInTable (int tblHandle) - Get
  the number of indices in a particular table .
* int = obj.GetNumberOfColumnNamesInIndex (int tblHandle,
  int idxHandle) - Get the number of column names associated
  to a particular index in a particular table .
* int = obj.GetNumberOfTriggersInTable (int tblHandle) - Get
  the number of trigger in a particular table .
* obj.SetName (string ) - Set/Get the name of the schema.
* string = obj.GetName () - Set/Get the name of the schema.


* FreeMat_Documentation
* Visualization_Toolkit_IO_Classes
* Generated on Thu Jul 25 2013 17:18:34 for FreeMat by
  doxygen_ 1.8.1.1

