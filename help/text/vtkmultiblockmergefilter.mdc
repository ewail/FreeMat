
 Usage

vtkMultiBlockMergeFilter is an M to 1 filter similar to
vtkMultiBlockDataGroupFilter. However where as that class
creates N groups in the output for N inputs, this creates 1
group in the output with N datasets inside it. In actuality
if the inputs have M blocks, this will produce M blocks,
each of which has N datasets. Inside the merged group, the
i'th data set comes from the i'th data set in the i'th
input.
To create an instance of class vtkMultiBlockMergeFilter,
simply invoke its constructor as follows

    obj = vtkMultiBlockMergeFilter



 Methods

The class vtkMultiBlockMergeFilter has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkMultiBlockMergeFilter class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkMultiBlockMergeFilter = obj.NewInstance ()
* vtkMultiBlockMergeFilter = obj.SafeDownCast (vtkObject o)
* obj.AddInput (vtkDataObject ) - Add an input of this
  algorithm. Note that these methods support old-style
  pipeline connections. When writing new code you should use
  the more general vtkAlgorithm::AddInputConnection(). See
  SetInput() for details.
* obj.AddInput (int , vtkDataObject ) - Add an input of this
  algorithm. Note that these methods support old-style
  pipeline connections. When writing new code you should use
  the more general vtkAlgorithm::AddInputConnection(). See
  SetInput() for details.


* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:32 for FreeMat by
  doxygen_ 1.8.1.1

