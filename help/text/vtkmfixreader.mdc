
 Usage

vtkMFIXReader creates an unstructured grid dataset. It reads
a restart file and a set of sp files. The restart file
contains the mesh information. MFIX meshes are either
cylindrical or rectilinear, but this reader will convert
them to an unstructured grid. The sp files contain transient
data for the cells. Each sp file has one or more variables
stored inside it.
To create an instance of class vtkMFIXReader, simply invoke
its constructor as follows

    obj = vtkMFIXReader



 Methods

The class vtkMFIXReader has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkMFIXReader class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkMFIXReader = obj.NewInstance ()
* vtkMFIXReader = obj.SafeDownCast (vtkObject o)
* obj.SetFileName (string ) - Specify the file name of the
  MFIX Restart data file to read.
* string = obj.GetFileName () - Specify the file name of the
  MFIX Restart data file to read.
* int = obj.GetNumberOfCells () - Get the total number of
  cells. The number of cells is only valid after a
  successful read of the data file is performed.
* int = obj.GetNumberOfPoints () - Get the total number of
  nodes. The number of nodes is only valid after a
  successful read of the data file is performed.
* int = obj.GetNumberOfCellFields () - Get the number of
  data components at the nodes and cells.
* obj.SetTimeStep (int ) - Which TimeStep to read.
* int = obj.GetTimeStep () - Which TimeStep to read.
* int = obj.GetNumberOfTimeSteps () - Returns the number of
  timesteps.
* int = obj. GetTimeStepRange () - Which TimeStepRange to
  read
* obj.SetTimeStepRange (int , int ) - Which TimeStepRange to
  read
* obj.SetTimeStepRange (int a[2]) - Which TimeStepRange to
  read
* int = obj.GetNumberOfCellArrays (void )
* string = obj.GetCellArrayName (int index) - Get the name
  of the cell array with the given index in the input.
* int = obj.GetCellArrayStatus (string name) - Get/Set
  whether the cell array with the given name is to be read.
* obj.SetCellArrayStatus (string name, int status) - Get/Set
  whether the cell array with the given name is to be read.
* obj.DisableAllCellArrays () - Turn on/off all cell arrays.
* obj.EnableAllCellArrays () - Turn on/off all cell arrays.
* obj.GetCellDataRange (int cellComp, int index, float min,
  float max) - Get the range of cell data.


* FreeMat_Documentation
* Visualization_Toolkit_IO_Classes
* Generated on Thu Jul 25 2013 17:18:34 for FreeMat by
  doxygen_ 1.8.1.1

