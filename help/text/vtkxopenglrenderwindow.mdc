
 Usage

vtkXOpenGLRenderWindow is a concrete implementation of the
abstract class vtkRenderWindow. vtkOpenGLRenderer interfaces
to the OpenGL graphics library. Application programmers
should normally use vtkRenderWindow instead of the OpenGL
specific version.
To create an instance of class vtkXOpenGLRenderWindow,
simply invoke its constructor as follows

    obj = vtkXOpenGLRenderWindow



 Methods

The class vtkXOpenGLRenderWindow has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkXOpenGLRenderWindow class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkXOpenGLRenderWindow = obj.NewInstance ()
* vtkXOpenGLRenderWindow = obj.SafeDownCast (vtkObject o)
* obj.Start (void ) - Begin the rendering process.
* obj.Frame (void ) - End the rendering process and display
  the image.
* obj.WindowInitialize (void ) - Initialize the window for
  rendering.
* obj.Initialize (void ) - Initialize the rendering window.
  This will setup all system-specific resources. This method
  and Finalize() must be symmetric and it should be possible
  to call them multiple times, even changing WindowId in-
  between. This is what WindowRemap does.
* obj.Finalize (void ) - "Deinitialize" the rendering
  window. This will shutdown all system-specific resources.
  After having called this, it should be possible to destroy
  a window that was used for a SetWindowId() call without
  any ill effects.
* obj.SetFullScreen (int ) - Change the window to fill the
  entire screen.
* obj.WindowRemap (void ) - Resize the window.
* obj.PrefFullScreen (void ) - Set the preferred window size
  to full screen.
* obj.SetSize (int , int ) - Specify the size of the
  rendering window in pixels.
* obj.SetSize (int a[2]) - Specify the size of the rendering
  window in pixels.
* int = obj.GetDesiredDepth () - Get the X properties of an
  ideal rendering window.
* obj.SetStereoCapableWindow (int capable) - Prescribe that
  the window be created in a stereo-capable mode. This
  method must be called before the window is realized. This
  method overrides the superclass method since this class
  can actually check whether the window has been realized
  yet.
* obj.MakeCurrent () - Make this window the current OpenGL
  context.
* bool = obj.IsCurrent () - Tells if this window is the
  current OpenGL context for the calling thread.
* obj.SetForceMakeCurrent () - If called, allow MakeCurrent
  () to skip cache-check when called. MakeCurrent() reverts
  to original behavior of cache-checking on the next render.
* string = obj.ReportCapabilities () - Get report of
  capabilities for the render window
* int = obj.SupportsOpenGL () - Does this render window
  support OpenGL? 0-false, 1-true
* int = obj.IsDirect () - Is this render window using
  hardware acceleration? 0-false, 1-true
* obj.SetWindowName (string )
* obj.SetPosition (int , int ) - Move the window to a new
  position on the display.
* obj.SetPosition (int a[2]) - Move the window to a new
  position on the display.
* obj.HideCursor () - Hide or Show the mouse cursor, it is
  nice to be able to hide the default cursor if you want VTK
  to display a 3D cursor instead.
* obj.ShowCursor () - Hide or Show the mouse cursor, it is
  nice to be able to hide the default cursor if you want VTK
  to display a 3D cursor instead.
* obj.SetCurrentCursor (int ) - Change the shape of the
  cursor
* int = obj.GetEventPending () - Check to see if a mouse
  button has been pressed. All other events are ignored by
  this method. This is a useful check to abort a long
  render.
* obj.SetWindowInfo (string info) - Set this RenderWindow's
  X window id to a pre-existing window.
* obj.SetNextWindowInfo (string info) - Set the window info
  that will be used after WindowRemap()
* obj.SetParentInfo (string info) - Sets the X window id of
  the window that WILL BE created.
* obj.Render () - This computes the size of the render
  window before calling the supper classes render
* obj.SetOffScreenRendering (int i) - Render without
  displaying the window.


* FreeMat_Documentation
* Visualization_Toolkit_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

