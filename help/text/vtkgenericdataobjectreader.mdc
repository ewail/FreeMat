
 Usage

vtkGenericDataObjectReader is a class that provides instance
variables and methods to read any type of data object in
Visualization Toolkit (vtk) format. The output type of this
class will vary depending upon the type of data file.
Convenience methods are provided to return the data as a
particular type. (See text for format description details).
The superclass of this class, vtkDataReader, provides many
methods for controlling the reading of the data file, see
vtkDataReader for more information.
To create an instance of class vtkGenericDataObjectReader,
simply invoke its constructor as follows

    obj = vtkGenericDataObjectReader



 Methods

The class vtkGenericDataObjectReader has several methods
that can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkGenericDataObjectReader class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkGenericDataObjectReader = obj.NewInstance ()
* vtkGenericDataObjectReader = obj.SafeDownCast (vtkObject
  o)
* vtkDataObject = obj.GetOutput () - Get the output of this
  filter
* vtkDataObject = obj.GetOutput (int idx) - Get the output
  of this filter
* vtkGraph = obj.GetGraphOutput () - Get the output as
  various concrete types. This method is typically used when
  you know exactly what type of data is being read.
  Otherwise, use the general GetOutput() method. If the
  wrong type is used NULL is returned. (You must also set
  the filename of the object prior to getting the output.)
* vtkPolyData = obj.GetPolyDataOutput () - Get the output as
  various concrete types. This method is typically used when
  you know exactly what type of data is being read.
  Otherwise, use the general GetOutput() method. If the
  wrong type is used NULL is returned. (You must also set
  the filename of the object prior to getting the output.)
* vtkRectilinearGrid = obj.GetRectilinearGridOutput () - Get
  the output as various concrete types. This method is
  typically used when you know exactly what type of data is
  being read. Otherwise, use the general GetOutput() method.
  If the wrong type is used NULL is returned. (You must also
  set the filename of the object prior to getting the
  output.)
* vtkStructuredGrid = obj.GetStructuredGridOutput () - Get
  the output as various concrete types. This method is
  typically used when you know exactly what type of data is
  being read. Otherwise, use the general GetOutput() method.
  If the wrong type is used NULL is returned. (You must also
  set the filename of the object prior to getting the
  output.)
* vtkStructuredPoints = obj.GetStructuredPointsOutput () -
  Get the output as various concrete types. This method is
  typically used when you know exactly what type of data is
  being read. Otherwise, use the general GetOutput() method.
  If the wrong type is used NULL is returned. (You must also
  set the filename of the object prior to getting the
  output.)
* vtkTable = obj.GetTableOutput () - Get the output as
  various concrete types. This method is typically used when
  you know exactly what type of data is being read.
  Otherwise, use the general GetOutput() method. If the
  wrong type is used NULL is returned. (You must also set
  the filename of the object prior to getting the output.)
* vtkTree = obj.GetTreeOutput () - Get the output as various
  concrete types. This method is typically used when you
  know exactly what type of data is being read. Otherwise,
  use the general GetOutput() method. If the wrong type is
  used NULL is returned. (You must also set the filename of
  the object prior to getting the output.)
* vtkUnstructuredGrid = obj.GetUnstructuredGridOutput () -
  Get the output as various concrete types. This method is
  typically used when you know exactly what type of data is
  being read. Otherwise, use the general GetOutput() method.
  If the wrong type is used NULL is returned. (You must also
  set the filename of the object prior to getting the
  output.)
* int = obj.ReadOutputType () - This method can be used to
  find out the type of output expected without needing to
  read the whole file.


* FreeMat_Documentation
* Visualization_Toolkit_IO_Classes
* Generated on Thu Jul 25 2013 17:18:34 for FreeMat by
  doxygen_ 1.8.1.1

