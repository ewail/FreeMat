
 Usage

vtkUniformGrid is a subclass of vtkImageData. In addition to
all the image data functionality, it supports blanking.
To create an instance of class vtkUniformGrid, simply invoke
its constructor as follows

    obj = vtkUniformGrid



 Methods

The class vtkUniformGrid has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkUniformGrid class.

* string = obj.GetClassName () - Construct an empty uniform
  grid.
* int = obj.IsA (string name) - Construct an empty uniform
  grid.
* vtkUniformGrid = obj.NewInstance () - Construct an empty
  uniform grid.
* vtkUniformGrid = obj.SafeDownCast (vtkObject o) -
  Construct an empty uniform grid.
* obj.CopyStructure (vtkDataSet ds) - Copy the geometric and
  topological structure of an input image data object.
* int = obj.GetDataObjectType () - Return what type of
  dataset this is.
* vtkCell = obj.GetCell (vtkIdType cellId) - Standard
  vtkDataSet API methods. See vtkDataSet for more
  information.
* obj.GetCell (vtkIdType cellId, vtkGenericCell cell) -
  Standard vtkDataSet API methods. See vtkDataSet for more
  information.
* int = obj.GetCellType (vtkIdType cellId) - Standard
  vtkDataSet API methods. See vtkDataSet for more
  information.
* obj.GetCellPoints (vtkIdType cellId, vtkIdList ptIds) -
  Standard vtkDataSet API methods. See vtkDataSet for more
  information.
* obj.GetPointCells (vtkIdType ptId, vtkIdList cellIds) -
  Standard vtkDataSet API methods. See vtkDataSet for more
  information.
* obj.Initialize () - Standard vtkDataSet API methods. See
  vtkDataSet for more information.
* int = obj.GetMaxCellSize () - Standard vtkDataSet API
  methods. See vtkDataSet for more information.
* obj.ShallowCopy (vtkDataObject src) - Shallow and Deep
  copy.
* obj.DeepCopy (vtkDataObject src) - Shallow and Deep copy.
* obj.BlankPoint (vtkIdType ptId) - Methods for supporting
  blanking of cells. Blanking turns on or off points in the
  structured grid, and hence the cells connected to them.
  These methods should be called only after the dimensions
  of the grid are set.
* obj.UnBlankPoint (vtkIdType ptId) - Methods for supporting
  blanking of cells. Blanking turns on or off points in the
  structured grid, and hence the cells connected to them.
  These methods should be called only after the dimensions
  of the grid are set.
* obj.BlankCell (vtkIdType ptId) - Methods for supporting
  blanking of cells. Blanking turns on or off cells in the
  structured grid. These methods should be called only after
  the dimensions of the grid are set.
* obj.UnBlankCell (vtkIdType ptId) - Methods for supporting
  blanking of cells. Blanking turns on or off cells in the
  structured grid. These methods should be called only after
  the dimensions of the grid are set.
* vtkUnsignedCharArray = obj.GetPointVisibilityArray () -
  Get the array that defines the blanking (visibility) of
  each point.
* obj.SetPointVisibilityArray (vtkUnsignedCharArray
  pointVisibility) - Set an array that defines the
  (blanking) visibility of the points in the grid. Make sure
  that length of the visibility array matches the number of
  points in the grid.
* vtkUnsignedCharArray = obj.GetCellVisibilityArray () - Get
  the array that defines the blanking (visibility) of each
  cell.
* obj.SetCellVisibilityArray (vtkUnsignedCharArray
  pointVisibility) - Set an array that defines the
  (blanking) visibility of the cells in the grid. Make sure
  that length of the visibility array matches the number of
  points in the grid.
* char = obj.IsPointVisible (vtkIdType ptId) - Return non-
  zero value if specified point is visible. These methods
  should be called only after the dimensions of the grid are
  set.
* char = obj.IsCellVisible (vtkIdType cellId) - Return non-
  zero value if specified cell is visible. These methods
  should be called only after the dimensions of the grid are
  set.
* char = obj.GetPointBlanking () - Returns 1 if there is any
  visibility constraint on the points, 0 otherwise.
* char = obj.GetCellBlanking () - Returns 1 if there is any
  visibility constraint on the cells, 0 otherwise.
* vtkImageData = obj.NewImageDataCopy ()


* FreeMat_Documentation
* Visualization_Toolkit_Filtering_Classes
* Generated on Thu Jul 25 2013 17:18:31 for FreeMat by
  doxygen_ 1.8.1.1

