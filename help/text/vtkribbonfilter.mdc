
 Usage

vtkRibbonFilter is a filter to create oriented ribbons from
lines defined in polygonal dataset. The orientation of the
ribbon is along the line segments and perpendicular to
"projected" line normals. Projected line normals are the
original line normals projected to be perpendicular to the
local line segment. An offset angle can be specified to
rotate the ribbon with respect to the normal.
To create an instance of class vtkRibbonFilter, simply
invoke its constructor as follows

    obj = vtkRibbonFilter



 Methods

The class vtkRibbonFilter has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkRibbonFilter class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkRibbonFilter = obj.NewInstance ()
* vtkRibbonFilter = obj.SafeDownCast (vtkObject o)
* obj.SetWidth (double ) - Set the "half" width of the
  ribbon. If the width is allowed to vary, this is the
  minimum width. The default is 0.5
* double = obj.GetWidthMinValue () - Set the "half" width of
  the ribbon. If the width is allowed to vary, this is the
  minimum width. The default is 0.5
* double = obj.GetWidthMaxValue () - Set the "half" width of
  the ribbon. If the width is allowed to vary, this is the
  minimum width. The default is 0.5
* double = obj.GetWidth () - Set the "half" width of the
  ribbon. If the width is allowed to vary, this is the
  minimum width. The default is 0.5
* obj.SetAngle (double ) - Set the offset angle of the
  ribbon from the line normal. (The angle is expressed in
  degrees.) The default is 0.0
* double = obj.GetAngleMinValue () - Set the offset angle of
  the ribbon from the line normal. (The angle is expressed
  in degrees.) The default is 0.0
* double = obj.GetAngleMaxValue () - Set the offset angle of
  the ribbon from the line normal. (The angle is expressed
  in degrees.) The default is 0.0
* double = obj.GetAngle () - Set the offset angle of the
  ribbon from the line normal. (The angle is expressed in
  degrees.) The default is 0.0
* obj.SetVaryWidth (int ) - Turn on/off the variation of
  ribbon width with scalar value. The default is Off
* int = obj.GetVaryWidth () - Turn on/off the variation of
  ribbon width with scalar value. The default is Off
* obj.VaryWidthOn () - Turn on/off the variation of ribbon
  width with scalar value. The default is Off
* obj.VaryWidthOff () - Turn on/off the variation of ribbon
  width with scalar value. The default is Off
* obj.SetWidthFactor (double ) - Set the maximum ribbon
  width in terms of a multiple of the minimum width. The
  default is 2.0
* double = obj.GetWidthFactor () - Set the maximum ribbon
  width in terms of a multiple of the minimum width. The
  default is 2.0
* obj.SetDefaultNormal (double , double , double ) - Set the
  default normal to use if no normals are supplied, and
  DefaultNormalOn is set. The default is (0,0,1)
* obj.SetDefaultNormal (double a[3]) - Set the default
  normal to use if no normals are supplied, and
  DefaultNormalOn is set. The default is (0,0,1)
* double = obj. GetDefaultNormal () - Set the default normal
  to use if no normals are supplied, and DefaultNormalOn is
  set. The default is (0,0,1)
* obj.SetUseDefaultNormal (int ) - Set a boolean to control
  whether to use default normals. The default is Off
* int = obj.GetUseDefaultNormal () - Set a boolean to
  control whether to use default normals. The default is Off
* obj.UseDefaultNormalOn () - Set a boolean to control
  whether to use default normals. The default is Off
* obj.UseDefaultNormalOff () - Set a boolean to control
  whether to use default normals. The default is Off
* obj.SetGenerateTCoords (int ) - Control whether and how
  texture coordinates are produced. This is useful for
  striping the ribbon with time textures, etc.
* int = obj.GetGenerateTCoordsMinValue () - Control whether
  and how texture coordinates are produced. This is useful
  for striping the ribbon with time textures, etc.
* int = obj.GetGenerateTCoordsMaxValue () - Control whether
  and how texture coordinates are produced. This is useful
  for striping the ribbon with time textures, etc.
* int = obj.GetGenerateTCoords () - Control whether and how
  texture coordinates are produced. This is useful for
  striping the ribbon with time textures, etc.
* obj.SetGenerateTCoordsToOff () - Control whether and how
  texture coordinates are produced. This is useful for
  striping the ribbon with time textures, etc.
* obj.SetGenerateTCoordsToNormalizedLength () - Control
  whether and how texture coordinates are produced. This is
  useful for striping the ribbon with time textures, etc.
* obj.SetGenerateTCoordsToUseLength () - Control whether and
  how texture coordinates are produced. This is useful for
  striping the ribbon with time textures, etc.
* obj.SetGenerateTCoordsToUseScalars () - Control whether
  and how texture coordinates are produced. This is useful
  for striping the ribbon with time textures, etc.
* string = obj.GetGenerateTCoordsAsString () - Control
  whether and how texture coordinates are produced. This is
  useful for striping the ribbon with time textures, etc.
* obj.SetTextureLength (double ) - Control the conversion of
  units during the texture coordinates calculation. The
  TextureLength indicates what length (whether calculated
  from scalars or length) is mapped to the [0,1) texture
  space. The default is 1.0
* double = obj.GetTextureLengthMinValue () - Control the
  conversion of units during the texture coordinates
  calculation. The TextureLength indicates what length
  (whether calculated from scalars or length) is mapped to
  the [0,1) texture space. The default is 1.0
* double = obj.GetTextureLengthMaxValue () - Control the
  conversion of units during the texture coordinates
  calculation. The TextureLength indicates what length
  (whether calculated from scalars or length) is mapped to
  the [0,1) texture space. The default is 1.0
* double = obj.GetTextureLength () - Control the conversion
  of units during the texture coordinates calculation. The
  TextureLength indicates what length (whether calculated
  from scalars or length) is mapped to the [0,1) texture
  space. The default is 1.0


* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:32 for FreeMat by
  doxygen_ 1.8.1.1

