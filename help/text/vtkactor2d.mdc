
 Usage

vtkActor2D is similar to vtkActor, but it is made to be used
with two dimensional images and annotation. vtkActor2D has a
position but does not use a transformation matrix like
vtkActor (see the superclass vtkProp for information on
positioning vtkActor2D). vtkActor2D has a reference to a
vtkMapper2D object which does the rendering.
To create an instance of class vtkActor2D, simply invoke its
constructor as follows

    obj = vtkActor2D



 Methods

The class vtkActor2D has several methods that can be used.
They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkActor2D class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkActor2D = obj.NewInstance ()
* vtkActor2D = obj.SafeDownCast (vtkObject o)
* int = obj.RenderOverlay (vtkViewport viewport) - Support
  the standard render methods.
* int = obj.RenderOpaqueGeometry (vtkViewport viewport) -
  Support the standard render methods.
* int = obj.RenderTranslucentPolygonalGeometry (vtkViewport
  viewport) - Support the standard render methods.
* int = obj.HasTranslucentPolygonalGeometry () - Does this
  prop have some translucent polygonal geometry?
* obj.SetMapper (vtkMapper2D mapper) - Set/Get the
  vtkMapper2D which defines the data to be drawn.
* vtkMapper2D = obj.GetMapper () - Set/Get the vtkMapper2D
  which defines the data to be drawn.
* obj.SetLayerNumber (int ) - Set/Get the layer number in
  the overlay planes into which to render.
* int = obj.GetLayerNumber () - Set/Get the layer number in
  the overlay planes into which to render.
* vtkProperty2D = obj.GetProperty () - Returns this actor's
  vtkProperty2D. Creates a property if one doesn't already
  exist.
* obj.SetProperty (vtkProperty2D ) - Set this vtkProp's
  vtkProperty2D.
* vtkCoordinate = obj.GetPositionCoordinate () - Get the
  PositionCoordinate instance of vtkCoordinate. This is used
  for for complicated or relative positioning. The position
  variable controls the lower left corner of the Actor2D
* obj.SetPosition (double, double) - Get the
  PositionCoordinate instance of vtkCoordinate. This is used
  for for complicated or relative positioning. The position
  variable controls the lower left corner of the Actor2D
* obj.SetPosition (double a[2]) - Get the PositionCoordinate
  instance of vtkCoordinate. This is used for for
  complicated or relative positioning. The position variable
  controls the lower left corner of the Actor2D
* double = obj.GetPosition () - Get the PositionCoordinate
  instance of vtkCoordinate. This is used for for
  complicated or relative positioning. The position variable
  controls the lower left corner of the Actor2D
* obj.SetDisplayPosition (int , int ) - Set the Prop2D's
  position in display coordinates.
* vtkCoordinate = obj.GetPosition2Coordinate () - Access the
  Position2 instance variable. This variable controls the
  upper right corner of the Actor2D. It is by default
  relative to Position and in normalized viewport
  coordinates. Some 2D actor subclasses ignore the position2
  variable
* obj.SetPosition2 (double, double) - Access the Position2
  instance variable. This variable controls the upper right
  corner of the Actor2D. It is by default relative to
  Position and in normalized viewport coordinates. Some 2D
  actor subclasses ignore the position2 variable
* obj.SetPosition2 (double a[2]) - Access the Position2
  instance variable. This variable controls the upper right
  corner of the Actor2D. It is by default relative to
  Position and in normalized viewport coordinates. Some 2D
  actor subclasses ignore the position2 variable
* double = obj.GetPosition2 () - Access the Position2
  instance variable. This variable controls the upper right
  corner of the Actor2D. It is by default relative to
  Position and in normalized viewport coordinates. Some 2D
  actor subclasses ignore the position2 variable
* obj.SetWidth (double w) - Set/Get the height and width of
  the Actor2D. The value is expressed as a fraction of the
  viewport. This really is just another way of setting the
  Position2 instance variable.
* double = obj.GetWidth () - Set/Get the height and width of
  the Actor2D. The value is expressed as a fraction of the
  viewport. This really is just another way of setting the
  Position2 instance variable.
* obj.SetHeight (double h) - Set/Get the height and width of
  the Actor2D. The value is expressed as a fraction of the
  viewport. This really is just another way of setting the
  Position2 instance variable.
* double = obj.GetHeight () - Set/Get the height and width
  of the Actor2D. The value is expressed as a fraction of
  the viewport. This really is just another way of setting
  the Position2 instance variable.
* long = obj.GetMTime () - Return this objects MTime.
* obj.GetActors2D (vtkPropCollection pc) - For some
  exporters and other other operations we must be able to
  collect all the actors or volumes. These methods are used
  in that process.
* obj.ShallowCopy (vtkProp prop) - Shallow copy of this
  vtkActor2D. Overloads the virtual vtkProp method.
* obj.ReleaseGraphicsResources (vtkWindow ) - Release any
  graphics resources that are being consumed by this actor.
  The parameter window could be used to determine which
  graphic resources to release.
* vtkCoordinate = obj.GetActualPositionCoordinate (void ) -
  Return the actual vtkCoordinate reference that the mapper
  should use to position the actor. This is used internally
  by the mappers and should be overridden in specialized
  subclasses and otherwise ignored.
* vtkCoordinate = obj.GetActualPosition2Coordinate (void )


* FreeMat_Documentation
* Visualization_Toolkit_Filtering_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

