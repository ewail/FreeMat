
 Usage

vtkGenericCell is a class that provides access to concrete
types of cells. It's main purpose is to allow thread-safe
access to cells, supporting the vtkDataSet::GetCell
(vtkGenericCell *) method. vtkGenericCell acts like any type
of cell, it just dereferences an internal representation.
The SetCellType() methods use #define constants; these are
defined in the file vtkCellType.h.
To create an instance of class vtkGenericCell, simply invoke
its constructor as follows

    obj = vtkGenericCell



 Methods

The class vtkGenericCell has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkGenericCell class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkGenericCell = obj.NewInstance ()
* vtkGenericCell = obj.SafeDownCast (vtkObject o)
* obj.ShallowCopy (vtkCell c) - See the vtkCell API for
  descriptions of these methods.
* obj.DeepCopy (vtkCell c) - See the vtkCell API for
  descriptions of these methods.
* int = obj.GetCellType () - See the vtkCell API for
  descriptions of these methods.
* int = obj.GetCellDimension () - See the vtkCell API for
  descriptions of these methods.
* int = obj.IsLinear () - See the vtkCell API for
  descriptions of these methods.
* int = obj.RequiresInitialization () - See the vtkCell API
  for descriptions of these methods.
* obj.Initialize () - See the vtkCell API for descriptions
  of these methods.
* int = obj.GetNumberOfEdges () - See the vtkCell API for
  descriptions of these methods.
* int = obj.GetNumberOfFaces () - See the vtkCell API for
  descriptions of these methods.
* vtkCell = obj.GetEdge (int edgeId) - See the vtkCell API
  for descriptions of these methods.
* vtkCell = obj.GetFace (int faceId) - See the vtkCell API
  for descriptions of these methods.
* int = obj.CellBoundary (int subId, double pcoords[3],
  vtkIdList pts) - See the vtkCell API for descriptions of
  these methods.
* obj.Contour (double value, vtkDataArray cellScalars,
  vtkIncrementalPointLocator locator, vtkCellArray verts,
  vtkCellArray lines, vtkCellArray polys, vtkPointData inPd,
  vtkPointData outPd, vtkCellData inCd, vtkIdType cellId,
  vtkCellData outCd) - See the vtkCell API for descriptions
  of these methods.
* obj.Clip (double value, vtkDataArray cellScalars,
  vtkIncrementalPointLocator locator, vtkCellArray
  connectivity, vtkPointData inPd, vtkPointData outPd,
  vtkCellData inCd, vtkIdType cellId, vtkCellData outCd, int
  insideOut) - See the vtkCell API for descriptions of these
  methods.
* int = obj.Triangulate (int index, vtkIdList ptIds,
  vtkPoints pts) - See the vtkCell API for descriptions of
  these methods.
* obj.Derivatives (int subId, double pcoords[3], double
  values, int dim, double derivs) - See the vtkCell API for
  descriptions of these methods.
* int = obj.GetParametricCenter (double pcoords[3]) - See
  the vtkCell API for descriptions of these methods.
* int = obj.IsPrimaryCell () - See the vtkCell API for
  descriptions of these methods.
* obj.InterpolateFunctions (double pcoords[3], double
  weights) - Compute the interpolation functions/derivatives
  (aka shape functions/derivatives)
* obj.InterpolateDerivs (double pcoords[3], double derivs) -
  Compute the interpolation functions/derivatives (aka shape
  functions/derivatives)
* obj.SetCellType (int cellType) - This method is used to
  support the vtkDataSet::GetCell(vtkGenericCell *) method.
  It allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToEmptyCell () - This method is used to
  support the vtkDataSet::GetCell(vtkGenericCell *) method.
  It allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToVertex () - This method is used to
  support the vtkDataSet::GetCell(vtkGenericCell *) method.
  It allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToPolyVertex () - This method is used to
  support the vtkDataSet::GetCell(vtkGenericCell *) method.
  It allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToLine () - This method is used to support
  the vtkDataSet::GetCell(vtkGenericCell *) method. It
  allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToPolyLine () - This method is used to
  support the vtkDataSet::GetCell(vtkGenericCell *) method.
  It allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToTriangle () - This method is used to
  support the vtkDataSet::GetCell(vtkGenericCell *) method.
  It allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToTriangleStrip () - This method is used to
  support the vtkDataSet::GetCell(vtkGenericCell *) method.
  It allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToPolygon () - This method is used to
  support the vtkDataSet::GetCell(vtkGenericCell *) method.
  It allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToPixel () - This method is used to support
  the vtkDataSet::GetCell(vtkGenericCell *) method. It
  allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToQuad () - This method is used to support
  the vtkDataSet::GetCell(vtkGenericCell *) method. It
  allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToTetra () - This method is used to support
  the vtkDataSet::GetCell(vtkGenericCell *) method. It
  allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToVoxel () - This method is used to support
  the vtkDataSet::GetCell(vtkGenericCell *) method. It
  allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToHexahedron () - This method is used to
  support the vtkDataSet::GetCell(vtkGenericCell *) method.
  It allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToWedge () - This method is used to support
  the vtkDataSet::GetCell(vtkGenericCell *) method. It
  allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToPyramid () - This method is used to
  support the vtkDataSet::GetCell(vtkGenericCell *) method.
  It allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToPentagonalPrism () - This method is used
  to support the vtkDataSet::GetCell(vtkGenericCell *)
  method. It allows vtkGenericCell to act like any cell type
  by dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToHexagonalPrism () - This method is used
  to support the vtkDataSet::GetCell(vtkGenericCell *)
  method. It allows vtkGenericCell to act like any cell type
  by dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToConvexPointSet () - This method is used
  to support the vtkDataSet::GetCell(vtkGenericCell *)
  method. It allows vtkGenericCell to act like any cell type
  by dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToQuadraticEdge () - This method is used to
  support the vtkDataSet::GetCell(vtkGenericCell *) method.
  It allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToCubicLine () - This method is used to
  support the vtkDataSet::GetCell(vtkGenericCell *) method.
  It allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToQuadraticTriangle () - This method is
  used to support the vtkDataSet::GetCell(vtkGenericCell *)
  method. It allows vtkGenericCell to act like any cell type
  by dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToBiQuadraticTriangle () - This method is
  used to support the vtkDataSet::GetCell(vtkGenericCell *)
  method. It allows vtkGenericCell to act like any cell type
  by dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToQuadraticQuad () - This method is used to
  support the vtkDataSet::GetCell(vtkGenericCell *) method.
  It allows vtkGenericCell to act like any cell type by
  dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToQuadraticTetra () - This method is used
  to support the vtkDataSet::GetCell(vtkGenericCell *)
  method. It allows vtkGenericCell to act like any cell type
  by dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToQuadraticHexahedron () - This method is
  used to support the vtkDataSet::GetCell(vtkGenericCell *)
  method. It allows vtkGenericCell to act like any cell type
  by dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToQuadraticWedge () - This method is used
  to support the vtkDataSet::GetCell(vtkGenericCell *)
  method. It allows vtkGenericCell to act like any cell type
  by dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToQuadraticPyramid () - This method is used
  to support the vtkDataSet::GetCell(vtkGenericCell *)
  method. It allows vtkGenericCell to act like any cell type
  by dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToQuadraticLinearQuad () - This method is
  used to support the vtkDataSet::GetCell(vtkGenericCell *)
  method. It allows vtkGenericCell to act like any cell type
  by dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToBiQuadraticQuad () - This method is used
  to support the vtkDataSet::GetCell(vtkGenericCell *)
  method. It allows vtkGenericCell to act like any cell type
  by dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToQuadraticLinearWedge () - This method is
  used to support the vtkDataSet::GetCell(vtkGenericCell *)
  method. It allows vtkGenericCell to act like any cell type
  by dereferencing an internal instance of a concrete cell
  type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToBiQuadraticQuadraticWedge () - This
  method is used to support the vtkDataSet::GetCell
  (vtkGenericCell *) method. It allows vtkGenericCell to act
  like any cell type by dereferencing an internal instance
  of a concrete cell type. When you set the cell type, you
  are resetting a pointer to an internal cell which is then
  used for computation.
* obj.SetCellTypeToTriQuadraticHexahedron () - This method
  is used to support the vtkDataSet::GetCell(vtkGenericCell
  *) method. It allows vtkGenericCell to act like any cell
  type by dereferencing an internal instance of a concrete
  cell type. When you set the cell type, you are resetting a
  pointer to an internal cell which is then used for
  computation.
* obj.SetCellTypeToBiQuadraticQuadraticHexahedron () -
  Instantiate a new vtkCell based on it's cell type value


* FreeMat_Documentation
* Visualization_Toolkit_Filtering_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

