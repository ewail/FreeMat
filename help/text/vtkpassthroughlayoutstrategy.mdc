
 Usage

Yes, this incredible strategy does absoluted nothing to the
data so in affect passes through the graph untouched. This
strategy is useful in the cases where the graph is already
laid out.
To create an instance of class vtkPassThroughLayoutStrategy,
simply invoke its constructor as follows

    obj = vtkPassThroughLayoutStrategy



 Methods

The class vtkPassThroughLayoutStrategy has several methods
that can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkPassThroughLayoutStrategy
class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkPassThroughLayoutStrategy = obj.NewInstance ()
* vtkPassThroughLayoutStrategy = obj.SafeDownCast (vtkObject
  o)
* obj.Initialize () - This strategy sets up some data
  structures for faster processing of each Layout() call
* obj.Layout () - This is the layout method where the graph
  that was set in SetGraph() is laid out. The method can
  either entirely layout the graph or iteratively lay out
  the graph. If you have an iterative layout please
  implement the IsLayoutComplete() method.
* int = obj.IsLayoutComplete ()


* FreeMat_Documentation
* Visualization_Toolkit_Infovis_Classes
* Generated on Thu Jul 25 2013 17:18:33 for FreeMat by
  doxygen_ 1.8.1.1

