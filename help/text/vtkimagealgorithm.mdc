
 Usage

vtkImageAlgorithm is a filter superclass that hides much of
the pipeline complexity. It handles breaking the pipeline
execution into smaller extents so that the vtkImageData
limits are observed. It also provides support for
multithreading. If you don't need any of this functionality,
consider using vtkSimpleImageToImageFilter instead. .SECTION
See also vtkSimpleImageToImageFilter
To create an instance of class vtkImageAlgorithm, simply
invoke its constructor as follows

    obj = vtkImageAlgorithm



 Methods

The class vtkImageAlgorithm has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkImageAlgorithm class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkImageAlgorithm = obj.NewInstance ()
* vtkImageAlgorithm = obj.SafeDownCast (vtkObject o)
* vtkImageData = obj.GetOutput () - Get the output data
  object for a port on this algorithm.
* vtkImageData = obj.GetOutput (int ) - Get the output data
  object for a port on this algorithm.
* obj.SetOutput (vtkDataObject d) - Get the output data
  object for a port on this algorithm.
* obj.SetInput (vtkDataObject ) - Set an input of this
  algorithm. You should not override these methods because
  they are not the only way to connect a pipeline. Note that
  these methods support old-style pipeline connections. When
  writing new code you should use the more general
  vtkAlgorithm::SetInputConnection(). These methods
  transform the input index to the input port index, not an
  index of a connection within a single port.
* obj.SetInput (int , vtkDataObject ) - Set an input of this
  algorithm. You should not override these methods because
  they are not the only way to connect a pipeline. Note that
  these methods support old-style pipeline connections. When
  writing new code you should use the more general
  vtkAlgorithm::SetInputConnection(). These methods
  transform the input index to the input port index, not an
  index of a connection within a single port.
* vtkDataObject = obj.GetInput (int port)
* vtkDataObject = obj.GetInput ()
* vtkImageData = obj.GetImageDataInput (int port)
* obj.AddInput (vtkDataObject ) - Add an input of this
  algorithm. Note that these methods support old-style
  pipeline connections. When writing new code you should use
  the more general vtkAlgorithm::AddInputConnection(). See
  SetInput() for details.
* obj.AddInput (int , vtkDataObject ) - Add an input of this
  algorithm. Note that these methods support old-style
  pipeline connections. When writing new code you should use
  the more general vtkAlgorithm::AddInputConnection(). See
  SetInput() for details.


* FreeMat_Documentation
* Visualization_Toolkit_Filtering_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

