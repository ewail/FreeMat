
 Usage

To create an instance of class
vtkRenderedTreeAreaRepresentation, simply invoke its
constructor as follows

    obj = vtkRenderedTreeAreaRepresentation



 Methods

The class vtkRenderedTreeAreaRepresentation has several
methods that can be used. They are listed below. Note that
the documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkRenderedTreeAreaRepresentation
class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkRenderedTreeAreaRepresentation = obj.NewInstance ()
* vtkRenderedTreeAreaRepresentation = obj.SafeDownCast
  (vtkObject o)
* obj.SetLabelRenderMode (int mode) - Set the label render
  mode. QT - Use vtkQtTreeRingLabeler with fitted labeling
  and unicode support. Requires VTK_USE_QT to be on.
  FREETYPE - Use standard freetype text rendering.
* obj.SetAreaLabelArrayName (string name) - The array to use
  for area labeling. Default is "label".
* string = obj.GetAreaLabelArrayName () - The array to use
  for area labeling. Default is "label".
* obj.SetAreaSizeArrayName (string name) - The array to use
  for area sizes. Default is "size".
* string = obj.GetAreaSizeArrayName () - The array to use
  for area sizes. Default is "size".
* obj.SetAreaLabelPriorityArrayName (string name) - The
  array to use for area labeling priority. Default is
  "GraphVertexDegree".
* string = obj.GetAreaLabelPriorityArrayName () - The array
  to use for area labeling priority. Default is
  "GraphVertexDegree".
* obj.SetGraphEdgeLabelArrayName (string name) - The array
  to use for edge labeling. Default is "label".
* obj.SetGraphEdgeLabelArrayName (string name, int idx) -
  The array to use for edge labeling. Default is "label".
* string = obj.GetGraphEdgeLabelArrayName () - The array to
  use for edge labeling. Default is "label".
* string = obj.GetGraphEdgeLabelArrayName (int idx) - The
  array to use for edge labeling. Default is "label".
* obj.SetGraphEdgeLabelTextProperty (vtkTextProperty tp) -
  The text property for the graph edge labels.
* obj.SetGraphEdgeLabelTextProperty (vtkTextProperty tp, int
  idx) - The text property for the graph edge labels.
* vtkTextProperty = obj.GetGraphEdgeLabelTextProperty () -
  The text property for the graph edge labels.
* vtkTextProperty = obj.GetGraphEdgeLabelTextProperty (int
  idx) - The text property for the graph edge labels.
* obj.SetAreaHoverArrayName (string ) - The name of the
  array whose value appears when the mouse hovers over a
  rectangle in the treemap.
* string = obj.GetAreaHoverArrayName () - The name of the
  array whose value appears when the mouse hovers over a
  rectangle in the treemap.
* obj.SetAreaLabelVisibility (bool vis) - Whether to show
  area labels. Default is off.
* bool = obj.GetAreaLabelVisibility () - Whether to show
  area labels. Default is off.
* obj.AreaLabelVisibilityOn () - Whether to show area
  labels. Default is off.
* obj.AreaLabelVisibilityOff () - Whether to show area
  labels. Default is off.
* obj.SetAreaLabelTextProperty (vtkTextProperty tp) - The
  text property for the area labels.
* vtkTextProperty = obj.GetAreaLabelTextProperty () - The
  text property for the area labels.
* obj.SetGraphEdgeLabelVisibility (bool vis) - Whether to
  show edge labels. Default is off.
* obj.SetGraphEdgeLabelVisibility (bool vis, int idx) -
  Whether to show edge labels. Default is off.
* bool = obj.GetGraphEdgeLabelVisibility () - Whether to
  show edge labels. Default is off.
* bool = obj.GetGraphEdgeLabelVisibility (int idx) - Whether
  to show edge labels. Default is off.
* obj.GraphEdgeLabelVisibilityOn () - Whether to show edge
  labels. Default is off.
* obj.GraphEdgeLabelVisibilityOff () - Whether to show edge
  labels. Default is off.
* obj.SetAreaColorArrayName (string name) - The array to use
  for coloring vertices. Default is "color".
* string = obj.GetAreaColorArrayName () - The array to use
  for coloring vertices. Default is "color".
* obj.SetColorAreasByArray (bool vis) - Whether to color
  vertices. Default is off.
* bool = obj.GetColorAreasByArray () - Whether to color
  vertices. Default is off.
* obj.ColorAreasByArrayOn () - Whether to color vertices.
  Default is off.
* obj.ColorAreasByArrayOff () - Whether to color vertices.
  Default is off.
* obj.SetGraphEdgeColorArrayName (string name) - The array
  to use for coloring edges. Default is "color".
* obj.SetGraphEdgeColorArrayName (string name, int idx) -
  The array to use for coloring edges. Default is "color".
* string = obj.GetGraphEdgeColorArrayName () - The array to
  use for coloring edges. Default is "color".
* string = obj.GetGraphEdgeColorArrayName (int idx) - The
  array to use for coloring edges. Default is "color".
* obj.SetGraphEdgeColorToSplineFraction () - Set the color
  to be the spline fraction
* obj.SetGraphEdgeColorToSplineFraction (int idx) - Set the
  color to be the spline fraction
* obj.SetColorGraphEdgesByArray (bool vis) - Whether to
  color edges. Default is off.
* obj.SetColorGraphEdgesByArray (bool vis, int idx) -
  Whether to color edges. Default is off.
* bool = obj.GetColorGraphEdgesByArray () - Whether to color
  edges. Default is off.
* bool = obj.GetColorGraphEdgesByArray (int idx) - Whether
  to color edges. Default is off.
* obj.ColorGraphEdgesByArrayOn () - Whether to color edges.
  Default is off.
* obj.ColorGraphEdgesByArrayOff () - Whether to color edges.
  Default is off.
* obj.SetGraphHoverArrayName (string name) - The name of the
  array whose value appears when the mouse hovers over a
  graph edge.
* obj.SetGraphHoverArrayName (string name, int idx) - The
  name of the array whose value appears when the mouse
  hovers over a graph edge.
* string = obj.GetGraphHoverArrayName () - The name of the
  array whose value appears when the mouse hovers over a
  graph edge.
* string = obj.GetGraphHoverArrayName (int idx) - The name
  of the array whose value appears when the mouse hovers
  over a graph edge.
* obj.SetShrinkPercentage (double value) - Set the region
  shrink percentage between 0.0 and 1.0.
* double = obj.GetShrinkPercentage () - Set the region
  shrink percentage between 0.0 and 1.0.
* obj.SetGraphBundlingStrength (double strength) - Set the
  bundling strength.
* obj.SetGraphBundlingStrength (double strength, int idx) -
  Set the bundling strength.
* double = obj.GetGraphBundlingStrength () - Set the
  bundling strength.
* double = obj.GetGraphBundlingStrength (int idx) - Set the
  bundling strength.
* obj.SetGraphSplineType (int type, int idx) - Sets the
  spline type for the graph edges. vtkSplineGraphEdges::
  CUSTOM uses a vtkCardinalSpline. vtkSplineGraphEdges::
  BSPLINE uses a b-spline. The default is CUSTOM.
* int = obj.GetGraphSplineType (int idx) - Sets the spline
  type for the graph edges. vtkSplineGraphEdges::CUSTOM uses
  a vtkCardinalSpline. vtkSplineGraphEdges::BSPLINE uses a
  b-spline. The default is CUSTOM.
* obj.SetAreaLayoutStrategy (vtkAreaLayoutStrategy strategy)
  - The layout strategy for producing spatial regions for
  the tree.
* vtkAreaLayoutStrategy = obj.GetAreaLayoutStrategy () - The
  layout strategy for producing spatial regions for the
  tree.
* obj.SetAreaToPolyData (vtkPolyDataAlgorithm areaToPoly) -
  The filter for converting areas to polydata. This may e.g.
  be vtkTreeMapToPolyData or vtkTreeRingToPolyData. The
  filter must take a vtkTree as input and produce
  vtkPolyData.
* vtkPolyDataAlgorithm = obj.GetAreaToPolyData () - The
  filter for converting areas to polydata. This may e.g. be
  vtkTreeMapToPolyData or vtkTreeRingToPolyData. The filter
  must take a vtkTree as input and produce vtkPolyData.
* obj.SetUseRectangularCoordinates (bool ) - Whether the
  area represents radial or rectangular coordinates.
* bool = obj.GetUseRectangularCoordinates () - Whether the
  area represents radial or rectangular coordinates.
* obj.UseRectangularCoordinatesOn () - Whether the area
  represents radial or rectangular coordinates.
* obj.UseRectangularCoordinatesOff () - Whether the area
  represents radial or rectangular coordinates.
* obj.SetAreaLabelMapper (vtkLabeledDataMapper mapper) - The
  mapper for rendering labels on areas. This may e.g. be
  vtkDynamic2DLabelMapper or vtkTreeMapLabelMapper.
* vtkLabeledDataMapper = obj.GetAreaLabelMapper () - The
  mapper for rendering labels on areas. This may e.g. be
  vtkDynamic2DLabelMapper or vtkTreeMapLabelMapper.
* obj.ApplyViewTheme (vtkViewTheme theme) - Apply the theme
  to this view.
* obj.SetEdgeScalarBarVisibility (bool b) - Visibility of
  scalar bar actor for edges.
* bool = obj.GetEdgeScalarBarVisibility () - Visibility of
  scalar bar actor for edges.


* FreeMat_Documentation
* Visualization_Toolkit_View_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

