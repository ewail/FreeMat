
 Usage

This class is used to represent and render a compass.
To create an instance of class vtkCompassRepresentation,
simply invoke its constructor as follows

    obj = vtkCompassRepresentation



 Methods

The class vtkCompassRepresentation has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkCompassRepresentation class.

* string = obj.GetClassName () - Standard methods for the
  class.
* int = obj.IsA (string name) - Standard methods for the
  class.
* vtkCompassRepresentation = obj.NewInstance () - Standard
  methods for the class.
* vtkCompassRepresentation = obj.SafeDownCast (vtkObject o)
  - Standard methods for the class.
* vtkCoordinate = obj.GetPoint1Coordinate () - Position the
  first end point of the slider. Note that this point is an
  instance of vtkCoordinate, meaning that Point 1 can be
  specified in a variety of coordinate systems, and can even
  be relative to another point. To set the point, you'll
  want to get the Point1Coordinate and then invoke the
  necessary methods to put it into the correct coordinate
  system and set the correct initial value.
* vtkCoordinate = obj.GetPoint2Coordinate () - Position the
  second end point of the slider. Note that this point is an
  instance of vtkCoordinate, meaning that Point 1 can be
  specified in a variety of coordinate systems, and can even
  be relative to another point. To set the point, you'll
  want to get the Point2Coordinate and then invoke the
  necessary methods to put it into the correct coordinate
  system and set the correct initial value.
* vtkProperty2D = obj.GetRingProperty () - Get the slider
  properties. The properties of the slider when selected and
  unselected can be manipulated.
* vtkProperty2D = obj.GetSelectedProperty () - Get the
  selection property. This property is used to modify the
  appearance of selected objects (e.g., the slider).
* vtkTextProperty = obj.GetLabelProperty () - Set/Get the
  properties for the label and title text.
* obj.PlaceWidget (double bounds[6]) - Methods to interface
  with the vtkSliderWidget. The PlaceWidget() method assumes
  that the parameter bounds[6] specifies the location in
  display space where the widget should be placed.
* obj.BuildRepresentation () - Methods to interface with the
  vtkSliderWidget. The PlaceWidget() method assumes that the
  parameter bounds[6] specifies the location in display
  space where the widget should be placed.
* obj.StartWidgetInteraction (double eventPos[2]) - Methods
  to interface with the vtkSliderWidget. The PlaceWidget()
  method assumes that the parameter bounds[6] specifies the
  location in display space where the widget should be
  placed.
* obj.WidgetInteraction (double eventPos[2]) - Methods to
  interface with the vtkSliderWidget. The PlaceWidget()
  method assumes that the parameter bounds[6] specifies the
  location in display space where the widget should be
  placed.
* obj.TiltWidgetInteraction (double eventPos[2]) - Methods
  to interface with the vtkSliderWidget. The PlaceWidget()
  method assumes that the parameter bounds[6] specifies the
  location in display space where the widget should be
  placed.
* obj.DistanceWidgetInteraction (double eventPos[2]) -
  Methods to interface with the vtkSliderWidget. The
  PlaceWidget() method assumes that the parameter bounds[6]
  specifies the location in display space where the widget
  should be placed.
* int = obj.ComputeInteractionState (int X, int Y, int
  modify) - Methods to interface with the vtkSliderWidget.
  The PlaceWidget() method assumes that the parameter bounds
  [6] specifies the location in display space where the
  widget should be placed.
* obj.Highlight (int ) - Methods to interface with the
  vtkSliderWidget. The PlaceWidget() method assumes that the
  parameter bounds[6] specifies the location in display
  space where the widget should be placed.
* obj.GetActors (vtkPropCollection )
* obj.ReleaseGraphicsResources (vtkWindow )
* int = obj.RenderOverlay (vtkViewport )
* int = obj.RenderOpaqueGeometry (vtkViewport )
* obj.SetHeading (double value)
* double = obj.GetHeading ()
* obj.SetTilt (double value)
* double = obj.GetTilt ()
* obj.UpdateTilt (double time)
* obj.EndTilt ()
* obj.SetDistance (double value)
* double = obj.GetDistance ()
* obj.UpdateDistance (double time)
* obj.EndDistance ()
* obj.SetRenderer (vtkRenderer ren)


* FreeMat_Documentation
* Visualization_Toolkit_Geo_Vis_Classes
* Generated on Thu Jul 25 2013 17:18:31 for FreeMat by
  doxygen_ 1.8.1.1

