
 Usage

vtkParallelCoordinatesActor generates a parallel coordinates
plot from an input field (i.e., vtkDataObject). Parallel
coordinates represent N-dimensional data by using a set of N
parallel axes (not orthogonal like the usual x-y-z Cartesian
axes). Each N-dimensional point is plotted as a polyline,
were each of the N components of the point lie on one of the
N axes, and the components are connected by straight lines.
To use this class, you must specify an input data object.
You'll probably also want to specify the position of the
plot be setting the Position and Position2 instance
variables, which define a rectangle in which the plot lies.
Another important parameter is the IndependentVariables
ivar, which tells the instance how to interpret the field
data (independent variables as the rows or columns of the
field). There are also many other instance variables that
control the look of the plot includes its title, attributes,
number of ticks on the axes, etc.
Set the text property/attributes of the title and the labels
through the vtkTextProperty objects associated to this
actor.
To create an instance of class vtkParallelCoordinatesActor,
simply invoke its constructor as follows

    obj = vtkParallelCoordinatesActor



 Methods

The class vtkParallelCoordinatesActor has several methods
that can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkParallelCoordinatesActor class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkParallelCoordinatesActor = obj.NewInstance ()
* vtkParallelCoordinatesActor = obj.SafeDownCast (vtkObject
  o)
* obj.SetIndependentVariables (int ) - Specify whether to
  use the rows or columns as independent variables. If
  columns, then each row represents a separate point. If
  rows, then each column represents a separate point.
* int = obj.GetIndependentVariablesMinValue () - Specify
  whether to use the rows or columns as independent
  variables. If columns, then each row represents a separate
  point. If rows, then each column represents a separate
  point.
* int = obj.GetIndependentVariablesMaxValue () - Specify
  whether to use the rows or columns as independent
  variables. If columns, then each row represents a separate
  point. If rows, then each column represents a separate
  point.
* int = obj.GetIndependentVariables () - Specify whether to
  use the rows or columns as independent variables. If
  columns, then each row represents a separate point. If
  rows, then each column represents a separate point.
* obj.SetIndependentVariablesToColumns () - Specify whether
  to use the rows or columns as independent variables. If
  columns, then each row represents a separate point. If
  rows, then each column represents a separate point.
* obj.SetIndependentVariablesToRows () - Specify whether to
  use the rows or columns as independent variables. If
  columns, then each row represents a separate point. If
  rows, then each column represents a separate point.
* obj.SetTitle (string ) - Set/Get the title of the parallel
  coordinates plot.
* string = obj.GetTitle () - Set/Get the title of the
  parallel coordinates plot.
* obj.SetNumberOfLabels (int ) - Set/Get the number of
  annotation labels to show along each axis. This values is
  a suggestion: the number of labels may vary depending on
  the particulars of the data.
* int = obj.GetNumberOfLabelsMinValue () - Set/Get the
  number of annotation labels to show along each axis. This
  values is a suggestion: the number of labels may vary
  depending on the particulars of the data.
* int = obj.GetNumberOfLabelsMaxValue () - Set/Get the
  number of annotation labels to show along each axis. This
  values is a suggestion: the number of labels may vary
  depending on the particulars of the data.
* int = obj.GetNumberOfLabels () - Set/Get the number of
  annotation labels to show along each axis. This values is
  a suggestion: the number of labels may vary depending on
  the particulars of the data.
* obj.SetLabelFormat (string ) - Set/Get the format with
  which to print the labels on the axes.
* string = obj.GetLabelFormat () - Set/Get the format with
  which to print the labels on the axes.
* obj.SetTitleTextProperty (vtkTextProperty p) - Set/Get the
  title text property.
* vtkTextProperty = obj.GetTitleTextProperty () - Set/Get
  the title text property.
* obj.SetLabelTextProperty (vtkTextProperty p) - Set/Get the
  labels text property.
* vtkTextProperty = obj.GetLabelTextProperty () - Set/Get
  the labels text property.
* int = obj.RenderOpaqueGeometry (vtkViewport ) - Draw the
  parallel coordinates plot.
* int = obj.RenderOverlay (vtkViewport ) - Draw the parallel
  coordinates plot.
* int = obj.RenderTranslucentPolygonalGeometry (vtkViewport
  ) - Does this prop have some translucent polygonal
  geometry?
* int = obj.HasTranslucentPolygonalGeometry () - Does this
  prop have some translucent polygonal geometry?
* obj.SetInput (vtkDataObject ) - Set the input to the
  parallel coordinates actor.
* vtkDataObject = obj.GetInput () - Remove a dataset from
  the list of data to append.
* obj.ReleaseGraphicsResources (vtkWindow ) - Release any
  graphics resources that are being consumed by this actor.
  The parameter window could be used to determine which
  graphic resources to release.


* FreeMat_Documentation
* Visualization_Toolkit_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:35 for FreeMat by
  doxygen_ 1.8.1.1

