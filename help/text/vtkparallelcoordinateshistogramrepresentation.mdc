
 Usage

A parallel coordinates plot represents each variable in a
multivariate data set as a separate axis. Individual samples
of that data set are represented as a polyline that pass
through each variable axis at positions that correspond to
data values. This class can generate parallel coordinates
plots identical to its superclass
(vtkParallelCoordinatesRepresentation) and has the same
interaction styles.
In addition to the standard parallel coordinates plot, this
class also can draw a histogram summary of the parallel
coordinates plot. Rather than draw every row in an input
data set, first it computes a 2D histogram for all
neighboring variable axes, then it draws bar (thickness
corresponds to bin size) for each bin the histogram with
opacity weighted by the number of rows contained in the bin.
The result is essentially a density map.
Because this emphasizes dense regions over sparse outliers,
this class also uses a vtkComputeHistogram2DOutliers
instance to identify outlier table rows and draws those as
standard parallel coordinates lines.
To create an instance of class
vtkParallelCoordinatesHistogramRepresentation, simply invoke
its constructor as follows

    obj = vtkParallelCoordinatesHistogramRepresentation



 Methods

The class vtkParallelCoordinatesHistogramRepresentation has
several methods that can be used. They are listed below.
Note that the documentation is translated automatically from
the VTK sources, and may not be completely intelligible.
When in doubt, consult the VTK website. In the methods
listed below, obj is an instance of the
vtkParallelCoordinatesHistogramRepresentation class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkParallelCoordinatesHistogramRepresentation =
  obj.NewInstance ()
* vtkParallelCoordinatesHistogramRepresentation =
  obj.SafeDownCast (vtkObject o)
* obj.ApplyViewTheme (vtkViewTheme theme) - Apply the theme
  to this view.
* obj.SetUseHistograms (int ) - Whether to use the histogram
  rendering mode or the superclass's line rendering mode
* int = obj.GetUseHistograms () - Whether to use the
  histogram rendering mode or the superclass's line
  rendering mode
* obj.UseHistogramsOn () - Whether to use the histogram
  rendering mode or the superclass's line rendering mode
* obj.UseHistogramsOff () - Whether to use the histogram
  rendering mode or the superclass's line rendering mode
* obj.SetShowOutliers (int ) - Whether to compute and show
  outlier lines
* int = obj.GetShowOutliers () - Whether to compute and show
  outlier lines
* obj.ShowOutliersOn () - Whether to compute and show
  outlier lines
* obj.ShowOutliersOff () - Whether to compute and show
  outlier lines
* obj.SetHistogramLookupTableRange (double , double ) -
  Control over the range of the lookup table used to draw
  the histogram quads.
* obj.SetHistogramLookupTableRange (double a[2]) - Control
  over the range of the lookup table used to draw the
  histogram quads.
* double = obj. GetHistogramLookupTableRange () - Control
  over the range of the lookup table used to draw the
  histogram quads.
* obj.SetPreferredNumberOfOutliers (int ) - Target maximum
  number of outliers to be drawn, although not guaranteed.
* int = obj.GetPreferredNumberOfOutliers () - Target maximum
  number of outliers to be drawn, although not guaranteed.
* int = obj.SwapAxisPositions (int position1, int position2)
  - Calls superclass swap, and assures that only histograms
  affected by the swap get recomputed.
* int = obj.SetRangeAtPosition (int position, double range
  [2]) - Calls the superclass method, and assures that only
  the two histograms affect by this call get recomputed.


* FreeMat_Documentation
* Visualization_Toolkit_View_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

