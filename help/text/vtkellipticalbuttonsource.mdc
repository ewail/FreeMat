
 Usage

vtkEllipticalButtonSource creates a ellipsoidal shaped
button with texture coordinates suitable for application of
a texture map. This provides a way to make nice looking 3D
buttons. The buttons are represented as vtkPolyData that
includes texture coordinates and normals. The button lies in
the x-y plane.
To use this class you must define the major and minor axes
lengths of an ellipsoid (expressed as width (x), height (y)
and depth (z)). The button has a rectangular mesh region in
the center with texture coordinates that range smoothly from
(0,1). (This flat region is called the texture region.) The
outer, curved portion of the button (called the shoulder)
has texture coordinates set to a user specified value (by
default (0,0). (This results in coloring the button curve
the same color as the (s,t) location of the texture map.)
The resolution in the radial direction, the texture region,
and the shoulder region must also be set. The button can be
moved by specifying an origin.
To create an instance of class vtkEllipticalButtonSource,
simply invoke its constructor as follows

    obj = vtkEllipticalButtonSource



 Methods

The class vtkEllipticalButtonSource has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkEllipticalButtonSource class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkEllipticalButtonSource = obj.NewInstance ()
* vtkEllipticalButtonSource = obj.SafeDownCast (vtkObject o)
* obj.SetWidth (double ) - Set/Get the width of the button
  (the x-ellipsoid axis length * 2).
* double = obj.GetWidthMinValue () - Set/Get the width of
  the button (the x-ellipsoid axis length * 2).
* double = obj.GetWidthMaxValue () - Set/Get the width of
  the button (the x-ellipsoid axis length * 2).
* double = obj.GetWidth () - Set/Get the width of the button
  (the x-ellipsoid axis length * 2).
* obj.SetHeight (double ) - Set/Get the height of the button
  (the y-ellipsoid axis length * 2).
* double = obj.GetHeightMinValue () - Set/Get the height of
  the button (the y-ellipsoid axis length * 2).
* double = obj.GetHeightMaxValue () - Set/Get the height of
  the button (the y-ellipsoid axis length * 2).
* double = obj.GetHeight () - Set/Get the height of the
  button (the y-ellipsoid axis length * 2).
* obj.SetDepth (double ) - Set/Get the depth of the button
  (the z-eliipsoid axis length).
* double = obj.GetDepthMinValue () - Set/Get the depth of
  the button (the z-eliipsoid axis length).
* double = obj.GetDepthMaxValue () - Set/Get the depth of
  the button (the z-eliipsoid axis length).
* double = obj.GetDepth () - Set/Get the depth of the button
  (the z-eliipsoid axis length).
* obj.SetCircumferentialResolution (int ) - Specify the
  resolution of the button in the circumferential direction.
* int = obj.GetCircumferentialResolutionMinValue () -
  Specify the resolution of the button in the
  circumferential direction.
* int = obj.GetCircumferentialResolutionMaxValue () -
  Specify the resolution of the button in the
  circumferential direction.
* int = obj.GetCircumferentialResolution () - Specify the
  resolution of the button in the circumferential direction.
* obj.SetTextureResolution (int ) - Specify the resolution
  of the texture in the radial direction in the texture
  region.
* int = obj.GetTextureResolutionMinValue () - Specify the
  resolution of the texture in the radial direction in the
  texture region.
* int = obj.GetTextureResolutionMaxValue () - Specify the
  resolution of the texture in the radial direction in the
  texture region.
* int = obj.GetTextureResolution () - Specify the resolution
  of the texture in the radial direction in the texture
  region.
* obj.SetShoulderResolution (int ) - Specify the resolution
  of the texture in the radial direction in the shoulder
  region.
* int = obj.GetShoulderResolutionMinValue () - Specify the
  resolution of the texture in the radial direction in the
  shoulder region.
* int = obj.GetShoulderResolutionMaxValue () - Specify the
  resolution of the texture in the radial direction in the
  shoulder region.
* int = obj.GetShoulderResolution () - Specify the
  resolution of the texture in the radial direction in the
  shoulder region.
* obj.SetRadialRatio (double ) - Set/Get the radial ratio.
  This is the measure of the radius of the outer ellipsoid
  to the inner ellipsoid of the button. The outer ellipsoid
  is the boundary of the button defined by the height and
  width. The inner ellipsoid circumscribes the texture
  region. Larger RadialRatio's cause the button to be more
  rounded (and the texture region to be smaller); smaller
  ratios produce sharply curved shoulders with a larger
  texture region.
* double = obj.GetRadialRatioMinValue () - Set/Get the
  radial ratio. This is the measure of the radius of the
  outer ellipsoid to the inner ellipsoid of the button. The
  outer ellipsoid is the boundary of the button defined by
  the height and width. The inner ellipsoid circumscribes
  the texture region. Larger RadialRatio's cause the button
  to be more rounded (and the texture region to be smaller);
  smaller ratios produce sharply curved shoulders with a
  larger texture region.
* double = obj.GetRadialRatioMaxValue () - Set/Get the
  radial ratio. This is the measure of the radius of the
  outer ellipsoid to the inner ellipsoid of the button. The
  outer ellipsoid is the boundary of the button defined by
  the height and width. The inner ellipsoid circumscribes
  the texture region. Larger RadialRatio's cause the button
  to be more rounded (and the texture region to be smaller);
  smaller ratios produce sharply curved shoulders with a
  larger texture region.
* double = obj.GetRadialRatio () - Set/Get the radial ratio.
  This is the measure of the radius of the outer ellipsoid
  to the inner ellipsoid of the button. The outer ellipsoid
  is the boundary of the button defined by the height and
  width. The inner ellipsoid circumscribes the texture
  region. Larger RadialRatio's cause the button to be more
  rounded (and the texture region to be smaller); smaller
  ratios produce sharply curved shoulders with a larger
  texture region.


* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:31 for FreeMat by
  doxygen_ 1.8.1.1

