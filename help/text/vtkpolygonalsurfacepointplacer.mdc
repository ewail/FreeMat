
 Usage

vtkPolygonalSurfacePointPlacer places points on polygonal
data and is meant to be used in conjunction with
vtkPolygonalSurfaceContourLineInterpolator.
.SECTION Usage
To create an instance of class
vtkPolygonalSurfacePointPlacer, simply invoke its
constructor as follows

    obj = vtkPolygonalSurfacePointPlacer



 Methods

The class vtkPolygonalSurfacePointPlacer has several methods
that can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkPolygonalSurfacePointPlacer
class.

* string = obj.GetClassName () - Standard methods for
  instances of this class.
* int = obj.IsA (string name) - Standard methods for
  instances of this class.
* vtkPolygonalSurfacePointPlacer = obj.NewInstance () -
  Standard methods for instances of this class.
* vtkPolygonalSurfacePointPlacer = obj.SafeDownCast
  (vtkObject o) - Standard methods for instances of this
  class.
* obj.AddProp (vtkProp )
* obj.RemoveViewProp (vtkProp prop)
* obj.RemoveAllProps ()
* int = obj.ComputeWorldPosition (vtkRenderer ren, double
  displayPos[2], double worldPos[3], double worldOrient[9])
  - Given a renderer and a display position in pixel
  coordinates, compute the world position and orientation
  where this point will be placed. This method is typically
  used by the representation to place the point initially.
  For the Terrain point placer this computes world points
  that lie at the specified height above the terrain.
* int = obj.ComputeWorldPosition (vtkRenderer ren, double
  displayPos[2], double refWorldPos[3], double worldPos[3],
  double worldOrient[9]) - Given a renderer, a display
  position, and a reference world position, compute the new
  world position and orientation of this point. This method
  is typically used by the representation to move the point.
* int = obj.ValidateWorldPosition (double worldPos[3]) -
  Given a world position check the validity of this position
  according to the constraints of the placer
* int = obj.ValidateDisplayPosition (vtkRenderer , double
  displayPos[2]) - Given a display position, check the
  validity of this position.
* int = obj.ValidateWorldPosition (double worldPos[3],
  double worldOrient[9]) - Given a world position and a
  world orientation, validate it according to the
  constraints of the placer.
* vtkCellPicker = obj.GetCellPicker () - Get the Prop
  picker.
* vtkPolyDataCollection = obj.GetPolys () - Be sure to add
  polydata on which you wish to place points to this list or
  they will not be considered for placement.
* obj.SetDistanceOffset (double ) - Height offset at which
  points may be placed on the polygonal surface. If you
  specify a non-zero value here, be sure to compute cell
  normals on your input polygonal data (easily done with
  vtkPolyDataNormals).
* double = obj.GetDistanceOffset () - Height offset at which
  points may be placed on the polygonal surface. If you
  specify a non-zero value here, be sure to compute cell
  normals on your input polygonal data (easily done with
  vtkPolyDataNormals).


* FreeMat_Documentation
* Visualization_Toolkit_Widget_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

