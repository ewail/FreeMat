
 Usage

vtkUnstructuredGridGeometryFilter is a filter that extracts
geometry (and associated data) from an unstructured grid. It
differs from vtkGeometryFilter by not tessellating higher
order faces: 2D faces of quadratic 3D cells will be
quadratic. A quadratic edge is extracted as a quadratic
edge. For that purpose, the output of this filter is an
unstructured grid, not a polydata. Also, the face of a voxel
is a pixel, not a quad. Geometry is obtained as follows: all
0D, 1D, and 2D cells are extracted. All 2D faces that are
used by only one 3D cell (i.e., boundary faces) are
extracted. It also is possible to specify conditions on
point ids, cell ids, and on bounding box (referred to as
"Extent") to control the extraction process.
To create an instance of class
vtkUnstructuredGridGeometryFilter, simply invoke its
constructor as follows

    obj = vtkUnstructuredGridGeometryFilter



 Methods

The class vtkUnstructuredGridGeometryFilter has several
methods that can be used. They are listed below. Note that
the documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkUnstructuredGridGeometryFilter
class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkUnstructuredGridGeometryFilter = obj.NewInstance ()
* vtkUnstructuredGridGeometryFilter = obj.SafeDownCast
  (vtkObject o)
* obj.SetPointClipping (int ) - Turn on/off selection of
  geometry by point id.
* int = obj.GetPointClipping () - Turn on/off selection of
  geometry by point id.
* obj.PointClippingOn () - Turn on/off selection of geometry
  by point id.
* obj.PointClippingOff () - Turn on/off selection of
  geometry by point id.
* obj.SetCellClipping (int ) - Turn on/off selection of
  geometry by cell id.
* int = obj.GetCellClipping () - Turn on/off selection of
  geometry by cell id.
* obj.CellClippingOn () - Turn on/off selection of geometry
  by cell id.
* obj.CellClippingOff () - Turn on/off selection of geometry
  by cell id.
* obj.SetExtentClipping (int ) - Turn on/off selection of
  geometry via bounding box.
* int = obj.GetExtentClipping () - Turn on/off selection of
  geometry via bounding box.
* obj.ExtentClippingOn () - Turn on/off selection of
  geometry via bounding box.
* obj.ExtentClippingOff () - Turn on/off selection of
  geometry via bounding box.
* obj.SetPointMinimum (vtkIdType ) - Specify the minimum
  point id for point id selection.
* vtkIdType = obj.GetPointMinimumMinValue () - Specify the
  minimum point id for point id selection.
* vtkIdType = obj.GetPointMinimumMaxValue () - Specify the
  minimum point id for point id selection.
* vtkIdType = obj.GetPointMinimum () - Specify the minimum
  point id for point id selection.
* obj.SetPointMaximum (vtkIdType ) - Specify the maximum
  point id for point id selection.
* vtkIdType = obj.GetPointMaximumMinValue () - Specify the
  maximum point id for point id selection.
* vtkIdType = obj.GetPointMaximumMaxValue () - Specify the
  maximum point id for point id selection.
* vtkIdType = obj.GetPointMaximum () - Specify the maximum
  point id for point id selection.
* obj.SetCellMinimum (vtkIdType ) - Specify the minimum cell
  id for point id selection.
* vtkIdType = obj.GetCellMinimumMinValue () - Specify the
  minimum cell id for point id selection.
* vtkIdType = obj.GetCellMinimumMaxValue () - Specify the
  minimum cell id for point id selection.
* vtkIdType = obj.GetCellMinimum () - Specify the minimum
  cell id for point id selection.
* obj.SetCellMaximum (vtkIdType ) - Specify the maximum cell
  id for point id selection.
* vtkIdType = obj.GetCellMaximumMinValue () - Specify the
  maximum cell id for point id selection.
* vtkIdType = obj.GetCellMaximumMaxValue () - Specify the
  maximum cell id for point id selection.
* vtkIdType = obj.GetCellMaximum () - Specify the maximum
  cell id for point id selection.
* obj.SetExtent (double xMin, double xMax, double yMin,
  double yMax, double zMin, double zMax) - Specify a
  (xmin,xmax, ymin,ymax, zmin,zmax) bounding box to clip
  data.
* obj.SetExtent (double extent[6]) - Set / get a (xmin,xmax,
  ymin,ymax, zmin,zmax) bounding box to clip data.
* obj.SetMerging (int ) - Turn on/off merging of coincident
  points. Note that is merging is on, points with different
  point attributes (e.g., normals) are merged, which may
  cause rendering artifacts.
* int = obj.GetMerging () - Turn on/off merging of
  coincident points. Note that is merging is on, points with
  different point attributes (e.g., normals) are merged,
  which may cause rendering artifacts.
* obj.MergingOn () - Turn on/off merging of coincident
  points. Note that is merging is on, points with different
  point attributes (e.g., normals) are merged, which may
  cause rendering artifacts.
* obj.MergingOff () - Turn on/off merging of coincident
  points. Note that is merging is on, points with different
  point attributes (e.g., normals) are merged, which may
  cause rendering artifacts.
* obj.SetLocator (vtkIncrementalPointLocator locator) - Set
  / get a spatial locator for merging points. By default an
  instance of vtkMergePoints is used.
* vtkIncrementalPointLocator = obj.GetLocator () - Set / get
  a spatial locator for merging points. By default an
  instance of vtkMergePoints is used.
* obj.CreateDefaultLocator () - Create default locator. Used
  to create one when none is specified.
* long = obj.GetMTime () - Return the MTime also considering
  the locator.


* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:32 for FreeMat by
  doxygen_ 1.8.1.1

