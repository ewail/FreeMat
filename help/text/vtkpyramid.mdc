
 Usage

vtkPyramid is a concrete implementation of vtkCell to
represent a 3D pyramid. A pyramid consists of a rectangular
base with four triangular faces. vtkPyramid uses the
standard isoparametric shape functions for a linear pyramid.
The pyramid is defined by the five points (0-4) where
(0,1,2,3) is the base of the pyramid which, using the right
hand rule, forms a quadrilaterial whose normal points in the
direction of the pyramid apex at vertex #4.
To create an instance of class vtkPyramid, simply invoke its
constructor as follows

    obj = vtkPyramid



 Methods

The class vtkPyramid has several methods that can be used.
They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkPyramid class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkPyramid = obj.NewInstance ()
* vtkPyramid = obj.SafeDownCast (vtkObject o)
* int = obj.GetCellType () - See the vtkCell API for
  descriptions of these methods.
* int = obj.GetCellDimension () - See the vtkCell API for
  descriptions of these methods.
* int = obj.GetNumberOfEdges () - See the vtkCell API for
  descriptions of these methods.
* int = obj.GetNumberOfFaces () - See the vtkCell API for
  descriptions of these methods.
* vtkCell = obj.GetEdge (int edgeId) - See the vtkCell API
  for descriptions of these methods.
* vtkCell = obj.GetFace (int faceId) - See the vtkCell API
  for descriptions of these methods.
* int = obj.CellBoundary (int subId, double pcoords[3],
  vtkIdList pts) - See the vtkCell API for descriptions of
  these methods.
* obj.Contour (double value, vtkDataArray cellScalars,
  vtkIncrementalPointLocator locator, vtkCellArray verts,
  vtkCellArray lines, vtkCellArray polys, vtkPointData inPd,
  vtkPointData outPd, vtkCellData inCd, vtkIdType cellId,
  vtkCellData outCd) - See the vtkCell API for descriptions
  of these methods.
* int = obj.Triangulate (int index, vtkIdList ptIds,
  vtkPoints pts) - See the vtkCell API for descriptions of
  these methods.
* obj.Derivatives (int subId, double pcoords[3], double
  values, int dim, double derivs) - See the vtkCell API for
  descriptions of these methods.
* int = obj.GetParametricCenter (double pcoords[3]) - Return
  the center of the pyramid in parametric coordinates.
* obj.InterpolateFunctions (double pcoords[3], double
  weights[5]) - Compute the interpolation functions/
  derivatives (aka shape functions/derivatives)
* obj.InterpolateDerivs (double pcoords[3], double derivs
  [15])


* FreeMat_Documentation
* Visualization_Toolkit_Filtering_Classes
* Generated on Thu Jul 25 2013 17:18:31 for FreeMat by
  doxygen_ 1.8.1.1

