
 Usage

vtkSignedCharArray is an array of values of type signed
char. It provides methods for insertion and retrieval of
values and will automatically resize itself to hold new
data.
To create an instance of class vtkSignedCharArray, simply
invoke its constructor as follows

    obj = vtkSignedCharArray



 Methods

The class vtkSignedCharArray has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkSignedCharArray class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkSignedCharArray = obj.NewInstance ()
* vtkSignedCharArray = obj.SafeDownCast (vtkObject o)
* int = obj.GetDataType () - Copy the tuple value into a
  user-provided array.
* signed = obj.char GetValue (vtkIdType id) - Set the data
  at a particular index. Does not do range checking. Make
  sure you use the method SetNumberOfValues() before
  inserting data.
* obj.SetValue (vtkIdType id, signed char value) - Specify
  the number of values for this object to hold. Does an
  allocation as well as setting the MaxId ivar. Used in
  conjunction with SetValue() method for fast insertion.
* obj.SetNumberOfValues (vtkIdType number) - Insert data at
  a specified position in the array.
* obj.InsertValue (vtkIdType id, signed char f) - Insert
  data at the end of the array. Return its location in the
  array.
* vtkIdType = obj.InsertNextValue (signed char f) - Get the
  address of a particular data index. Make sure data is
  allocated for the number of items requested. Set MaxId
  according to the number of data values requested.
* signed = obj.string WritePointer (vtkIdType id, vtkIdType
  number) - Get the address of a particular data index.
  Performs no checks to verify that the memory has been
  allocated etc.
* signed = obj.string GetPointer (vtkIdType id) - This
  method lets the user specify data to be held by the array.
  The array argument is a pointer to the data. size is the
  size of the array supplied by the user. Set save to 1 to
  keep the class from deleting the array when it cleans up
  or reallocates memory. The class uses the actual array
  provided; it does not copy the data from the suppled
  array.


* FreeMat_Documentation
* Visualization_Toolkit_Common_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

