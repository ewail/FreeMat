
 Usage

vtkMapArrayValues allows you to associate certain values of
an attribute array (on either a vertex, edge, point, or
cell) with different values in a newly created attribute
array.
vtkMapArrayValues manages an internal STL map of vtkVariants
that can be added to or cleared. When this filter executes,
each "key" is searched for in the input array and the
indices of the output array at which there were matches the
set to the mapped "value".
You can control whether the input array values are passed to
the output before the mapping occurs (using PassArray) or,
if not, what value to set the unmapped indices to (using
FillValue).
One application of this filter is to help address the dirty
data problem. For example, using vtkMapArrayValues you could
associate the vertex values "Foo, John", "Foo, John.", and
"John Foo" with a single entity.
To create an instance of class vtkMapArrayValues, simply
invoke its constructor as follows

    obj = vtkMapArrayValues



 Methods

The class vtkMapArrayValues has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkMapArrayValues class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkMapArrayValues = obj.NewInstance ()
* vtkMapArrayValues = obj.SafeDownCast (vtkObject o)
* obj.SetFieldType (int ) - Set/Get where the data is
  located that is being mapped. See FieldType enumeration
  for possible values. Default is POINT_DATA.
* int = obj.GetFieldType () - Set/Get where the data is
  located that is being mapped. See FieldType enumeration
  for possible values. Default is POINT_DATA.
* obj.SetPassArray (int ) - Set/Get whether to copy the data
  from the input array to the output array before the
  mapping occurs. If turned off, FillValue is used to
  initialize any unmapped array indices. Default is off.
* int = obj.GetPassArray () - Set/Get whether to copy the
  data from the input array to the output array before the
  mapping occurs. If turned off, FillValue is used to
  initialize any unmapped array indices. Default is off.
* obj.PassArrayOn () - Set/Get whether to copy the data from
  the input array to the output array before the mapping
  occurs. If turned off, FillValue is used to initialize any
  unmapped array indices. Default is off.
* obj.PassArrayOff () - Set/Get whether to copy the data
  from the input array to the output array before the
  mapping occurs. If turned off, FillValue is used to
  initialize any unmapped array indices. Default is off.
* obj.SetFillValue (double ) - Set/Get whether to copy the
  data from the input array to the output array before the
  mapping occurs. If turned off, FillValue is used to
  initialize any unmapped array indices. Default is -1.
* double = obj.GetFillValue () - Set/Get whether to copy the
  data from the input array to the output array before the
  mapping occurs. If turned off, FillValue is used to
  initialize any unmapped array indices. Default is -1.
* obj.SetInputArrayName (string ) - Set/Get the name of the
  input array. This must be set prior to execution.
* string = obj.GetInputArrayName () - Set/Get the name of
  the input array. This must be set prior to execution.
* obj.SetOutputArrayName (string ) - Set/Get the name of the
  output array. Default is "ArrayMap".
* string = obj.GetOutputArrayName () - Set/Get the name of
  the output array. Default is "ArrayMap".
* int = obj.GetOutputArrayType () - Set/Get the type of the
  output array. See vtkSetGet.h for possible values. Default
  is VTK_INT.
* obj.SetOutputArrayType (int ) - Set/Get the type of the
  output array. See vtkSetGet.h for possible values. Default
  is VTK_INT.
* obj.AddToMap (int from, int to) - Add to the internal STL
  map. "from" should be a value in the input array and "to"
  should be the new value it gets assigned in the output
  array.
* obj.AddToMap (int from, string to) - Add to the internal
  STL map. "from" should be a value in the input array and
  "to" should be the new value it gets assigned in the
  output array.
* obj.AddToMap (string from, int to) - Add to the internal
  STL map. "from" should be a value in the input array and
  "to" should be the new value it gets assigned in the
  output array.
* obj.AddToMap (string from, string to) - Add to the
  internal STL map. "from" should be a value in the input
  array and "to" should be the new value it gets assigned in
  the output array.
* obj.ClearMap () - Clear the internal map.
* int = obj.GetMapSize () - Get the size of the internal
  map.


* FreeMat_Documentation
* Visualization_Toolkit_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:35 for FreeMat by
  doxygen_ 1.8.1.1

