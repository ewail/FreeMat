
 Usage

vtkAnnotationLayers stores a vector of annotation layers.
Each layer may contain any number of vtkAnnotation objects.
The ordering of the layers introduces a prioritization of
annotations. Annotations in higher layers may obscure
annotations in lower layers.
To create an instance of class vtkAnnotationLayers, simply
invoke its constructor as follows

    obj = vtkAnnotationLayers



 Methods

The class vtkAnnotationLayers has several methods that can
be used. They are listed below. Note that the documentation
is translated automatically from the VTK sources, and may
not be completely intelligible. When in doubt, consult the
VTK website. In the methods listed below, obj is an instance
of the vtkAnnotationLayers class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkAnnotationLayers = obj.NewInstance ()
* vtkAnnotationLayers = obj.SafeDownCast (vtkObject o)
* obj.SetCurrentAnnotation (vtkAnnotation ann) - The current
  annotation associated with this annotation link.
* vtkAnnotation = obj.GetCurrentAnnotation () - The current
  annotation associated with this annotation link.
* obj.SetCurrentSelection (vtkSelection sel) - The current
  selection associated with this annotation link. This is
  simply the selection contained in the current annotation.
* vtkSelection = obj.GetCurrentSelection () - The current
  selection associated with this annotation link. This is
  simply the selection contained in the current annotation.
* int = obj.GetNumberOfAnnotations () - The number of
  annotations in a specific layer.
* vtkAnnotation = obj.GetAnnotation (int idx) - Retrieve an
  annotation from a layer.
* obj.AddAnnotation (vtkAnnotation ann) - Add an annotation
  to a layer.
* obj.RemoveAnnotation (vtkAnnotation ann) - Remove an
  annotation from a layer.
* obj.Initialize () - Initialize the data structure to an
  empty state.
* obj.ShallowCopy (vtkDataObject other) - Copy data from
  another data object into this one which references the
  same member annotations.
* obj.DeepCopy (vtkDataObject other) - Copy data from
  another data object into this one, performing a deep copy
  of member annotations.
* long = obj.GetMTime () - The modified time for this
  object.


* FreeMat_Documentation
* Visualization_Toolkit_Filtering_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

