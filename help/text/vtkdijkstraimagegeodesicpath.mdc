
 Usage

Takes as input a polyline and an image representing a 2D
cost function and performs a single source shortest path
calculation. Dijkstra's algorithm is used. The
implementation is similar to the one described in
Introduction to Algorithms (Second Edition) by Thomas H.
Cormen, Charles E. Leiserson, Ronald L. Rivest, and Cliff
Stein, published by MIT Press and McGraw-Hill. Some minor
enhancement are added though. All vertices are not pushed on
the heap at start, instead a front set is maintained. The
heap is implemented as a binary heap. The output of the
filter is a set of lines describing the shortest path from
StartVertex to EndVertex. See parent class
vtkDijkstraGraphGeodesicPath for the implementation.
To create an instance of class vtkDijkstraImageGeodesicPath,
simply invoke its constructor as follows

    obj = vtkDijkstraImageGeodesicPath



 Methods

The class vtkDijkstraImageGeodesicPath has several methods
that can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkDijkstraImageGeodesicPath
class.

* string = obj.GetClassName () - Standard methids for
  printing and determining type information.
* int = obj.IsA (string name) - Standard methids for
  printing and determining type information.
* vtkDijkstraImageGeodesicPath = obj.NewInstance () -
  Standard methids for printing and determining type
  information.
* vtkDijkstraImageGeodesicPath = obj.SafeDownCast (vtkObject
  o) - Standard methids for printing and determining type
  information.
* obj.SetInput (vtkDataObject ) - Specify the image object
  which is used as a cost function.
* vtkImageData = obj.GetInputAsImageData () - Specify the
  image object which is used as a cost function.
* obj.SetImageWeight (double ) - Image cost weight.
* double = obj.GetImageWeight () - Image cost weight.
* obj.SetEdgeLengthWeight (double ) - Edge length cost
  weight.
* double = obj.GetEdgeLengthWeight () - Edge length cost
  weight.
* obj.SetCurvatureWeight (double ) - Curvature cost weight.
* double = obj.GetCurvatureWeightMinValue () - Curvature
  cost weight.
* double = obj.GetCurvatureWeightMaxValue () - Curvature
  cost weight.
* double = obj.GetCurvatureWeight () - Curvature cost
  weight.


* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:31 for FreeMat by
  doxygen_ 1.8.1.1

