
 Usage

vtkOutEdgeIterator iterates through all edges whose source
is a particular vertex. Instantiate this class directly and
call Initialize() to traverse the vertex of a graph.
Alternately, use GetInEdges() on the graph to initialize the
iterator. it->Next() returns a vtkOutEdgeType structure,
which contains Id, the edge's id, and Target, the edge's
target vertex.
To create an instance of class vtkOutEdgeIterator, simply
invoke its constructor as follows

    obj = vtkOutEdgeIterator



 Methods

The class vtkOutEdgeIterator has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkOutEdgeIterator class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkOutEdgeIterator = obj.NewInstance ()
* vtkOutEdgeIterator = obj.SafeDownCast (vtkObject o)
* obj.Initialize (vtkGraph g, vtkIdType v) - Initialize the
  iterator with a graph and vertex.
* vtkGraph = obj.GetGraph () - Get the graph and vertex
  associated with this iterator.
* vtkIdType = obj.GetVertex () - Get the graph and vertex
  associated with this iterator.
* vtkGraphEdge = obj.NextGraphEdge () - Just like Next(),
  but returns heavy-weight vtkGraphEdge object instead of
  the vtkEdgeType struct, for use with wrappers. The graph
  edge is owned by this iterator, and changes after each
  call to NextGraphEdge().
* bool = obj.HasNext ()


* FreeMat_Documentation
* Visualization_Toolkit_Filtering_Classes
* Generated on Thu Jul 25 2013 17:18:31 for FreeMat by
  doxygen_ 1.8.1.1

