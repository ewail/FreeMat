
 Usage

The vtkAngleRepresentation3D is a representation for the
vtkAngleWidget. This representation consists of two rays and
three vtkHandleRepresentations to place and manipulate the
three points defining the angle representation. (Note: the
three points are referred to as Point1, Center, and Point2,
at the two end points (Point1 and Point2) and Center (around
which the angle is measured). This particular implementation
is a 3D representation, meaning that it draws in the overlay
plane.
To create an instance of class vtkAngleRepresentation3D,
simply invoke its constructor as follows

    obj = vtkAngleRepresentation3D



 Methods

The class vtkAngleRepresentation3D has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkAngleRepresentation3D class.

* string = obj.GetClassName () - Standard VTK methods.
* int = obj.IsA (string name) - Standard VTK methods.
* vtkAngleRepresentation3D = obj.NewInstance () - Standard
  VTK methods.
* vtkAngleRepresentation3D = obj.SafeDownCast (vtkObject o)
  - Standard VTK methods.
* double = obj.GetAngle () - Satisfy the superclasses API.
  Angle returned is in radians.
* obj.GetPoint1WorldPosition (double pos[3]) - Methods to
  Set/Get the coordinates of the two points defining this
  representation. Note that methods are available for both
  display and world coordinates.
* obj.GetCenterWorldPosition (double pos[3]) - Methods to
  Set/Get the coordinates of the two points defining this
  representation. Note that methods are available for both
  display and world coordinates.
* obj.GetPoint2WorldPosition (double pos[3]) - Methods to
  Set/Get the coordinates of the two points defining this
  representation. Note that methods are available for both
  display and world coordinates.
* obj.SetPoint1WorldPosition (double pos[3]) - Methods to
  Set/Get the coordinates of the two points defining this
  representation. Note that methods are available for both
  display and world coordinates.
* obj.SetPoint1DisplayPosition (double pos[3]) - Methods to
  Set/Get the coordinates of the two points defining this
  representation. Note that methods are available for both
  display and world coordinates.
* obj.SetCenterWorldPosition (double pos[3]) - Methods to
  Set/Get the coordinates of the two points defining this
  representation. Note that methods are available for both
  display and world coordinates.
* obj.SetCenterDisplayPosition (double pos[3]) - Methods to
  Set/Get the coordinates of the two points defining this
  representation. Note that methods are available for both
  display and world coordinates.
* obj.SetPoint2WorldPosition (double pos[3]) - Methods to
  Set/Get the coordinates of the two points defining this
  representation. Note that methods are available for both
  display and world coordinates.
* obj.SetPoint2DisplayPosition (double pos[3]) - Methods to
  Set/Get the coordinates of the two points defining this
  representation. Note that methods are available for both
  display and world coordinates.
* obj.GetPoint1DisplayPosition (double pos[3]) - Methods to
  Set/Get the coordinates of the two points defining this
  representation. Note that methods are available for both
  display and world coordinates.
* obj.GetCenterDisplayPosition (double pos[3]) - Methods to
  Set/Get the coordinates of the two points defining this
  representation. Note that methods are available for both
  display and world coordinates.
* obj.GetPoint2DisplayPosition (double pos[3]) - Methods to
  Set/Get the coordinates of the two points defining this
  representation. Note that methods are available for both
  display and world coordinates.
* vtkActor = obj.GetRay1 () - Set/Get the three leaders used
  to create this representation. By obtaining these leaders
  the user can set the appropriate properties, etc.
* vtkActor = obj.GetRay2 () - Set/Get the three leaders used
  to create this representation. By obtaining these leaders
  the user can set the appropriate properties, etc.
* vtkActor = obj.GetArc () - Set/Get the three leaders used
  to create this representation. By obtaining these leaders
  the user can set the appropriate properties, etc.
* vtkFollower = obj.GetTextActor () - Set/Get the three
  leaders used to create this representation. By obtaining
  these leaders the user can set the appropriate properties,
  etc.
* obj.SetTextActorScale (double scale[3]) - Scale text.
* obj.BuildRepresentation () - Method defined by
  vtkWidgetRepresentation superclass and needed here.
* obj.ReleaseGraphicsResources (vtkWindow w) - Methods
  required by vtkProp superclass.
* int = obj.RenderOpaqueGeometry (vtkViewport ) - Methods
  required by vtkProp superclass.
* int = obj.RenderTranslucentPolygonalGeometry (vtkViewport
  ) - Methods required by vtkProp superclass.
* int = obj.HasTranslucentPolygonalGeometry () - Methods
  required by vtkProp superclass.


* FreeMat_Documentation
* Visualization_Toolkit_Widget_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

