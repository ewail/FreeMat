
 Usage

vtkOutputStream provides a VTK-style interface wrapping
around a standard output stream. The access methods are
virtual so that subclasses can transparently provide
encoding of the output. Data lengths for Write calls refer
to the length of the data in memory. The actual length in
the stream may differ for subclasses that implement an
encoding scheme.
To create an instance of class vtkOutputStream, simply
invoke its constructor as follows

    obj = vtkOutputStream



 Methods

The class vtkOutputStream has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkOutputStream class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkOutputStream = obj.NewInstance ()
* vtkOutputStream = obj.SafeDownCast (vtkObject o)
* int = obj.StartWriting () - Called after the stream
  position has been set by the caller, but before any Write
  calls. The stream position should not be adjusted by the
  caller until after an EndWriting call.
* int = obj.Write (string data, long length) - Write output
  data of the given length.
* int = obj.Write (string data, long length) - Write output
  data of the given length.
* int = obj.EndWriting () - Called after all desired calls
  to Write have been made. After this call, the caller is
  free to change the position of the stream. Additional
  writes should not be done until after another call to
  StartWriting.


* FreeMat_Documentation
* Visualization_Toolkit_IO_Classes
* Generated on Thu Jul 25 2013 17:18:34 for FreeMat by
  doxygen_ 1.8.1.1

