
 Usage

vtkArrayIterator is used to iterate over elements in any
vtkAbstractArray subclass. The vtkArrayIteratorTemplateMacro
is used to centralize the set of types supported by Execute
methods. It also avoids duplication of long switch statement
case lists. Note that in this macro VTK_TT is defined to be
the type of the iterator for the given type of array. One
must include the vtkArrayIteratorIncludes.h header file to
provide for extending of this macro by addition of new
iterators.
Example usage:

   vtkArrayIter* iter = array->NewIterator();
   switch(array->GetDataType())
     {
     vtkArrayIteratorTemplateMacro(myFunc
  (static_cast<VTK_TT*>(iter), arg2));
     }
   iter->Delete();

To create an instance of class vtkArrayIterator, simply
invoke its constructor as follows

    obj = vtkArrayIterator



 Methods

The class vtkArrayIterator has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkArrayIterator class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkArrayIterator = obj.NewInstance ()
* vtkArrayIterator = obj.SafeDownCast (vtkObject o)
* obj.Initialize (vtkAbstractArray array) - Set the array
  this iterator will iterate over. After Initialize() has
  been called, the iterator is valid so long as the Array
  has not been modified (except using the iterator itself).
  If the array is modified, the iterator must be re-
  intialized.
* int = obj.GetDataType ()


* FreeMat_Documentation
* Visualization_Toolkit_Common_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

