
 Usage

This algorithm requires that the vtkTreeMapLayout filter has
already applied to the data in order to create the quadruple
array (min x, max x, min y, max y) of bounds for each vertex
of the tree.
To create an instance of class vtkTreeMapToPolyData, simply
invoke its constructor as follows

    obj = vtkTreeMapToPolyData



 Methods

The class vtkTreeMapToPolyData has several methods that can
be used. They are listed below. Note that the documentation
is translated automatically from the VTK sources, and may
not be completely intelligible. When in doubt, consult the
VTK website. In the methods listed below, obj is an instance
of the vtkTreeMapToPolyData class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkTreeMapToPolyData = obj.NewInstance ()
* vtkTreeMapToPolyData = obj.SafeDownCast (vtkObject o)
* obj.SetRectanglesArrayName (string name) - The field
  containing the level of each tree node. This can be added
  using vtkTreeLevelsFilter before this filter. If this is
  not present, the filter simply calls tree->GetLevel(v) for
  each vertex, which will produce the same result, but may
  not be as efficient.
* obj.SetLevelArrayName (string name) - The spacing along
  the z-axis between tree map levels.
* double = obj.GetLevelDeltaZ () - The spacing along the z-
  axis between tree map levels.
* obj.SetLevelDeltaZ (double ) - The spacing along the z-
  axis between tree map levels.
* bool = obj.GetAddNormals () - The spacing along the z-axis
  between tree map levels.
* obj.SetAddNormals (bool ) - The spacing along the z-axis
  between tree map levels.
* int = obj.FillInputPortInformation (int port,
  vtkInformation info)


* FreeMat_Documentation
* Visualization_Toolkit_Infovis_Classes
* Generated on Thu Jul 25 2013 17:18:34 for FreeMat by
  doxygen_ 1.8.1.1

