
 Usage

vtkThreadedImageAlgorithm is a filter superclass that hides
much of the pipeline complexity. It handles breaking the
pipeline execution into smaller extents so that the
vtkImageData limits are observed. It also provides support
for multithreading. If you don't need any of this
functionality, consider using vtkSimpleImageToImageAlgorithm
instead. .SECTION See also vtkSimpleImageToImageAlgorithm
To create an instance of class vtkThreadedImageAlgorithm,
simply invoke its constructor as follows

    obj = vtkThreadedImageAlgorithm



 Methods

The class vtkThreadedImageAlgorithm has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkThreadedImageAlgorithm class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkThreadedImageAlgorithm = obj.NewInstance ()
* vtkThreadedImageAlgorithm = obj.SafeDownCast (vtkObject o)
* obj.ThreadedExecute (vtkImageData inData, vtkImageData
  outData, int extent[6], int threadId)
* obj.SetNumberOfThreads (int ) - Get/Set the number of
  threads to create when rendering
* int = obj.GetNumberOfThreadsMinValue () - Get/Set the
  number of threads to create when rendering
* int = obj.GetNumberOfThreadsMaxValue () - Get/Set the
  number of threads to create when rendering
* int = obj.GetNumberOfThreads () - Get/Set the number of
  threads to create when rendering
* int = obj.SplitExtent (int splitExt[6], int startExt[6],
  int num, int total) - Putting this here until I merge
  graphics and imaging streaming.


* FreeMat_Documentation
* Visualization_Toolkit_Filtering_Classes
* Generated on Thu Jul 25 2013 17:18:31 for FreeMat by
  doxygen_ 1.8.1.1

