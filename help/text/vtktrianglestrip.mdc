
 Usage

vtkTriangleStrip is a concrete implementation of vtkCell to
represent a 2D triangle strip. A triangle strip is a compact
representation of triangles connected edge to edge in strip
fashion. The connectivity of a triangle strip is three
points defining an initial triangle, then for each
additional triangle, a single point that, combined with the
previous two points, defines the next triangle.
To create an instance of class vtkTriangleStrip, simply
invoke its constructor as follows

    obj = vtkTriangleStrip



 Methods

The class vtkTriangleStrip has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkTriangleStrip class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkTriangleStrip = obj.NewInstance ()
* vtkTriangleStrip = obj.SafeDownCast (vtkObject o)
* int = obj.GetCellType () - See the vtkCell API for
  descriptions of these methods.
* int = obj.GetCellDimension () - See the vtkCell API for
  descriptions of these methods.
* int = obj.GetNumberOfEdges () - See the vtkCell API for
  descriptions of these methods.
* int = obj.GetNumberOfFaces () - See the vtkCell API for
  descriptions of these methods.
* vtkCell = obj.GetEdge (int edgeId) - See the vtkCell API
  for descriptions of these methods.
* vtkCell = obj.GetFace (int ) - See the vtkCell API for
  descriptions of these methods.
* int = obj.CellBoundary (int subId, double pcoords[3],
  vtkIdList pts) - See the vtkCell API for descriptions of
  these methods.
* obj.Contour (double value, vtkDataArray cellScalars,
  vtkIncrementalPointLocator locator, vtkCellArray verts,
  vtkCellArray lines, vtkCellArray polys, vtkPointData inPd,
  vtkPointData outPd, vtkCellData inCd, vtkIdType cellId,
  vtkCellData outCd) - See the vtkCell API for descriptions
  of these methods.
* obj.Clip (double value, vtkDataArray cellScalars,
  vtkIncrementalPointLocator locator, vtkCellArray polys,
  vtkPointData inPd, vtkPointData outPd, vtkCellData inCd,
  vtkIdType cellId, vtkCellData outCd, int insideOut) - See
  the vtkCell API for descriptions of these methods.
* int = obj.Triangulate (int index, vtkIdList ptIds,
  vtkPoints pts)
* obj.Derivatives (int subId, double pcoords[3], double
  values, int dim, double derivs)
* int = obj.IsPrimaryCell () - Return the center of the
  point cloud in parametric coordinates.
* int = obj.GetParametricCenter (double pcoords[3]) - Return
  the center of the point cloud in parametric coordinates.
* obj.InterpolateFunctions (double pcoords[3], double
  weights) - Compute the interpolation functions/derivatives
  (aka shape functions/derivatives)
* obj.InterpolateDerivs (double pcoords[3], double derivs) -
  Compute the interpolation functions/derivatives (aka shape
  functions/derivatives)


* FreeMat_Documentation
* Visualization_Toolkit_Filtering_Classes
* Generated on Thu Jul 25 2013 17:18:31 for FreeMat by
  doxygen_ 1.8.1.1

