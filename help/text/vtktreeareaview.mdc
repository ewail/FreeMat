
 Usage

Takes a graph and a hierarchy (currently a tree) and lays
out the graph vertices based on their categorization within
the hierarchy.
.SEE ALSO vtkGraphLayoutView
.SECTION Thanks Thanks to Jason Shepherd for implementing
this class
To create an instance of class vtkTreeAreaView, simply
invoke its constructor as follows

    obj = vtkTreeAreaView



 Methods

The class vtkTreeAreaView has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkTreeAreaView class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkTreeAreaView = obj.NewInstance ()
* vtkTreeAreaView = obj.SafeDownCast (vtkObject o)
* vtkDataRepresentation = obj.SetTreeFromInputConnection
  (vtkAlgorithmOutput conn) - Set the tree and graph
  representations to the appropriate input ports.
* vtkDataRepresentation = obj.SetTreeFromInput (vtkTree
  input) - Set the tree and graph representations to the
  appropriate input ports.
* vtkDataRepresentation = obj.SetGraphFromInputConnection
  (vtkAlgorithmOutput conn) - Set the tree and graph
  representations to the appropriate input ports.
* vtkDataRepresentation = obj.SetGraphFromInput (vtkGraph
  input) - Set the tree and graph representations to the
  appropriate input ports.
* obj.SetAreaLabelArrayName (string name) - The array to use
  for area labeling. Default is "label".
* string = obj.GetAreaLabelArrayName () - The array to use
  for area labeling. Default is "label".
* obj.SetAreaSizeArrayName (string name) - The array to use
  for area sizes. Default is "size".
* string = obj.GetAreaSizeArrayName () - The array to use
  for area sizes. Default is "size".
* obj.SetLabelPriorityArrayName (string name) - The array to
  use for area labeling priority. Default is
  "GraphVertexDegree".
* string = obj.GetLabelPriorityArrayName () - The array to
  use for area labeling priority. Default is
  "GraphVertexDegree".
* obj.SetEdgeLabelArrayName (string name) - The array to use
  for edge labeling. Default is "label".
* string = obj.GetEdgeLabelArrayName () - The array to use
  for edge labeling. Default is "label".
* obj.SetAreaHoverArrayName (string name) - The name of the
  array whose value appears when the mouse hovers over a
  rectangle in the treemap. This must be a string array.
* string = obj.GetAreaHoverArrayName () - The name of the
  array whose value appears when the mouse hovers over a
  rectangle in the treemap. This must be a string array.
* obj.SetAreaLabelVisibility (bool vis) - Whether to show
  area labels. Default is off.
* bool = obj.GetAreaLabelVisibility () - Whether to show
  area labels. Default is off.
* obj.AreaLabelVisibilityOn () - Whether to show area
  labels. Default is off.
* obj.AreaLabelVisibilityOff () - Whether to show area
  labels. Default is off.
* obj.SetEdgeLabelVisibility (bool vis) - Whether to show
  edge labels. Default is off.
* bool = obj.GetEdgeLabelVisibility () - Whether to show
  edge labels. Default is off.
* obj.EdgeLabelVisibilityOn () - Whether to show edge
  labels. Default is off.
* obj.EdgeLabelVisibilityOff () - Whether to show edge
  labels. Default is off.
* obj.SetAreaColorArrayName (string name) - The array to use
  for coloring vertices. Default is "color".
* string = obj.GetAreaColorArrayName () - The array to use
  for coloring vertices. Default is "color".
* obj.SetColorAreas (bool vis) - Whether to color vertices.
  Default is off.
* bool = obj.GetColorAreas () - Whether to color vertices.
  Default is off.
* obj.ColorAreasOn () - Whether to color vertices. Default
  is off.
* obj.ColorAreasOff () - Whether to color vertices. Default
  is off.
* obj.SetEdgeColorArrayName (string name) - The array to use
  for coloring edges. Default is "color".
* string = obj.GetEdgeColorArrayName () - The array to use
  for coloring edges. Default is "color".
* obj.SetEdgeColorToSplineFraction () - Set the color to be
  the spline fraction
* obj.SetShrinkPercentage (double value) - Set the region
  shrink percentage between 0.0 and 1.0.
* double = obj.GetShrinkPercentage () - Set the region
  shrink percentage between 0.0 and 1.0.
* obj.SetColorEdges (bool vis) - Whether to color edges.
  Default is off.
* bool = obj.GetColorEdges () - Whether to color edges.
  Default is off.
* obj.ColorEdgesOn () - Whether to color edges. Default is
  off.
* obj.ColorEdgesOff () - Whether to color edges. Default is
  off.
* obj.SetBundlingStrength (double strength) - Set the
  bundling strength.
* double = obj.GetBundlingStrength () - Set the bundling
  strength.
* obj.SetAreaLabelFontSize (int size) - The size of the font
  used for area labeling
* int = obj.GetAreaLabelFontSize () - The size of the font
  used for area labeling
* obj.SetEdgeLabelFontSize (int size) - The size of the font
  used for edge labeling
* int = obj.GetEdgeLabelFontSize () - The size of the font
  used for edge labeling
* obj.SetLayoutStrategy (vtkAreaLayoutStrategy strategy) -
  The layout strategy for producing spatial regions for the
  tree.
* vtkAreaLayoutStrategy = obj.GetLayoutStrategy () - The
  layout strategy for producing spatial regions for the
  tree.
* obj.SetUseRectangularCoordinates (bool rect) - Whether the
  area represents radial or rectangular coordinates.
* bool = obj.GetUseRectangularCoordinates () - Whether the
  area represents radial or rectangular coordinates.
* obj.UseRectangularCoordinatesOn () - Whether the area
  represents radial or rectangular coordinates.
* obj.UseRectangularCoordinatesOff () - Whether the area
  represents radial or rectangular coordinates.
* obj.SetEdgeScalarBarVisibility (bool b) - Visibility of
  scalar bar actor for edges.
* bool = obj.GetEdgeScalarBarVisibility () - Visibility of
  scalar bar actor for edges.


* FreeMat_Documentation
* Visualization_Toolkit_View_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

