
 Usage

The vtkImageMapToColors filter will take an input image of
any valid scalar type, and map the first component of the
image through a lookup table. The result is an image of type
VTK_UNSIGNED_CHAR. If the lookup table is not set, or is set
to NULL, then the input data will be passed through if it is
already of type VTK_UNSIGNED_CHAR.
To create an instance of class vtkImageMapToColors, simply
invoke its constructor as follows

    obj = vtkImageMapToColors



 Methods

The class vtkImageMapToColors has several methods that can
be used. They are listed below. Note that the documentation
is translated automatically from the VTK sources, and may
not be completely intelligible. When in doubt, consult the
VTK website. In the methods listed below, obj is an instance
of the vtkImageMapToColors class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkImageMapToColors = obj.NewInstance ()
* vtkImageMapToColors = obj.SafeDownCast (vtkObject o)
* obj.SetLookupTable (vtkScalarsToColors ) - Set the lookup
  table.
* vtkScalarsToColors = obj.GetLookupTable () - Set the
  lookup table.
* obj.SetOutputFormat (int ) - Set the output format, the
  default is RGBA.
* int = obj.GetOutputFormat () - Set the output format, the
  default is RGBA.
* obj.SetOutputFormatToRGBA () - Set the output format, the
  default is RGBA.
* obj.SetOutputFormatToRGB () - Set the output format, the
  default is RGBA.
* obj.SetOutputFormatToLuminanceAlpha () - Set the output
  format, the default is RGBA.
* obj.SetOutputFormatToLuminance () - Set the output format,
  the default is RGBA.
* obj.SetActiveComponent (int ) - Set the component to map
  for multi-component images (default: 0)
* int = obj.GetActiveComponent () - Set the component to map
  for multi-component images (default: 0)
* obj.SetPassAlphaToOutput (int ) - Use the alpha component
  of the input when computing the alpha component of the
  output (useful when converting monochrome+alpha data to
  RGBA)
* obj.PassAlphaToOutputOn () - Use the alpha component of
  the input when computing the alpha component of the output
  (useful when converting monochrome+alpha data to RGBA)
* obj.PassAlphaToOutputOff () - Use the alpha component of
  the input when computing the alpha component of the output
  (useful when converting monochrome+alpha data to RGBA)
* int = obj.GetPassAlphaToOutput () - Use the alpha
  component of the input when computing the alpha component
  of the output (useful when converting monochrome+alpha
  data to RGBA)
* long = obj.GetMTime () - We need to check the modified
  time of the lookup table too.


* FreeMat_Documentation
* Visualization_Toolkit_Imaging_Classes
* Generated on Thu Jul 25 2013 17:18:33 for FreeMat by
  doxygen_ 1.8.1.1

