
 Usage

vtkLabeledTreeMapDataMapper is a mapper that renders text on
a tree map. A tree map is a vtkTree with an associated 4-
tuple array used for storing the boundary rectangle for each
vertex in the tree. The user must specify the array name
used for storing the rectangles.
The mapper iterates through the tree and attempts and
renders a label inside the vertex's rectangle as long as the
following conditions hold:

  1. The vertex level is within the range of levels
     specified for labeling.
  2. The label can fully fit inside its box.
  3. The label does not overlap an ancestor's label.

To create an instance of class vtkLabeledTreeMapDataMapper,
simply invoke its constructor as follows

    obj = vtkLabeledTreeMapDataMapper



 Methods

The class vtkLabeledTreeMapDataMapper has several methods
that can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkLabeledTreeMapDataMapper class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkLabeledTreeMapDataMapper = obj.NewInstance ()
* vtkLabeledTreeMapDataMapper = obj.SafeDownCast (vtkObject
  o)
* obj.RenderOpaqueGeometry (vtkViewport viewport, vtkActor2D
  actor) - Draw the text to the screen at each input point.
* obj.RenderOverlay (vtkViewport viewport, vtkActor2D actor)
  - Draw the text to the screen at each input point.
* vtkTree = obj.GetInputTree () - The input to this filter.
* obj.SetRectanglesArrayName (string name) - The name of the
  4-tuple array used for
* int = obj.GetClipTextMode () - Indicates if the label can
  be displayed clipped by the Window mode = 0 - ok to clip
  labels 1 - auto center labels w/r to the area of the
  vertex's clipped region
* obj.SetClipTextMode (int ) - Indicates if the label can be
  displayed clipped by the Window mode = 0 - ok to clip
  labels 1 - auto center labels w/r to the area of the
  vertex's clipped region
* int = obj.GetChildMotion () - Indicates if the label can
  be moved by its ancestors
* obj.SetChildMotion (int ) - Indicates if the label can be
  moved by its ancestors
* int = obj.GetDynamicLevel () - Indicates at which level
  labeling should be dynamic
* obj.SetDynamicLevel (int ) - Indicates at which level
  labeling should be dynamic
* obj.ReleaseGraphicsResources (vtkWindow ) - Release any
  graphics resources that are being consumed by this actor.
* obj.SetFontSizeRange (int maxSize, int minSize, int delta)
  - The range of font sizes to use when rendering the
  labels.
* obj.GetFontSizeRange (int range[3]) - The range of font
  sizes to use when rendering the labels.
* obj.SetLevelRange (int startLevel, int endLevel) - The
  range of levels to attempt to label. The level of a vertex
  is the length of the path to the root (the root has level
  0).
* obj.GetLevelRange (int range[2]) - The range of levels to
  attempt to label. The level of a vertex is the length of
  the path to the root (the root has level 0).


* FreeMat_Documentation
* Visualization_Toolkit_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:35 for FreeMat by
  doxygen_ 1.8.1.1

