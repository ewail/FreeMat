
 Usage

vtkDataWriter is a helper class that opens and writes the
vtk header and point data (e.g., scalars, vectors, normals,
etc.) from a vtk data file. See text for various formats.
To create an instance of class vtkDataWriter, simply invoke
its constructor as follows

    obj = vtkDataWriter



 Methods

The class vtkDataWriter has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkDataWriter class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkDataWriter = obj.NewInstance ()
* vtkDataWriter = obj.SafeDownCast (vtkObject o)
* obj.SetFileName (string ) - Specify file name of vtk
  polygon data file to write.
* string = obj.GetFileName () - Specify file name of vtk
  polygon data file to write.
* obj.SetWriteToOutputString (int ) - Enable writing to an
  OutputString instead of the default, a file.
* int = obj.GetWriteToOutputString () - Enable writing to an
  OutputString instead of the default, a file.
* obj.WriteToOutputStringOn () - Enable writing to an
  OutputString instead of the default, a file.
* obj.WriteToOutputStringOff () - Enable writing to an
  OutputString instead of the default, a file.
* int = obj.GetOutputStringLength () - When
  WriteToOutputString in on, then a string is allocated,
  written to, and can be retrieved with these methods. The
  string is deleted during the next call to write ...
* string = obj.GetOutputString () - When WriteToOutputString
  in on, then a string is allocated, written to, and can be
  retrieved with these methods. The string is deleted during
  the next call to write ...
* string = obj.RegisterAndGetOutputString () - This
  convenience method returns the string, sets the IVAR to
  NULL, so that the user is responsible for deleting the
  string. I am not sure what the name should be, so it may
  change in the future.
* obj.SetHeader (string ) - Specify the header for the vtk
  data file.
* string = obj.GetHeader () - Specify the header for the vtk
  data file.
* obj.SetFileType (int ) - Specify file type (ASCII or
  BINARY) for vtk data file.
* int = obj.GetFileTypeMinValue () - Specify file type
  (ASCII or BINARY) for vtk data file.
* int = obj.GetFileTypeMaxValue () - Specify file type
  (ASCII or BINARY) for vtk data file.
* int = obj.GetFileType () - Specify file type (ASCII or
  BINARY) for vtk data file.
* obj.SetFileTypeToASCII () - Specify file type (ASCII or
  BINARY) for vtk data file.
* obj.SetFileTypeToBinary () - Specify file type (ASCII or
  BINARY) for vtk data file.
* obj.SetScalarsName (string ) - Give a name to the scalar
  data. If not specified, uses default name "scalars".
* string = obj.GetScalarsName () - Give a name to the scalar
  data. If not specified, uses default name "scalars".
* obj.SetVectorsName (string ) - Give a name to the vector
  data. If not specified, uses default name "vectors".
* string = obj.GetVectorsName () - Give a name to the vector
  data. If not specified, uses default name "vectors".
* obj.SetTensorsName (string ) - Give a name to the tensors
  data. If not specified, uses default name "tensors".
* string = obj.GetTensorsName () - Give a name to the
  tensors data. If not specified, uses default name
  "tensors".
* obj.SetNormalsName (string ) - Give a name to the normals
  data. If not specified, uses default name "normals".
* string = obj.GetNormalsName () - Give a name to the
  normals data. If not specified, uses default name
  "normals".
* obj.SetTCoordsName (string ) - Give a name to the texture
  coordinates data. If not specified, uses default name
  "textureCoords".
* string = obj.GetTCoordsName () - Give a name to the
  texture coordinates data. If not specified, uses default
  name "textureCoords".
* obj.SetGlobalIdsName (string ) - Give a name to the global
  ids data. If not specified, uses default name
  "global_ids".
* string = obj.GetGlobalIdsName () - Give a name to the
  global ids data. If not specified, uses default name
  "global_ids".
* obj.SetPedigreeIdsName (string ) - Give a name to the
  pedigree ids data. If not specified, uses default name
  "pedigree_ids".
* string = obj.GetPedigreeIdsName () - Give a name to the
  pedigree ids data. If not specified, uses default name
  "pedigree_ids".
* obj.SetLookupTableName (string ) - Give a name to the
  lookup table. If not specified, uses default name
  "lookupTable".
* string = obj.GetLookupTableName () - Give a name to the
  lookup table. If not specified, uses default name
  "lookupTable".
* obj.SetFieldDataName (string ) - Give a name to the field
  data. If not specified, uses default name "field".
* string = obj.GetFieldDataName () - Give a name to the
  field data. If not specified, uses default name "field".


* FreeMat_Documentation
* Visualization_Toolkit_IO_Classes
* Generated on Thu Jul 25 2013 17:18:34 for FreeMat by
  doxygen_ 1.8.1.1

