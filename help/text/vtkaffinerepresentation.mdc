
 Usage

This class defines an API for affine transformation widget
representations. These representations interact with
vtkAffineWidget. The basic functionality of the affine
representation is to maintain a transformation matrix.
This class may be subclassed so that alternative
representations can be created. The class defines an API and
a default implementation that the vtkAffineWidget interacts
with to render itself in the scene.
To create an instance of class vtkAffineRepresentation,
simply invoke its constructor as follows

    obj = vtkAffineRepresentation



 Methods

The class vtkAffineRepresentation has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkAffineRepresentation class.

* string = obj.GetClassName () - Standard methods for
  instances of this class.
* int = obj.IsA (string name) - Standard methods for
  instances of this class.
* vtkAffineRepresentation = obj.NewInstance () - Standard
  methods for instances of this class.
* vtkAffineRepresentation = obj.SafeDownCast (vtkObject o) -
  Standard methods for instances of this class.
* obj.GetTransform (vtkTransform t) - Retrieve a linear
  transform characterizing the affine transformation
  generated by this widget. This method copies its internal
  transform into the transform provided. The transform is
  relative to the initial placement of the representation
  (i.e., when PlaceWidget() is invoked).
* obj.SetTolerance (int ) - The tolerance representing the
  distance to the widget (in pixels) in which the cursor is
  considered near enough to the widget to be active.
* int = obj.GetToleranceMinValue () - The tolerance
  representing the distance to the widget (in pixels) in
  which the cursor is considered near enough to the widget
  to be active.
* int = obj.GetToleranceMaxValue () - The tolerance
  representing the distance to the widget (in pixels) in
  which the cursor is considered near enough to the widget
  to be active.
* int = obj.GetTolerance () - The tolerance representing the
  distance to the widget (in pixels) in which the cursor is
  considered near enough to the widget to be active.
* obj.ShallowCopy (vtkProp prop) - Methods to make this
  class properly act like a vtkWidgetRepresentation.


* FreeMat_Documentation
* Visualization_Toolkit_Widget_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

