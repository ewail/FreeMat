
 Usage

vtkInformationQuadratureSchemeDefinitionVectorKey is used to
represent keys for double vector values in vtkInformation.h.
NOTE the interface in this key differs from that in other
similar keys because of our internal use of smart pointers.
To create an instance of class
vtkInformationQuadratureSchemeDefinitionVectorKey, simply
invoke its constructor as follows

    obj = vtkInformationQuadratureSchemeDefinitionVectorKey



 Methods

The class vtkInformationQuadratureSchemeDefinitionVectorKey
has several methods that can be used. They are listed below.
Note that the documentation is translated automatically from
the VTK sources, and may not be completely intelligible.
When in doubt, consult the VTK website. In the methods
listed below, obj is an instance of the
vtkInformationQuadratureSchemeDefinitionVectorKey class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkInformationQuadratureSchemeDefinitionVectorKey =
  obj.NewInstance ()
* vtkInformationQuadratureSchemeDefinitionVectorKey =
  obj.SafeDownCast (vtkObject o)
* vtkInformationQuadratureSchemeDefinitionVectorKey = obj.
  (string name, string location) - The name of the static
  instance and the class in which it is defined(location)
  should be passed to the constructor.
* ~vtkInformationQuadratureSchemeDefinitionVectorKey = obj.
  () - The name of the static instance and the class in
  which it is defined(location) should be passed to the
  constructor.
* obj.Clear (vtkInformation info) - Clear the vector.
* obj.Resize (vtkInformation info, int n) - Resize (extend)
  the vector to hold n objects. Any new elements created
  will be null initialized.
* int = obj.Size (vtkInformation info) - Get the vector's
  length.
* int = obj.Length (vtkInformation info) - Put the value on
  the back of the vector, with reference counting.
* obj.Append (vtkInformation info,
  vtkQuadratureSchemeDefinition value) - Put the value on
  the back of the vector, with reference counting.
* obj.Set (vtkInformation info,
  vtkQuadratureSchemeDefinition value, int i) - Set element
  i of the vector to value. Resizes the vector if needed.
* vtkQuadratureSchemeDefinition = obj.Get (vtkInformation
  info, int idx) - Get the vtkQuadratureSchemeDefinition at
  a specific location in the vector.
* obj.ShallowCopy (vtkInformation from, vtkInformation to) -
  Copy the entry associated with this key from one
  information object to another. If there is no entry in the
  first information object for this key, the value is
  removed from the second.
* obj.DeepCopy (vtkInformation from, vtkInformation to) -
  Copy the entry associated with this key from one
  information object to another. If there is no entry in the
  first information object for this key, the value is
  removed from the second.
* int = obj.SaveState (vtkInformation info,
  vtkXMLDataElement element) - Generate an XML
  representation of the object. Each key/value pair will be
  nested in the resulting XML hierarchy. The element passed
  in is assumed to be empty.
* int = obj.RestoreState (vtkInformation info,
  vtkXMLDataElement element) - Load key/value pairs from an
  XML state representation created with SaveState. Duplicate
  keys will generate a fatal error.


* FreeMat_Documentation
* Visualization_Toolkit_Common_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

