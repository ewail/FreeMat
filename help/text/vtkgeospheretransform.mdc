
 Usage

the cartesian coordinate system is the following (if
BaseAltitude is 0),

* the origin is at the center of the earth
* the x axis goes from the origin to (longtitude=-
  90,latitude=0), intersection of equator and the meridian
  passing just east of Galapagos Islands
* the y axis goes from the origin to the intersection of
  Greenwitch meridian and equator (longitude=0,latitude=0)
* the z axis goes from the origin to the Geographic North
  Pole (latitude=90)
* therefore the frame is right-handed.

To create an instance of class vtkGeoSphereTransform, simply
invoke its constructor as follows

    obj = vtkGeoSphereTransform



 Methods

The class vtkGeoSphereTransform has several methods that can
be used. They are listed below. Note that the documentation
is translated automatically from the VTK sources, and may
not be completely intelligible. When in doubt, consult the
VTK website. In the methods listed below, obj is an instance
of the vtkGeoSphereTransform class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkGeoSphereTransform = obj.NewInstance ()
* vtkGeoSphereTransform = obj.SafeDownCast (vtkObject o)
* obj.Inverse () - Invert the transformation.
* obj.InternalTransformPoint (float in[3], float out[3]) -
  This will calculate the transformation without calling
  Update. Meant for use only within other VTK classes.
* obj.InternalTransformPoint (double in[3], double out[3]) -
  This will calculate the transformation without calling
  Update. Meant for use only within other VTK classes.
* vtkAbstractTransform = obj.MakeTransform () - Make another
  transform of the same type.
* obj.SetToRectangular (bool ) - If on, this transform
  converts (long,lat,alt) triples to (x,y,z) as an offset
  from the center of the earth. Alt, x, y, and z are all be
  in meters. If off, the tranform works in the reverse
  direction. Initial value is on.
* bool = obj.GetToRectangular () - If on, this transform
  converts (long,lat,alt) triples to (x,y,z) as an offset
  from the center of the earth. Alt, x, y, and z are all be
  in meters. If off, the tranform works in the reverse
  direction. Initial value is on.
* obj.ToRectangularOn () - If on, this transform converts
  (long,lat,alt) triples to (x,y,z) as an offset from the
  center of the earth. Alt, x, y, and z are all be in
  meters. If off, the tranform works in the reverse
  direction. Initial value is on.
* obj.ToRectangularOff () - If on, this transform converts
  (long,lat,alt) triples to (x,y,z) as an offset from the
  center of the earth. Alt, x, y, and z are all be in
  meters. If off, the tranform works in the reverse
  direction. Initial value is on.
* obj.SetBaseAltitude (double ) - The base altitude to
  transform coordinates to. This can be useful for
  transforming lines just above the earth's surface. Default
  is 0.
* double = obj.GetBaseAltitude () - The base altitude to
  transform coordinates to. This can be useful for
  transforming lines just above the earth's surface. Default
  is 0.


* FreeMat_Documentation
* Visualization_Toolkit_Geo_Vis_Classes
* Generated on Thu Jul 25 2013 17:18:31 for FreeMat by
  doxygen_ 1.8.1.1

