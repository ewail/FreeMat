
 Usage

vtkFollower is a subclass of vtkActor that always follows
its specified camera. More specifically it will not change
its position or scale, but it will continually update its
orientation so that it is right side up and facing the
camera. This is typically used for text labels in a scene.
All of the adjustments that can be made to an actor also
will take effect with a follower. So, if you change the
orientation of the follower by 90 degrees, then it will
follow the camera, but be off by 90 degrees.
To create an instance of class vtkFollower, simply invoke
its constructor as follows

    obj = vtkFollower



 Methods

The class vtkFollower has several methods that can be used.
They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkFollower class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkFollower = obj.NewInstance ()
* vtkFollower = obj.SafeDownCast (vtkObject o)
* obj.SetCamera (vtkCamera ) - Set/Get the camera to follow.
  If this is not set, then the follower won't know who to
  follow.
* vtkCamera = obj.GetCamera () - Set/Get the camera to
  follow. If this is not set, then the follower won't know
  who to follow.
* int = obj.RenderOpaqueGeometry (vtkViewport viewport) -
  This causes the actor to be rendered. It in turn will
  render the actor's property, texture map and then mapper.
  If a property hasn't been assigned, then the actor will
  create one automatically.
* int = obj.RenderTranslucentPolygonalGeometry (vtkViewport
  viewport) - This causes the actor to be rendered. It in
  turn will render the actor's property, texture map and
  then mapper. If a property hasn't been assigned, then the
  actor will create one automatically.
* obj.Render (vtkRenderer ren) - This causes the actor to be
  rendered. It in turn will render the actor's property,
  texture map and then mapper. If a property hasn't been
  assigned, then the actor will create one automatically.
* int = obj.HasTranslucentPolygonalGeometry () - Does this
  prop have some translucent polygonal geometry?
* obj.GetMatrix (vtkMatrix4x4 m) - Copy the follower's
  composite 4x4 matrix into the matrix provided.
* obj.GetMatrix (double m[16]) - Copy the follower's
  composite 4x4 matrix into the matrix provided.
* vtkMatrix4x4 = obj.GetMatrix () - Shallow copy of a
  follower. Overloads the virtual vtkProp method.
* obj.ShallowCopy (vtkProp prop) - Shallow copy of a
  follower. Overloads the virtual vtkProp method.


* FreeMat_Documentation
* Visualization_Toolkit_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:35 for FreeMat by
  doxygen_ 1.8.1.1

