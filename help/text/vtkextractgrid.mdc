
 Usage

vtkExtractGrid is a filter that selects a portion of an
input structured grid dataset, or subsamples an input
dataset. (The selected portion of interested is referred to
as the Volume Of Interest, or VOI.) The output of this
filter is a structured grid dataset. The filter treats input
data of any topological dimension (i.e., point, line, image,
or volume) and can generate output data of any topological
dimension.
To use this filter set the VOI ivar which are i-j-k min/max
indices that specify a rectangular region in the data. (Note
that these are 0-offset.) You can also specify a sampling
rate to subsample the data.
Typical applications of this filter are to extract a plane
from a grid for contouring, subsampling large grids to
reduce data size, or extracting regions of a grid with
interesting data.
To create an instance of class vtkExtractGrid, simply invoke
its constructor as follows

    obj = vtkExtractGrid



 Methods

The class vtkExtractGrid has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkExtractGrid class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkExtractGrid = obj.NewInstance ()
* vtkExtractGrid = obj.SafeDownCast (vtkObject o)
* obj.SetVOI (int , int , int , int , int , int ) - Specify
  i-j-k (min,max) pairs to extract. The resulting structured
  grid dataset can be of any topological dimension (i.e.,
  point, line, plane, or 3D grid).
* obj.SetVOI (int a[6]) - Specify i-j-k (min,max) pairs to
  extract. The resulting structured grid dataset can be of
  any topological dimension (i.e., point, line, plane, or 3D
  grid).
* int = obj. GetVOI () - Specify i-j-k (min,max) pairs to
  extract. The resulting structured grid dataset can be of
  any topological dimension (i.e., point, line, plane, or 3D
  grid).
* obj.SetSampleRate (int , int , int ) - Set the sampling
  rate in the i, j, and k directions. If the rate is > 1,
  then the resulting VOI will be subsampled representation
  of the input. For example, if the SampleRate=(2,2,2),
  every other point will be selected, resulting in a volume
  1/8th the original size.
* obj.SetSampleRate (int a[3]) - Set the sampling rate in
  the i, j, and k directions. If the rate is > 1, then the
  resulting VOI will be subsampled representation of the
  input. For example, if the SampleRate=(2,2,2), every other
  point will be selected, resulting in a volume 1/8th the
  original size.
* int = obj. GetSampleRate () - Set the sampling rate in the
  i, j, and k directions. If the rate is > 1, then the
  resulting VOI will be subsampled representation of the
  input. For example, if the SampleRate=(2,2,2), every other
  point will be selected, resulting in a volume 1/8th the
  original size.
* obj.SetIncludeBoundary (int ) - Control whether to enforce
  that the "boundary" of the grid is output in the
  subsampling process. (This ivar only has effect when the
  SampleRate in any direction is not equal to 1.) When this
  ivar IncludeBoundary is on, the subsampling will always
  include the boundary of the grid even though the sample
  rate is not an even multiple of the grid dimensions. (By
  default IncludeBoundary is off.)
* int = obj.GetIncludeBoundary () - Control whether to
  enforce that the "boundary" of the grid is output in the
  subsampling process. (This ivar only has effect when the
  SampleRate in any direction is not equal to 1.) When this
  ivar IncludeBoundary is on, the subsampling will always
  include the boundary of the grid even though the sample
  rate is not an even multiple of the grid dimensions. (By
  default IncludeBoundary is off.)
* obj.IncludeBoundaryOn () - Control whether to enforce that
  the "boundary" of the grid is output in the subsampling
  process. (This ivar only has effect when the SampleRate in
  any direction is not equal to 1.) When this ivar
  IncludeBoundary is on, the subsampling will always include
  the boundary of the grid even though the sample rate is
  not an even multiple of the grid dimensions. (By default
  IncludeBoundary is off.)
* obj.IncludeBoundaryOff () - Control whether to enforce
  that the "boundary" of the grid is output in the
  subsampling process. (This ivar only has effect when the
  SampleRate in any direction is not equal to 1.) When this
  ivar IncludeBoundary is on, the subsampling will always
  include the boundary of the grid even though the sample
  rate is not an even multiple of the grid dimensions. (By
  default IncludeBoundary is off.)


* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:31 for FreeMat by
  doxygen_ 1.8.1.1

