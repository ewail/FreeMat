
 Usage

This class intersects the input DataSet with a frustum and
determines which cells and points lie within the frustum.
The frustum is defined with a vtkPlanes containing six
cutting planes. The output is a DataSet that is either a
shallow copy of the input dataset with two new
"vtkInsidedness" attribute arrays, or a completely new
UnstructuredGrid that contains only the cells and points of
the input that are inside the frustum. The PreserveTopology
flag controls which occurs. When PreserveTopology is off
this filter adds a scalar array called vtkOriginalCellIds
that says what input cell produced each output cell. This is
an example of a Pedigree ID which helps to trace back
results.
To create an instance of class vtkExtractSelectedFrustum,
simply invoke its constructor as follows

    obj = vtkExtractSelectedFrustum



 Methods

The class vtkExtractSelectedFrustum has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkExtractSelectedFrustum class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkExtractSelectedFrustum = obj.NewInstance ()
* vtkExtractSelectedFrustum = obj.SafeDownCast (vtkObject o)
* long = obj.GetMTime () - Return the MTime taking into
  account changes to the Frustum
* obj.SetFrustum (vtkPlanes ) - Set the selection frustum.
  The planes object must contain six planes.
* vtkPlanes = obj.GetFrustum () - Set the selection frustum.
  The planes object must contain six planes.
* obj.CreateFrustum (double vertices[32]) - Given eight
  vertices, creates a frustum. each pt is x,y,z,1 in the
  following order near lower left, far lower left near upper
  left, far upper left near lower right, far lower right
  near upper right, far upper right
* vtkPoints = obj.GetClipPoints () - Return eight points
  that define the selection frustum. Valid if create Frustum
  was used, invalid if SetFrustum was.
* obj.SetFieldType (int ) - Sets/gets the intersection test
  type.
* int = obj.GetFieldType () - Sets/gets the intersection
  test type.
* obj.SetContainingCells (int ) - Sets/gets the intersection
  test type. Only meaningful when fieldType is
  vtkSelection::POINT
* int = obj.GetContainingCells () - Sets/gets the
  intersection test type. Only meaningful when fieldType is
  vtkSelection::POINT
* int = obj.OverallBoundsTest (double bounds) - Does a quick
  test on the AABBox defined by the bounds.
* obj.SetShowBounds (int ) - When On, this returns an
  unstructured grid that outlines selection area. Off is the
  default.
* int = obj.GetShowBounds () - When On, this returns an
  unstructured grid that outlines selection area. Off is the
  default.
* obj.ShowBoundsOn () - When On, this returns an
  unstructured grid that outlines selection area. Off is the
  default.
* obj.ShowBoundsOff () - When On, this returns an
  unstructured grid that outlines selection area. Off is the
  default.
* obj.SetInsideOut (int ) - When on, extracts cells outside
  the frustum instead of inside.
* int = obj.GetInsideOut () - When on, extracts cells
  outside the frustum instead of inside.
* obj.InsideOutOn () - When on, extracts cells outside the
  frustum instead of inside.
* obj.InsideOutOff () - When on, extracts cells outside the
  frustum instead of inside.


* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:31 for FreeMat by
  doxygen_ 1.8.1.1

