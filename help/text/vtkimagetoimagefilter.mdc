
 Usage

vtkImageToImageFilter is a filter superclass that hides much
of the pipeline complexity. It handles breaking the pipeline
execution into smaller extents so that the vtkImageData
limits are observed. It also provides support for
multithreading. If you don't need any of this functionality,
consider using vtkSimpleImageToImageFilter instead. .SECTION
Warning This used to be the parent class for most imaging
filter in VTK4.x, now this role has been replaced by
vtkImageAlgorithm. You should consider using
vtkImageAlgorithm instead, when writing filter for VTK5 and
above. This class was kept to ensure full backward
compatibility. .SECTION See also vtkSimpleImageToImageFilter
vtkImageSpatialFilter vtkImageAlgorithm
To create an instance of class vtkImageToImageFilter, simply
invoke its constructor as follows

    obj = vtkImageToImageFilter



 Methods

The class vtkImageToImageFilter has several methods that can
be used. They are listed below. Note that the documentation
is translated automatically from the VTK sources, and may
not be completely intelligible. When in doubt, consult the
VTK website. In the methods listed below, obj is an instance
of the vtkImageToImageFilter class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkImageToImageFilter = obj.NewInstance ()
* vtkImageToImageFilter = obj.SafeDownCast (vtkObject o)
* obj.SetInput (vtkImageData input) - Set the Input of a
  filter.
* vtkImageData = obj.GetInput () - Set the Input of a
  filter.
* obj.SetBypass (int ) - Obsolete feature - do not use.
* obj.BypassOn () - Obsolete feature - do not use.
* obj.BypassOff () - Obsolete feature - do not use.
* int = obj.GetBypass () - Obsolete feature - do not use.
* obj.ThreadedExecute (vtkImageData inData, vtkImageData
  outData, int extent[6], int threadId) - If the subclass
  does not define an Execute method, then the task will be
  broken up, multiple threads will be spawned, and each
  thread will call this method. It is public so that the
  thread functions can call this method.
* obj.SetNumberOfThreads (int ) - Get/Set the number of
  threads to create when rendering
* int = obj.GetNumberOfThreadsMinValue () - Get/Set the
  number of threads to create when rendering
* int = obj.GetNumberOfThreadsMaxValue () - Get/Set the
  number of threads to create when rendering
* int = obj.GetNumberOfThreads () - Get/Set the number of
  threads to create when rendering
* obj.SetInputMemoryLimit (int )
* long = obj.GetInputMemoryLimit ()
* int = obj.SplitExtent (int splitExt[6], int startExt[6],
  int num, int total) - Putting this here until I merge
  graphics and imaging streaming.


* FreeMat_Documentation
* Visualization_Toolkit_Filtering_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

