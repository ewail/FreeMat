
 Usage

vtkDepthSortPolyData rearranges the order of cells so that
certain rendering operations (e.g., transparency or
Painter's algorithms) generate correct results. To use this
filter you must specify the direction vector along which to
sort the cells. You can do this by specifying a camera and/
or prop to define a view direction; or explicitly set a view
direction.
To create an instance of class vtkDepthSortPolyData, simply
invoke its constructor as follows

    obj = vtkDepthSortPolyData



 Methods

The class vtkDepthSortPolyData has several methods that can
be used. They are listed below. Note that the documentation
is translated automatically from the VTK sources, and may
not be completely intelligible. When in doubt, consult the
VTK website. In the methods listed below, obj is an instance
of the vtkDepthSortPolyData class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkDepthSortPolyData = obj.NewInstance ()
* vtkDepthSortPolyData = obj.SafeDownCast (vtkObject o)
* obj.SetDirection (int ) - Specify the sort method for the
  polygonal primitives. By default, the poly data is sorted
  from back to front.
* int = obj.GetDirection () - Specify the sort method for
  the polygonal primitives. By default, the poly data is
  sorted from back to front.
* obj.SetDirectionToFrontToBack () - Specify the sort method
  for the polygonal primitives. By default, the poly data is
  sorted from back to front.
* obj.SetDirectionToBackToFront () - Specify the sort method
  for the polygonal primitives. By default, the poly data is
  sorted from back to front.
* obj.SetDirectionToSpecifiedVector () - Specify the point
  to use when sorting. The fastest is to just take the first
  cell point. Other options are to take the bounding box
  center or the parametric center of the cell. By default,
  the first cell point is used.
* obj.SetDepthSortMode (int ) - Specify the point to use
  when sorting. The fastest is to just take the first cell
  point. Other options are to take the bounding box center
  or the parametric center of the cell. By default, the
  first cell point is used.
* int = obj.GetDepthSortMode () - Specify the point to use
  when sorting. The fastest is to just take the first cell
  point. Other options are to take the bounding box center
  or the parametric center of the cell. By default, the
  first cell point is used.
* obj.SetDepthSortModeToFirstPoint () - Specify the point to
  use when sorting. The fastest is to just take the first
  cell point. Other options are to take the bounding box
  center or the parametric center of the cell. By default,
  the first cell point is used.
* obj.SetDepthSortModeToBoundsCenter () - Specify the point
  to use when sorting. The fastest is to just take the first
  cell point. Other options are to take the bounding box
  center or the parametric center of the cell. By default,
  the first cell point is used.
* obj.SetDepthSortModeToParametricCenter () - Specify a
  camera that is used to define a view direction along which
  the cells are sorted. This ivar only has effect if the
  direction is set to front-to-back or back-to-front, and a
  camera is specified.
* obj.SetCamera (vtkCamera ) - Specify a camera that is used
  to define a view direction along which the cells are
  sorted. This ivar only has effect if the direction is set
  to front-to-back or back-to-front, and a camera is
  specified.
* vtkCamera = obj.GetCamera () - Specify a camera that is
  used to define a view direction along which the cells are
  sorted. This ivar only has effect if the direction is set
  to front-to-back or back-to-front, and a camera is
  specified.
* obj.SetProp3D (vtkProp3D ) - Specify a transformation
  matrix (via the vtkProp3D::GetMatrix() method) that is
  used to include the effects of transformation. This ivar
  only has effect if the direction is set to front-to-back
  or back-to-front, and a camera is specified. Specifying
  the vtkProp3D is optional.
* vtkProp3D = obj.GetProp3D () - Specify a transformation
  matrix (via the vtkProp3D::GetMatrix() method) that is
  used to include the effects of transformation. This ivar
  only has effect if the direction is set to front-to-back
  or back-to-front, and a camera is specified. Specifying
  the vtkProp3D is optional.
* obj.SetVector (double , double , double ) - Set/Get the
  sort direction. This ivar only has effect if the sort
  direction is set to SetDirectionToSpecifiedVector(). The
  sort occurs in the direction of the vector.
* obj.SetVector (double a[3]) - Set/Get the sort direction.
  This ivar only has effect if the sort direction is set to
  SetDirectionToSpecifiedVector(). The sort occurs in the
  direction of the vector.
* double = obj. GetVector () - Set/Get the sort direction.
  This ivar only has effect if the sort direction is set to
  SetDirectionToSpecifiedVector(). The sort occurs in the
  direction of the vector.
* obj.SetOrigin (double , double , double ) - Set/Get the
  sort origin. This ivar only has effect if the sort
  direction is set to SetDirectionToSpecifiedVector(). The
  sort occurs in the direction of the vector, with this
  point specifying the origin.
* obj.SetOrigin (double a[3]) - Set/Get the sort origin.
  This ivar only has effect if the sort direction is set to
  SetDirectionToSpecifiedVector(). The sort occurs in the
  direction of the vector, with this point specifying the
  origin.
* double = obj. GetOrigin () - Set/Get the sort origin. This
  ivar only has effect if the sort direction is set to
  SetDirectionToSpecifiedVector(). The sort occurs in the
  direction of the vector, with this point specifying the
  origin.
* obj.SetSortScalars (int ) - Set/Get a flag that controls
  the generation of scalar values corresponding to the sort
  order. If enabled, the output of this filter will include
  scalar values that range from 0 to (ncells-1), where 0 is
  closest to the sort direction.
* int = obj.GetSortScalars () - Set/Get a flag that controls
  the generation of scalar values corresponding to the sort
  order. If enabled, the output of this filter will include
  scalar values that range from 0 to (ncells-1), where 0 is
  closest to the sort direction.
* obj.SortScalarsOn () - Set/Get a flag that controls the
  generation of scalar values corresponding to the sort
  order. If enabled, the output of this filter will include
  scalar values that range from 0 to (ncells-1), where 0 is
  closest to the sort direction.
* obj.SortScalarsOff () - Set/Get a flag that controls the
  generation of scalar values corresponding to the sort
  order. If enabled, the output of this filter will include
  scalar values that range from 0 to (ncells-1), where 0 is
  closest to the sort direction.
* long = obj.GetMTime () - Return MTime also considering the
  dependent objects: the camera and/or the prop3D.


* FreeMat_Documentation
* Visualization_Toolkit_Hybrid_Classes
* Generated on Thu Jul 25 2013 17:18:32 for FreeMat by
  doxygen_ 1.8.1.1

