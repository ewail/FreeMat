
 Usage

vtkPlanes computes the implicit function and function
gradient for a set of planes. The planes must define a
convex space.
The function value is the closest first order distance of a
point to the convex region defined by the planes. The
function gradient is the plane normal at the function value.
Note that the normals must point outside of the convex
region. Thus, a negative function value means that a point
is inside the convex region.
There are several methods to define the set of planes. The
most general is to supply an instance of vtkPoints and an
instance of vtkDataArray. (The points define a point on the
plane, and the normals corresponding plane normals.) Two
other specialized ways are to 1) supply six planes defining
the view frustrum of a camera, and 2) provide a bounding
box.
To create an instance of class vtkPlanes, simply invoke its
constructor as follows

    obj = vtkPlanes



 Methods

The class vtkPlanes has several methods that can be used.
They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkPlanes class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkPlanes = obj.NewInstance ()
* vtkPlanes = obj.SafeDownCast (vtkObject o)
* double = obj.EvaluateFunction (double x[3])
* double = obj.EvaluateFunction (double x, double y, double
  z)
* obj.EvaluateGradient (double x[3], double n[3])
* obj.SetPoints (vtkPoints ) - Specify a list of points
  defining points through which the planes pass.
* vtkPoints = obj.GetPoints () - Specify a list of points
  defining points through which the planes pass.
* obj.SetNormals (vtkDataArray normals) - Specify a list of
  normal vectors for the planes. There is a one-to-one
  correspondence between plane points and plane normals.
* vtkDataArray = obj.GetNormals () - Specify a list of
  normal vectors for the planes. There is a one-to-one
  correspondence between plane points and plane normals.
* obj.SetFrustumPlanes (double planes[24]) - An alternative
  method to specify six planes defined by the camera view
  frustrum. See vtkCamera::GetFrustumPlanes() documentation.
* obj.SetBounds (double bounds[6]) - An alternative method
  to specify six planes defined by a bounding box. The
  bounding box is a six-vector defined as
  (xmin,xmax,ymin,ymax,zmin,zmax). It defines six planes
  orthogonal to the x-y-z coordinate axes.
* obj.SetBounds (double xmin, double xmax, double ymin,
  double ymax, double zmin, double zmax) - An alternative
  method to specify six planes defined by a bounding box.
  The bounding box is a six-vector defined as
  (xmin,xmax,ymin,ymax,zmin,zmax). It defines six planes
  orthogonal to the x-y-z coordinate axes.
* int = obj.GetNumberOfPlanes () - Return the number of
  planes in the set of planes.
* vtkPlane = obj.GetPlane (int i) - Create and return a
  pointer to a vtkPlane object at the ith position. Asking
  for a plane outside the allowable range returns NULL. This
  method always returns the same object. Use GetPlane(int i,
  vtkPlane *plane) instead
* obj.GetPlane (int i, vtkPlane plane) - Create and return a
  pointer to a vtkPlane object at the ith position. Asking
  for a plane outside the allowable range returns NULL. This
  method always returns the same object. Use GetPlane(int i,
  vtkPlane *plane) instead


* FreeMat_Documentation
* Visualization_Toolkit_Common_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

