
 Usage

vtkImageAppend takes the components from multiple inputs and
merges them into one output. The output images are append
along the "AppendAxis". Except for the append axis, all
inputs must have the same extent. All inputs must have the
same number of scalar components. A future extension might
be to pad or clip inputs to have the same extent. The output
has the same origin and spacing as the first input. The
origin and spacing of all other inputs are ignored. All
inputs must have the same scalar type.
To create an instance of class vtkImageAppend, simply invoke
its constructor as follows

    obj = vtkImageAppend



 Methods

The class vtkImageAppend has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkImageAppend class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkImageAppend = obj.NewInstance ()
* vtkImageAppend = obj.SafeDownCast (vtkObject o)
* obj.ReplaceNthInputConnection (int idx, vtkAlgorithmOutput
  input) - Replace one of the input connections with a new
  input. You can only replace input connections that you
  previously created with AddInputConnection() or, in the
  case of the first input, with SetInputConnection().
* obj.SetInput (int num, vtkDataObject input) - Set an Input
  of this filter. This method is only for support of old-
  style pipeline connections. When writing new code you
  should use SetInputConnection(), AddInputConnection(), and
  ReplaceNthInputConnection() instead.
* obj.SetInput (vtkDataObject input) - Set an Input of this
  filter. This method is only for support of old-style
  pipeline connections. When writing new code you should use
  SetInputConnection(), AddInputConnection(), and
  ReplaceNthInputConnection() instead.
* vtkDataObject = obj.GetInput (int num) - Get one input to
  this filter. This method is only for support of old-style
  pipeline connections. When writing new code you should use
  vtkAlgorithm::GetInputConnection(0, num).
* vtkDataObject = obj.GetInput () - Get one input to this
  filter. This method is only for support of old-style
  pipeline connections. When writing new code you should use
  vtkAlgorithm::GetInputConnection(0, num).
* int = obj.GetNumberOfInputs () - Get the number of inputs
  to this filter. This method is only for support of old-
  style pipeline connections. When writing new code you
  should use vtkAlgorithm::GetNumberOfInputConnections(0).
* obj.SetAppendAxis (int ) - This axis is expanded to hold
  the multiple images. The default AppendAxis is the X axis.
  If you want to create a volue from a series of XY images,
  then you should set the AppendAxis to 2 (Z axis).
* int = obj.GetAppendAxis () - This axis is expanded to hold
  the multiple images. The default AppendAxis is the X axis.
  If you want to create a volue from a series of XY images,
  then you should set the AppendAxis to 2 (Z axis).
* obj.SetPreserveExtents (int ) - By default
  "PreserveExtents" is off and the append axis is used. When
  "PreseveExtents" is on, the extent of the inputs is used
  to place the image in the output. The whole extent of the
  output is the union of the input whole extents. Any
  portion of the output not covered by the inputs is set to
  zero. The origin and spacing is taken from the first
  input.
* int = obj.GetPreserveExtents () - By default
  "PreserveExtents" is off and the append axis is used. When
  "PreseveExtents" is on, the extent of the inputs is used
  to place the image in the output. The whole extent of the
  output is the union of the input whole extents. Any
  portion of the output not covered by the inputs is set to
  zero. The origin and spacing is taken from the first
  input.
* obj.PreserveExtentsOn () - By default "PreserveExtents" is
  off and the append axis is used. When "PreseveExtents" is
  on, the extent of the inputs is used to place the image in
  the output. The whole extent of the output is the union of
  the input whole extents. Any portion of the output not
  covered by the inputs is set to zero. The origin and
  spacing is taken from the first input.
* obj.PreserveExtentsOff () - By default "PreserveExtents"
  is off and the append axis is used. When "PreseveExtents"
  is on, the extent of the inputs is used to place the image
  in the output. The whole extent of the output is the union
  of the input whole extents. Any portion of the output not
  covered by the inputs is set to zero. The origin and
  spacing is taken from the first input.


* FreeMat_Documentation
* Visualization_Toolkit_Imaging_Classes
* Generated on Thu Jul 25 2013 17:18:33 for FreeMat by
  doxygen_ 1.8.1.1

