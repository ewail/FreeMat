
 Usage

vtkEncodedGradientShader computes shading tables for encoded
normals that indicates the amount of diffuse and specular
illumination that is received from all light sources at a
surface location with that normal. For diffuse illumination
this is accurate, but for specular illumination it is
approximate for perspective projections since the center
view direction is always used as the view direction. Since
the shading table is dependent on the volume (for the
transformation that must be applied to the normals to put
them into world coordinates) there is a shading table per
volume. This is necessary because multiple volumes can share
a volume mapper.
To create an instance of class vtkEncodedGradientShader,
simply invoke its constructor as follows

    obj = vtkEncodedGradientShader



 Methods

The class vtkEncodedGradientShader has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkEncodedGradientShader class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkEncodedGradientShader = obj.NewInstance ()
* vtkEncodedGradientShader = obj.SafeDownCast (vtkObject o)
* obj.SetZeroNormalDiffuseIntensity (float ) - Set / Get the
  intensity diffuse / specular light used for the zero
  normals.
* float = obj.GetZeroNormalDiffuseIntensityMinValue () - Set
  / Get the intensity diffuse / specular light used for the
  zero normals.
* float = obj.GetZeroNormalDiffuseIntensityMaxValue () - Set
  / Get the intensity diffuse / specular light used for the
  zero normals.
* float = obj.GetZeroNormalDiffuseIntensity () - Set / Get
  the intensity diffuse / specular light used for the zero
  normals.
* obj.SetZeroNormalSpecularIntensity (float ) - Set / Get
  the intensity diffuse / specular light used for the zero
  normals.
* float = obj.GetZeroNormalSpecularIntensityMinValue () -
  Set / Get the intensity diffuse / specular light used for
  the zero normals.
* float = obj.GetZeroNormalSpecularIntensityMaxValue () -
  Set / Get the intensity diffuse / specular light used for
  the zero normals.
* float = obj.GetZeroNormalSpecularIntensity () - Set / Get
  the intensity diffuse / specular light used for the zero
  normals.
* obj.UpdateShadingTable (vtkRenderer ren, vtkVolume vol,
  vtkEncodedGradientEstimator gradest) - Cause the shading
  table to be updated
* obj.SetActiveComponent (int ) - Set the active component
  for shading. This component's ambient / diffuse / specular
  / specular power values will be used to create the shading
  table. The default is 1.0
* int = obj.GetActiveComponentMinValue () - Set the active
  component for shading. This component's ambient / diffuse
  / specular / specular power values will be used to create
  the shading table. The default is 1.0
* int = obj.GetActiveComponentMaxValue () - Set the active
  component for shading. This component's ambient / diffuse
  / specular / specular power values will be used to create
  the shading table. The default is 1.0
* int = obj.GetActiveComponent () - Set the active component
  for shading. This component's ambient / diffuse / specular
  / specular power values will be used to create the shading
  table. The default is 1.0


* FreeMat_Documentation
* Visualization_Toolkit_Volume_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

