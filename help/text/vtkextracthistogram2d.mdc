
 Usage

This class computes a 2D histogram between two columns of an
input vtkTable. Just as with a 1D histogram, a 2D histogram
breaks up the input domain into bins, and each pair of
values (row in the table) fits into a single bin and
increments a row counter for that bin.
To use this class, set the input with a table and call
AddColumnPair(nameX,nameY), where nameX and nameY are the
names of the two columns to be used.
In addition to the number of bins (in X and Y), the domain
of the histogram can be customized by toggling the
UseCustomHistogramExtents flag and setting the
CustomHistogramExtents variable to the desired value.
To create an instance of class vtkExtractHistogram2D, simply
invoke its constructor as follows

    obj = vtkExtractHistogram2D



 Methods

The class vtkExtractHistogram2D has several methods that can
be used. They are listed below. Note that the documentation
is translated automatically from the VTK sources, and may
not be completely intelligible. When in doubt, consult the
VTK website. In the methods listed below, obj is an instance
of the vtkExtractHistogram2D class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkExtractHistogram2D = obj.NewInstance ()
* vtkExtractHistogram2D = obj.SafeDownCast (vtkObject o)
* obj.SetNumberOfBins (int , int ) - Set/get the number of
  bins to be used per dimension (x,y)
* obj.SetNumberOfBins (int a[2]) - Set/get the number of
  bins to be used per dimension (x,y)
* int = obj. GetNumberOfBins () - Set/get the number of bins
  to be used per dimension (x,y)
* obj.SetComponentsToProcess (int , int ) - Set/get the
  components of the arrays in the two input columns to be
  used during histogram computation. Defaults to component
  0.
* obj.SetComponentsToProcess (int a[2]) - Set/get the
  components of the arrays in the two input columns to be
  used during histogram computation. Defaults to component
  0.
* int = obj. GetComponentsToProcess () - Set/get the
  components of the arrays in the two input columns to be
  used during histogram computation. Defaults to component
  0.
* obj.SetCustomHistogramExtents (double , double , double ,
  double ) - Set/get a custom domain for histogram
  computation. UseCustomHistogramExtents must be called for
  these to actually be used.
* obj.SetCustomHistogramExtents (double a[4]) - Set/get a
  custom domain for histogram computation.
  UseCustomHistogramExtents must be called for these to
  actually be used.
* double = obj. GetCustomHistogramExtents () - Set/get a
  custom domain for histogram computation.
  UseCustomHistogramExtents must be called for these to
  actually be used.
* obj.SetUseCustomHistogramExtents (int ) - Use the extents
  in CustomHistogramExtents when computing the histogram,
  rather than the simple range of the input columns.
* int = obj.GetUseCustomHistogramExtents () - Use the
  extents in CustomHistogramExtents when computing the
  histogram, rather than the simple range of the input
  columns.
* obj.UseCustomHistogramExtentsOn () - Use the extents in
  CustomHistogramExtents when computing the histogram,
  rather than the simple range of the input columns.
* obj.UseCustomHistogramExtentsOff () - Use the extents in
  CustomHistogramExtents when computing the histogram,
  rather than the simple range of the input columns.
* obj.SetScalarType (int ) - Control the scalar type of the
  output histogram. If the input is relatively small, you
  can save space by using a smaller data type. Defaults to
  unsigned integer.
* obj.SetScalarTypeToUnsignedInt () - Control the scalar
  type of the output histogram. If the input is relatively
  small, you can save space by using a smaller data type.
  Defaults to unsigned integer.
* obj.SetScalarTypeToUnsignedLong () - Control the scalar
  type of the output histogram. If the input is relatively
  small, you can save space by using a smaller data type.
  Defaults to unsigned integer.
* obj.SetScalarTypeToUnsignedShort () - Control the scalar
  type of the output histogram. If the input is relatively
  small, you can save space by using a smaller data type.
  Defaults to unsigned integer.
* obj.SetScalarTypeToUnsignedChar () - Control the scalar
  type of the output histogram. If the input is relatively
  small, you can save space by using a smaller data type.
  Defaults to unsigned integer.
* obj.SetScalarTypeToFloat () - Control the scalar type of
  the output histogram. If the input is relatively small,
  you can save space by using a smaller data type. Defaults
  to unsigned integer.
* obj.SetScalarTypeToDouble () - Control the scalar type of
  the output histogram. If the input is relatively small,
  you can save space by using a smaller data type. Defaults
  to unsigned integer.
* int = obj.GetScalarType () - Control the scalar type of
  the output histogram. If the input is relatively small,
  you can save space by using a smaller data type. Defaults
  to unsigned integer.
* double = obj.GetMaximumBinCount () - Access the count of
  the histogram bin containing the largest number of input
  rows.
* int = obj.GetBinRange (vtkIdType binX, vtkIdType binY,
  double range[4]) - Compute the range of the bin located at
  position (binX,binY) in the 2D histogram.
* int = obj.GetBinRange (vtkIdType bin, double range[4]) -
  Get the range of the of the bin located at 1D position
  index bin in the 2D histogram array.
* obj.GetBinWidth (double bw[2]) - Get the width of all of
  the bins. Also stored in the spacing ivar of the histogram
  image output.
* vtkImageData = obj.GetOutputHistogramImage () - Gets the
  data object at the histogram image output port and casts
  it to a vtkImageData.
* obj.SetSwapColumns (int )
* int = obj.GetSwapColumns ()
* obj.SwapColumnsOn ()
* obj.SwapColumnsOff ()
* obj.SetRowMask (vtkDataArray ) - Get/Set an optional mask
  that can ignore rows of the table
* vtkDataArray = obj.GetRowMask () - Get/Set an optional
  mask that can ignore rows of the table
* obj.Aggregate (vtkDataObjectCollection , vtkDataObject ) -
  Given a collection of models, calculate aggregate model.
  Not used.


* FreeMat_Documentation
* Visualization_Toolkit_Infovis_Classes
* Generated on Thu Jul 25 2013 17:18:33 for FreeMat by
  doxygen_ 1.8.1.1

