
 Usage

vtkAbstractVolumeMapper is the abstract definition of a
volume mapper. Specific subclasses deal with different
specific types of data input
To create an instance of class vtkAbstractVolumeMapper,
simply invoke its constructor as follows

    obj = vtkAbstractVolumeMapper



 Methods

The class vtkAbstractVolumeMapper has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkAbstractVolumeMapper class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkAbstractVolumeMapper = obj.NewInstance ()
* vtkAbstractVolumeMapper = obj.SafeDownCast (vtkObject o)
* obj.SetInput (vtkDataSet ) - Set/Get the input data
* vtkDataSet = obj.GetDataSetInput () - Set/Get the input
  data
* vtkDataObject = obj.GetDataObjectInput () - Set/Get the
  input data
* double = obj.GetBounds () - Return bounding box (array of
  six doubles) of data expressed as (xmin,xmax, ymin,ymax,
  zmin,zmax).
* obj.GetBounds (double bounds[6]) - Return bounding box
  (array of six doubles) of data expressed as (xmin,xmax,
  ymin,ymax, zmin,zmax).
* obj.SetScalarMode (int ) - Control how the mapper works
  with scalar point data and cell attribute data. By default
  (ScalarModeToDefault), the mapper will use point data, and
  if no point data is available, then cell data is used.
  Alternatively you can explicitly set the mapper to use
  point data (ScalarModeToUsePointData) or cell data
  (ScalarModeToUseCellData). You can also choose to get the
  scalars from an array in point field data
  (ScalarModeToUsePointFieldData) or cell field data
  (ScalarModeToUseCellFieldData). If scalars are coming from
  a field data array, you must call SelectScalarArray.
* int = obj.GetScalarMode () - Control how the mapper works
  with scalar point data and cell attribute data. By default
  (ScalarModeToDefault), the mapper will use point data, and
  if no point data is available, then cell data is used.
  Alternatively you can explicitly set the mapper to use
  point data (ScalarModeToUsePointData) or cell data
  (ScalarModeToUseCellData). You can also choose to get the
  scalars from an array in point field data
  (ScalarModeToUsePointFieldData) or cell field data
  (ScalarModeToUseCellFieldData). If scalars are coming from
  a field data array, you must call SelectScalarArray.
* obj.SetScalarModeToDefault () - Control how the mapper
  works with scalar point data and cell attribute data. By
  default (ScalarModeToDefault), the mapper will use point
  data, and if no point data is available, then cell data is
  used. Alternatively you can explicitly set the mapper to
  use point data (ScalarModeToUsePointData) or cell data
  (ScalarModeToUseCellData). You can also choose to get the
  scalars from an array in point field data
  (ScalarModeToUsePointFieldData) or cell field data
  (ScalarModeToUseCellFieldData). If scalars are coming from
  a field data array, you must call SelectScalarArray.
* obj.SetScalarModeToUsePointData () - Control how the
  mapper works with scalar point data and cell attribute
  data. By default (ScalarModeToDefault), the mapper will
  use point data, and if no point data is available, then
  cell data is used. Alternatively you can explicitly set
  the mapper to use point data (ScalarModeToUsePointData) or
  cell data (ScalarModeToUseCellData). You can also choose
  to get the scalars from an array in point field data
  (ScalarModeToUsePointFieldData) or cell field data
  (ScalarModeToUseCellFieldData). If scalars are coming from
  a field data array, you must call SelectScalarArray.
* obj.SetScalarModeToUseCellData () - Control how the mapper
  works with scalar point data and cell attribute data. By
  default (ScalarModeToDefault), the mapper will use point
  data, and if no point data is available, then cell data is
  used. Alternatively you can explicitly set the mapper to
  use point data (ScalarModeToUsePointData) or cell data
  (ScalarModeToUseCellData). You can also choose to get the
  scalars from an array in point field data
  (ScalarModeToUsePointFieldData) or cell field data
  (ScalarModeToUseCellFieldData). If scalars are coming from
  a field data array, you must call SelectScalarArray.
* obj.SetScalarModeToUsePointFieldData () - Control how the
  mapper works with scalar point data and cell attribute
  data. By default (ScalarModeToDefault), the mapper will
  use point data, and if no point data is available, then
  cell data is used. Alternatively you can explicitly set
  the mapper to use point data (ScalarModeToUsePointData) or
  cell data (ScalarModeToUseCellData). You can also choose
  to get the scalars from an array in point field data
  (ScalarModeToUsePointFieldData) or cell field data
  (ScalarModeToUseCellFieldData). If scalars are coming from
  a field data array, you must call SelectScalarArray.
* obj.SetScalarModeToUseCellFieldData () - Control how the
  mapper works with scalar point data and cell attribute
  data. By default (ScalarModeToDefault), the mapper will
  use point data, and if no point data is available, then
  cell data is used. Alternatively you can explicitly set
  the mapper to use point data (ScalarModeToUsePointData) or
  cell data (ScalarModeToUseCellData). You can also choose
  to get the scalars from an array in point field data
  (ScalarModeToUsePointFieldData) or cell field data
  (ScalarModeToUseCellFieldData). If scalars are coming from
  a field data array, you must call SelectScalarArray.
* obj.SelectScalarArray (int arrayNum) - When ScalarMode is
  set to UsePointFieldData or UseCellFieldData, you can
  specify which scalar array to use during rendering. The
  transfer function in the vtkVolumeProperty (attached to
  the calling vtkVolume) will decide how to convert vectors
  to colors.
* obj.SelectScalarArray (string arrayName) - When ScalarMode
  is set to UsePointFieldData or UseCellFieldData, you can
  specify which scalar array to use during rendering. The
  transfer function in the vtkVolumeProperty (attached to
  the calling vtkVolume) will decide how to convert vectors
  to colors.
* string = obj.GetArrayName () - Get the array name or
  number and component to use for rendering.
* int = obj.GetArrayId () - Get the array name or number and
  component to use for rendering.
* int = obj.GetArrayAccessMode () - Return the method for
  obtaining scalar data.
* string = obj.GetScalarModeAsString () - Return the method
  for obtaining scalar data.


* FreeMat_Documentation
* Visualization_Toolkit_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:34 for FreeMat by
  doxygen_ 1.8.1.1

