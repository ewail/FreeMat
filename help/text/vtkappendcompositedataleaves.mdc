
 Usage

vtkAppendCompositeDataLeaves is a filter that takes input
composite datasets with the same structure: (1) the same
number of entries and &ndash; if any children are composites
&ndash; the same constraint holds from them; and (2) the
same type of dataset at each position. It then creates an
output dataset with the same structure whose leaves contain
all the cells from the datasets at the corresponding leaves
of the input datasets.
Currently, only input polydata and unstructured grids are
handled; other types of leaf datasets will be ignored and
their positions in the output dataset will be NULL pointers.
Point attributes (i.e., scalars, vectors, normals, field
data, etc.) are extracted and appended only if all datasets
have the point attributes available. (For example, if one
dataset has scalars but another does not, scalars will not
be appended.)
To create an instance of class vtkAppendCompositeDataLeaves,
simply invoke its constructor as follows

    obj = vtkAppendCompositeDataLeaves



 Methods

The class vtkAppendCompositeDataLeaves has several methods
that can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkAppendCompositeDataLeaves
class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkAppendCompositeDataLeaves = obj.NewInstance ()
* vtkAppendCompositeDataLeaves = obj.SafeDownCast (vtkObject
  o)
* obj.RemoveInput (vtkDataSet in) - Remove a dataset from
  the list of data to append.
* obj.SetAppendFieldData (int ) - Set/get whether the field
  data of each dataset in the composite dataset is copied to
  the output. If AppendFieldData is non-zero, then field
  data arrays from all the inputs are added to the output.
  If there are duplicates, the array on the first input
  encountered is taken.
* int = obj.GetAppendFieldData () - Set/get whether the
  field data of each dataset in the composite dataset is
  copied to the output. If AppendFieldData is non-zero, then
  field data arrays from all the inputs are added to the
  output. If there are duplicates, the array on the first
  input encountered is taken.
* obj.AppendFieldDataOn () - Set/get whether the field data
  of each dataset in the composite dataset is copied to the
  output. If AppendFieldData is non-zero, then field data
  arrays from all the inputs are added to the output. If
  there are duplicates, the array on the first input
  encountered is taken.
* obj.AppendFieldDataOff () - Set/get whether the field data
  of each dataset in the composite dataset is copied to the
  output. If AppendFieldData is non-zero, then field data
  arrays from all the inputs are added to the output. If
  there are duplicates, the array on the first input
  encountered is taken.


* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:31 for FreeMat by
  doxygen_ 1.8.1.1

