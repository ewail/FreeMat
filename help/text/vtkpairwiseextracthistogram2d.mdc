
 Usage

This class computes a 2D histogram between all adjacent
pairs of columns of an input vtkTable. Internally it creates
multiple vtkExtractHistogram2D instances (one for each pair
of adjacent table columns). It also manages updating
histogram computations intelligently, only recomputing those
histograms for whom a relevant property has been altered.
Note that there are two different outputs from this filter.
One is a table for which each column contains a flattened 2D
histogram array. The other is a vtkMultiBlockDataSet for
which each block is a vtkImageData representation of the 2D
histogram.
To create an instance of class
vtkPairwiseExtractHistogram2D, simply invoke its constructor
as follows

    obj = vtkPairwiseExtractHistogram2D



 Methods

The class vtkPairwiseExtractHistogram2D has several methods
that can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkPairwiseExtractHistogram2D
class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkPairwiseExtractHistogram2D = obj.NewInstance ()
* vtkPairwiseExtractHistogram2D = obj.SafeDownCast
  (vtkObject o)
* obj.SetNumberOfBins (int , int ) - Set/get the bin
  dimensions of the histograms to compute
* obj.SetNumberOfBins (int a[2]) - Set/get the bin
  dimensions of the histograms to compute
* int = obj. GetNumberOfBins () - Set/get the bin dimensions
  of the histograms to compute
* obj.SetCustomColumnRangeIndex (int ) - Strange method for
  setting an index to be used for setting custom column
  range. This was (probably) necessary to get this class to
  interact with the ParaView client/server message passing
  interface.
* obj.SetCustomColumnRangeByIndex (double , double ) -
  Strange method for setting an index to be used for setting
  custom column range. This was (probably) necessary to get
  this class to interact with the ParaView client/server
  message passing interface.
* obj.SetCustomColumnRange (int col, double range[2]) - More
  standard way to set the custom range for a particular
  column. This makes sure that only the affected histograms
  know that they need to be updated.
* obj.SetCustomColumnRange (int col, double rmin, double
  rmax) - More standard way to set the custom range for a
  particular column. This makes sure that only the affected
  histograms know that they need to be updated.
* obj.SetScalarType (int ) - Set the scalar type for each of
  the computed histograms.
* obj.SetScalarTypeToUnsignedInt () - Set the scalar type
  for each of the computed histograms.
* obj.SetScalarTypeToUnsignedLong () - Set the scalar type
  for each of the computed histograms.
* obj.SetScalarTypeToUnsignedShort () - Set the scalar type
  for each of the computed histograms.
* obj.SetScalarTypeToUnsignedChar () - Set the scalar type
  for each of the computed histograms.
* int = obj.GetScalarType () - Set the scalar type for each
  of the computed histograms.
* double = obj.GetMaximumBinCount (int idx) - Get the
  maximum bin count for a single histogram
* double = obj.GetMaximumBinCount () - Get the maximum bin
  count over all histograms
* int = obj.GetBinRange (int idx, vtkIdType binX, vtkIdType
  binY, double range[4]) - Compute the range of the bin
  located at position (binX,binY) in the 2D histogram at
  idx.
* int = obj.GetBinRange (int idx, vtkIdType bin, double
  range[4]) - Get the range of the of the bin located at 1D
  position index bin in the 2D histogram array at idx.
* obj.GetBinWidth (int idx, double bw[2]) - Get the width of
  all of the bins. Also stored in the spacing ivar of the
  histogram image output at idx.
* vtkImageData = obj.GetOutputHistogramImage (int idx) - Get
  the vtkImageData output of the idx'th histogram filter
* vtkExtractHistogram2D = obj.GetHistogramFilter (int idx) -
  Get a pointer to the idx'th histogram filter.
* obj.Aggregate (vtkDataObjectCollection , vtkDataObject ) -
  Given a collection of models, calculate aggregate model.
  Not used


* FreeMat_Documentation
* Visualization_Toolkit_Infovis_Classes
* Generated on Thu Jul 25 2013 17:18:33 for FreeMat by
  doxygen_ 1.8.1.1

