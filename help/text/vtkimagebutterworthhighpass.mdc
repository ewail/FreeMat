
 Usage

This filter only works on an image after it has been
converted to frequency domain by a vtkImageFFT filter. A
vtkImageRFFT filter can be used to convert the output back
into the spatial domain. vtkImageButterworthHighPass the
frequency components around 0 are attenuated. Input and
output are in doubles, with two components (complex
numbers). out(i, j) = 1 / (1 + pow(CutOff/Freq(i,j),
2*Order));
To create an instance of class vtkImageButterworthHighPass,
simply invoke its constructor as follows

    obj = vtkImageButterworthHighPass



 Methods

The class vtkImageButterworthHighPass has several methods
that can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkImageButterworthHighPass class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkImageButterworthHighPass = obj.NewInstance ()
* vtkImageButterworthHighPass = obj.SafeDownCast (vtkObject
  o)
* obj.SetCutOff (double , double , double ) - Set/Get the
  cutoff frequency for each axis. The values are specified
  in the order X, Y, Z, Time. Units: Cycles per world unit
  (as defined by the data spacing).
* obj.SetCutOff (double a[3]) - Set/Get the cutoff frequency
  for each axis. The values are specified in the order X, Y,
  Z, Time. Units: Cycles per world unit (as defined by the
  data spacing).
* obj.SetCutOff (double v) - Set/Get the cutoff frequency
  for each axis. The values are specified in the order X, Y,
  Z, Time. Units: Cycles per world unit (as defined by the
  data spacing).
* obj.SetXCutOff (double v) - Set/Get the cutoff frequency
  for each axis. The values are specified in the order X, Y,
  Z, Time. Units: Cycles per world unit (as defined by the
  data spacing).
* obj.SetYCutOff (double v) - Set/Get the cutoff frequency
  for each axis. The values are specified in the order X, Y,
  Z, Time. Units: Cycles per world unit (as defined by the
  data spacing).
* obj.SetZCutOff (double v) - Set/Get the cutoff frequency
  for each axis. The values are specified in the order X, Y,
  Z, Time. Units: Cycles per world unit (as defined by the
  data spacing).
* double = obj. GetCutOff () - Set/Get the cutoff frequency
  for each axis. The values are specified in the order X, Y,
  Z, Time. Units: Cycles per world unit (as defined by the
  data spacing).
* double = obj.GetXCutOff () - Set/Get the cutoff frequency
  for each axis. The values are specified in the order X, Y,
  Z, Time. Units: Cycles per world unit (as defined by the
  data spacing).
* double = obj.GetYCutOff () - Set/Get the cutoff frequency
  for each axis. The values are specified in the order X, Y,
  Z, Time. Units: Cycles per world unit (as defined by the
  data spacing).
* double = obj.GetZCutOff () - The order determines
  sharpness of the cutoff curve.
* obj.SetOrder (int ) - The order determines sharpness of
  the cutoff curve.
* int = obj.GetOrder () - The order determines sharpness of
  the cutoff curve.


* FreeMat_Documentation
* Visualization_Toolkit_Imaging_Classes
* Generated on Thu Jul 25 2013 17:18:33 for FreeMat by
  doxygen_ 1.8.1.1

