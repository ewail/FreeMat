
 Usage

This class provides support for interactively manipulating
the position, size, and orientation of a scalar bar. It
listens to Left mouse events and mouse movement. It also
listens to Right mouse events and notifies any observers of
Right mouse events on this object when they occur. It will
change the cursor shape based on its location. If the cursor
is over an edge of the scalar bar it will change the cursor
shape to a resize edge shape. If the position of a scalar
bar is moved to be close to the center of one of the four
edges of the viewport, then the scalar bar will change its
orientation to align with that edge. This orientation is
sticky in that it will stay that orientation until the
position is moved close to another edge.
To create an instance of class vtkScalarBarWidget, simply
invoke its constructor as follows

    obj = vtkScalarBarWidget



 Methods

The class vtkScalarBarWidget has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkScalarBarWidget class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkScalarBarWidget = obj.NewInstance ()
* vtkScalarBarWidget = obj.SafeDownCast (vtkObject o)
* obj.SetRepresentation (vtkScalarBarRepresentation rep) -
  Specify an instance of vtkWidgetRepresentation used to
  represent this widget in the scene. Note that the
  representation is a subclass of vtkProp so it can be added
  to the renderer independent of the widget.
* vtkScalarBarRepresentation =
  obj.GetScalarBarRepresentation () - Get the ScalarBar used
  by this Widget. One is created automatically.
* obj.SetScalarBarActor (vtkScalarBarActor actor) - Get the
  ScalarBar used by this Widget. One is created
  automatically.
* vtkScalarBarActor = obj.GetScalarBarActor () - Get the
  ScalarBar used by this Widget. One is created
  automatically.
* obj.SetRepositionable (int ) - Can the widget be moved. On
  by default. If off, the widget cannot be moved around.
  TODO: This functionality should probably be moved to the
  superclass.
* int = obj.GetRepositionable () - Can the widget be moved.
  On by default. If off, the widget cannot be moved around.
  TODO: This functionality should probably be moved to the
  superclass.
* obj.RepositionableOn () - Can the widget be moved. On by
  default. If off, the widget cannot be moved around.
  TODO: This functionality should probably be moved to the
  superclass.
* obj.RepositionableOff () - Can the widget be moved. On by
  default. If off, the widget cannot be moved around.
  TODO: This functionality should probably be moved to the
  superclass.
* obj.CreateDefaultRepresentation () - Create the default
  widget representation if one is not set.


* FreeMat_Documentation
* Visualization_Toolkit_Widget_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

