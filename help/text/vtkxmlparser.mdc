
 Usage

vtkXMLParser reads a stream and parses XML element tags and
corresponding attributes. Each element begin tag and its
attributes are sent to the StartElement method. Each element
end tag is sent to the EndElement method. Subclasses should
replace these methods to actually use the tags. .SECTION
ToDo: Add commands for parsing in Tcl.
To create an instance of class vtkXMLParser, simply invoke
its constructor as follows

    obj = vtkXMLParser



 Methods

The class vtkXMLParser has several methods that can be used.
They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkXMLParser class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkXMLParser = obj.NewInstance ()
* vtkXMLParser = obj.SafeDownCast (vtkObject o)
* long = obj.TellG () - Used by subclasses and their
  supporting classes. These methods wrap around the tellg
  and seekg methods of the input stream to work-around
  stream bugs on various platforms.
* obj.SeekG (long position) - Used by subclasses and their
  supporting classes. These methods wrap around the tellg
  and seekg methods of the input stream to work-around
  stream bugs on various platforms.
* int = obj.Parse () - Parse the XML input.
* int = obj.Parse (string inputString) - Parse the XML
  message. If length is specified, parse only the first
  "length" characters
* int = obj.Parse (string inputString, int length) - Parse
  the XML message. If length is specified, parse only the
  first "length" characters
* int = obj.InitializeParser () - When parsing fragments of
  XML or streaming XML, use the following three methods.
  InitializeParser method initialize parser but does not
  perform any actual parsing. ParseChunk parses framgent of
  XML. This has to match to what was already parsed.
  CleanupParser finishes parsing. If there were errors,
  CleanupParser will report them.
* int = obj.ParseChunk (string inputString, int length) -
  When parsing fragments of XML or streaming XML, use the
  following three methods. InitializeParser method
  initialize parser but does not perform any actual parsing.
  ParseChunk parses framgent of XML. This has to match to
  what was already parsed. CleanupParser finishes parsing.
  If there were errors, CleanupParser will report them.
* int = obj.CleanupParser () - When parsing fragments of XML
  or streaming XML, use the following three methods.
  InitializeParser method initialize parser but does not
  perform any actual parsing. ParseChunk parses framgent of
  XML. This has to match to what was already parsed.
  CleanupParser finishes parsing. If there were errors,
  CleanupParser will report them.
* obj.SetFileName (string ) - Set and get file name.
* string = obj.GetFileName () - Set and get file name.
* obj.SetIgnoreCharacterData (int ) - If this is off (the
  default), CharacterDataHandler will be called to process
  text within XML Elements. If this is on, the text will be
  ignored.
* int = obj.GetIgnoreCharacterData () - If this is off (the
  default), CharacterDataHandler will be called to process
  text within XML Elements. If this is on, the text will be
  ignored.
* obj.SetEncoding (string ) - Set and get the encoding the
  parser should expect (NULL defaults to Expat's own default
  encoder, i.e UTF-8). This should be set before parsing
  (i.e. a call to Parse()) or even initializing the parser
  (i.e. a call to InitializeParser())
* string = obj.GetEncoding () - Set and get the encoding the
  parser should expect (NULL defaults to Expat's own default
  encoder, i.e UTF-8). This should be set before parsing
  (i.e. a call to Parse()) or even initializing the parser
  (i.e. a call to InitializeParser())


* FreeMat_Documentation
* Visualization_Toolkit_IO_Classes
* Generated on Thu Jul 25 2013 17:18:34 for FreeMat by
  doxygen_ 1.8.1.1

