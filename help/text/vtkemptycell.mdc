
 Usage

vtkEmptyCell is a concrete implementation of vtkCell. It is
used during processing to represented a deleted element.
To create an instance of class vtkEmptyCell, simply invoke
its constructor as follows

    obj = vtkEmptyCell



 Methods

The class vtkEmptyCell has several methods that can be used.
They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkEmptyCell class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkEmptyCell = obj.NewInstance ()
* vtkEmptyCell = obj.SafeDownCast (vtkObject o)
* int = obj.GetCellType () - See the vtkCell API for
  descriptions of these methods.
* int = obj.GetCellDimension () - See the vtkCell API for
  descriptions of these methods.
* int = obj.GetNumberOfEdges () - See the vtkCell API for
  descriptions of these methods.
* int = obj.GetNumberOfFaces () - See the vtkCell API for
  descriptions of these methods.
* vtkCell = obj.GetEdge (int ) - See the vtkCell API for
  descriptions of these methods.
* vtkCell = obj.GetFace (int ) - See the vtkCell API for
  descriptions of these methods.
* int = obj.CellBoundary (int subId, double pcoords[3],
  vtkIdList pts) - See the vtkCell API for descriptions of
  these methods.
* obj.Contour (double value, vtkDataArray cellScalars,
  vtkIncrementalPointLocator locator, vtkCellArray verts1,
  vtkCellArray lines, vtkCellArray verts2, vtkPointData
  inPd, vtkPointData outPd, vtkCellData inCd, vtkIdType
  cellId, vtkCellData outCd) - See the vtkCell API for
  descriptions of these methods.
* obj.Clip (double value, vtkDataArray cellScalars,
  vtkIncrementalPointLocator locator, vtkCellArray pts,
  vtkPointData inPd, vtkPointData outPd, vtkCellData inCd,
  vtkIdType cellId, vtkCellData outCd, int insideOut) - See
  the vtkCell API for descriptions of these methods.
* int = obj.Triangulate (int index, vtkIdList ptIds,
  vtkPoints pts)
* obj.Derivatives (int subId, double pcoords[3], double
  values, int dim, double derivs)
* obj.InterpolateFunctions (double pcoords[3], double
  weights) - Compute the interpolation functions/derivatives
  (aka shape functions/derivatives)
* obj.InterpolateDerivs (double pcoords[3], double derivs) -
  Compute the interpolation functions/derivatives (aka shape
  functions/derivatives)


* FreeMat_Documentation
* Visualization_Toolkit_Filtering_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

