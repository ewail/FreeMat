
 Usage

To create an instance of class vtkStripper, simply invoke
its constructor as follows

    obj = vtkStripper



 Methods

The class vtkStripper has several methods that can be used.
They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkStripper class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkStripper = obj.NewInstance ()
* vtkStripper = obj.SafeDownCast (vtkObject o)
* obj.SetMaximumLength (int ) - Specify the maximum number
  of triangles in a triangle strip, and/or the maximum
  number of lines in a poly-line.
* int = obj.GetMaximumLengthMinValue () - Specify the
  maximum number of triangles in a triangle strip, and/or
  the maximum number of lines in a poly-line.
* int = obj.GetMaximumLengthMaxValue () - Specify the
  maximum number of triangles in a triangle strip, and/or
  the maximum number of lines in a poly-line.
* int = obj.GetMaximumLength () - Specify the maximum number
  of triangles in a triangle strip, and/or the maximum
  number of lines in a poly-line.
* obj.PassCellDataAsFieldDataOn () - Enable/Disable passing
  of the CellData in the input to the output as FieldData.
  Note the field data is tranformed.
* obj.PassCellDataAsFieldDataOff () - Enable/Disable passing
  of the CellData in the input to the output as FieldData.
  Note the field data is tranformed.
* obj.SetPassCellDataAsFieldData (int ) - Enable/Disable
  passing of the CellData in the input to the output as
  FieldData. Note the field data is tranformed.
* int = obj.GetPassCellDataAsFieldData () - Enable/Disable
  passing of the CellData in the input to the output as
  FieldData. Note the field data is tranformed.
* obj.SetPassThroughCellIds (int ) - If on, the output
  polygonal dataset will have a celldata array that holds
  the cell index of the original 3D cell that produced each
  output cell. This is useful for picking. The default is
  off to conserve memory.
* int = obj.GetPassThroughCellIds () - If on, the output
  polygonal dataset will have a celldata array that holds
  the cell index of the original 3D cell that produced each
  output cell. This is useful for picking. The default is
  off to conserve memory.
* obj.PassThroughCellIdsOn () - If on, the output polygonal
  dataset will have a celldata array that holds the cell
  index of the original 3D cell that produced each output
  cell. This is useful for picking. The default is off to
  conserve memory.
* obj.PassThroughCellIdsOff () - If on, the output polygonal
  dataset will have a celldata array that holds the cell
  index of the original 3D cell that produced each output
  cell. This is useful for picking. The default is off to
  conserve memory.
* obj.SetPassThroughPointIds (int ) - If on, the output
  polygonal dataset will have a pointdata array that holds
  the point index of the original vertex that produced each
  output vertex. This is useful for picking. The default is
  off to conserve memory.
* int = obj.GetPassThroughPointIds () - If on, the output
  polygonal dataset will have a pointdata array that holds
  the point index of the original vertex that produced each
  output vertex. This is useful for picking. The default is
  off to conserve memory.
* obj.PassThroughPointIdsOn () - If on, the output polygonal
  dataset will have a pointdata array that holds the point
  index of the original vertex that produced each output
  vertex. This is useful for picking. The default is off to
  conserve memory.
* obj.PassThroughPointIdsOff () - If on, the output
  polygonal dataset will have a pointdata array that holds
  the point index of the original vertex that produced each
  output vertex. This is useful for picking. The default is
  off to conserve memory.


* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:32 for FreeMat by
  doxygen_ 1.8.1.1

