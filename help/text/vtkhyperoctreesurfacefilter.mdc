
 Usage

vtkHyperOctreeSurfaceFilter extracts the surface of an
hyperoctree.
To create an instance of class vtkHyperOctreeSurfaceFilter,
simply invoke its constructor as follows

    obj = vtkHyperOctreeSurfaceFilter



 Methods

The class vtkHyperOctreeSurfaceFilter has several methods
that can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkHyperOctreeSurfaceFilter class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkHyperOctreeSurfaceFilter = obj.NewInstance ()
* vtkHyperOctreeSurfaceFilter = obj.SafeDownCast (vtkObject
  o)
* obj.SetMerging (int ) - Turn on/off merging of coincident
  points. Note that is merging is on, points with different
  point attributes (e.g., normals) are merged, which may
  cause rendering artifacts.
* int = obj.GetMerging () - Turn on/off merging of
  coincident points. Note that is merging is on, points with
  different point attributes (e.g., normals) are merged,
  which may cause rendering artifacts.
* obj.MergingOn () - Turn on/off merging of coincident
  points. Note that is merging is on, points with different
  point attributes (e.g., normals) are merged, which may
  cause rendering artifacts.
* obj.MergingOff () - Turn on/off merging of coincident
  points. Note that is merging is on, points with different
  point attributes (e.g., normals) are merged, which may
  cause rendering artifacts.
* obj.SetLocator (vtkIncrementalPointLocator locator) - Set
  / get a spatial locator for merging points. By default an
  instance of vtkMergePoints is used.
* vtkIncrementalPointLocator = obj.GetLocator () - Set / get
  a spatial locator for merging points. By default an
  instance of vtkMergePoints is used.
* long = obj.GetMTime () - Return the MTime also considering
  the locator.
* obj.SetPassThroughCellIds (int ) - If on, the output
  polygonal dataset will have a celldata array that holds
  the cell index of the original 3D cell that produced each
  output cell. This is useful for cell picking. The default
  is off to conserve memory.
* int = obj.GetPassThroughCellIds () - If on, the output
  polygonal dataset will have a celldata array that holds
  the cell index of the original 3D cell that produced each
  output cell. This is useful for cell picking. The default
  is off to conserve memory.
* obj.PassThroughCellIdsOn () - If on, the output polygonal
  dataset will have a celldata array that holds the cell
  index of the original 3D cell that produced each output
  cell. This is useful for cell picking. The default is off
  to conserve memory.
* obj.PassThroughCellIdsOff () - If on, the output polygonal
  dataset will have a celldata array that holds the cell
  index of the original 3D cell that produced each output
  cell. This is useful for cell picking. The default is off
  to conserve memory.


* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:32 for FreeMat by
  doxygen_ 1.8.1.1

