
 Usage

To create an instance of class vtkFocalPlanePointPlacer,
simply invoke its constructor as follows

    obj = vtkFocalPlanePointPlacer



 Methods

The class vtkFocalPlanePointPlacer has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkFocalPlanePointPlacer class.

* string = obj.GetClassName () - Standard methods for
  instances of this class.
* int = obj.IsA (string name) - Standard methods for
  instances of this class.
* vtkFocalPlanePointPlacer = obj.NewInstance () - Standard
  methods for instances of this class.
* vtkFocalPlanePointPlacer = obj.SafeDownCast (vtkObject o)
  - Standard methods for instances of this class.
* int = obj.ComputeWorldPosition (vtkRenderer ren, double
  displayPos[2], double worldPos[3], double worldOrient[9])
* int = obj.ComputeWorldPosition (vtkRenderer ren, double
  displayPos[2], double refWorldPos[3], double worldPos[3],
  double worldOrient[9]) - Given a renderer, a display
  position, and a reference world position, compute a new
  world position. The orientation will be the standard
  coordinate axes, and the computed world position will be
  created by projecting the display point onto a plane that
  is parallel to the focal plane and runs through the
  reference world position. This method is typically used to
  move existing points.
* int = obj.ValidateWorldPosition (double worldPos[3]) -
  Validate a world position. All world positions are valid
  so these methods always return 1.
* int = obj.ValidateWorldPosition (double worldPos[3],
  double worldOrient[9]) - Validate a world position. All
  world positions are valid so these methods always return
  1.
* obj.SetOffset (double ) - Optionally specify a signed
  offset from the focal plane for the points to be placed
  at. If negative, the constraint plane is offset closer to
  the camera. If positive, its further away from the camera.
* double = obj.GetOffset () - Optionally specify a signed
  offset from the focal plane for the points to be placed
  at. If negative, the constraint plane is offset closer to
  the camera. If positive, its further away from the camera.
* obj.SetPointBounds (double , double , double , double ,
  double , double ) - Optionally Restrict the points to a
  set of bounds. The placer will invalidate points outside
  these bounds.
* obj.SetPointBounds (double a[6]) - Optionally Restrict the
  points to a set of bounds. The placer will invalidate
  points outside these bounds.
* double = obj. GetPointBounds () - Optionally Restrict the
  points to a set of bounds. The placer will invalidate
  points outside these bounds.


* FreeMat_Documentation
* Visualization_Toolkit_Widget_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

