
 Usage

This is a software ray caster for rendering volumes in
vtkUnstructuredGrid.
To create an instance of class
vtkUnstructuredGridVolumeRayCastMapper, simply invoke its
constructor as follows

    obj = vtkUnstructuredGridVolumeRayCastMapper



 Methods

The class vtkUnstructuredGridVolumeRayCastMapper has several
methods that can be used. They are listed below. Note that
the documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the
vtkUnstructuredGridVolumeRayCastMapper class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkUnstructuredGridVolumeRayCastMapper = obj.NewInstance
  ()
* vtkUnstructuredGridVolumeRayCastMapper = obj.SafeDownCast
  (vtkObject o)
* obj.SetImageSampleDistance (float ) - Sampling distance in
  the XY image dimensions. Default value of 1 meaning 1 ray
  cast per pixel. If set to 0.5, 4 rays will be cast per
  pixel. If set to 2.0, 1 ray will be cast for every 4 (2 by
  2) pixels.
* float = obj.GetImageSampleDistanceMinValue () - Sampling
  distance in the XY image dimensions. Default value of 1
  meaning 1 ray cast per pixel. If set to 0.5, 4 rays will
  be cast per pixel. If set to 2.0, 1 ray will be cast for
  every 4 (2 by 2) pixels.
* float = obj.GetImageSampleDistanceMaxValue () - Sampling
  distance in the XY image dimensions. Default value of 1
  meaning 1 ray cast per pixel. If set to 0.5, 4 rays will
  be cast per pixel. If set to 2.0, 1 ray will be cast for
  every 4 (2 by 2) pixels.
* float = obj.GetImageSampleDistance () - Sampling distance
  in the XY image dimensions. Default value of 1 meaning 1
  ray cast per pixel. If set to 0.5, 4 rays will be cast per
  pixel. If set to 2.0, 1 ray will be cast for every 4 (2 by
  2) pixels.
* obj.SetMinimumImageSampleDistance (float ) - This is the
  minimum image sample distance allow when the image sample
  distance is being automatically adjusted
* float = obj.GetMinimumImageSampleDistanceMinValue () -
  This is the minimum image sample distance allow when the
  image sample distance is being automatically adjusted
* float = obj.GetMinimumImageSampleDistanceMaxValue () -
  This is the minimum image sample distance allow when the
  image sample distance is being automatically adjusted
* float = obj.GetMinimumImageSampleDistance () - This is the
  minimum image sample distance allow when the image sample
  distance is being automatically adjusted
* obj.SetMaximumImageSampleDistance (float ) - This is the
  maximum image sample distance allow when the image sample
  distance is being automatically adjusted
* float = obj.GetMaximumImageSampleDistanceMinValue () -
  This is the maximum image sample distance allow when the
  image sample distance is being automatically adjusted
* float = obj.GetMaximumImageSampleDistanceMaxValue () -
  This is the maximum image sample distance allow when the
  image sample distance is being automatically adjusted
* float = obj.GetMaximumImageSampleDistance () - This is the
  maximum image sample distance allow when the image sample
  distance is being automatically adjusted
* obj.SetAutoAdjustSampleDistances (int ) - If
  AutoAdjustSampleDistances is on, the the
  ImageSampleDistance will be varied to achieve the
  allocated render time of this prop (controlled by the
  desired update rate and any culling in use).
* int = obj.GetAutoAdjustSampleDistancesMinValue () - If
  AutoAdjustSampleDistances is on, the the
  ImageSampleDistance will be varied to achieve the
  allocated render time of this prop (controlled by the
  desired update rate and any culling in use).
* int = obj.GetAutoAdjustSampleDistancesMaxValue () - If
  AutoAdjustSampleDistances is on, the the
  ImageSampleDistance will be varied to achieve the
  allocated render time of this prop (controlled by the
  desired update rate and any culling in use).
* int = obj.GetAutoAdjustSampleDistances () - If
  AutoAdjustSampleDistances is on, the the
  ImageSampleDistance will be varied to achieve the
  allocated render time of this prop (controlled by the
  desired update rate and any culling in use).
* obj.AutoAdjustSampleDistancesOn () - If
  AutoAdjustSampleDistances is on, the the
  ImageSampleDistance will be varied to achieve the
  allocated render time of this prop (controlled by the
  desired update rate and any culling in use).
* obj.AutoAdjustSampleDistancesOff () - If
  AutoAdjustSampleDistances is on, the the
  ImageSampleDistance will be varied to achieve the
  allocated render time of this prop (controlled by the
  desired update rate and any culling in use).
* obj.SetNumberOfThreads (int ) - Set/Get the number of
  threads to use. This by default is equal to the number of
  available processors detected.
* int = obj.GetNumberOfThreads () - Set/Get the number of
  threads to use. This by default is equal to the number of
  available processors detected.
* obj.SetIntermixIntersectingGeometry (int ) - If
  IntermixIntersectingGeometry is turned on, the zbuffer
  will be captured and used to limit the traversal of the
  rays.
* int = obj.GetIntermixIntersectingGeometryMinValue () - If
  IntermixIntersectingGeometry is turned on, the zbuffer
  will be captured and used to limit the traversal of the
  rays.
* int = obj.GetIntermixIntersectingGeometryMaxValue () - If
  IntermixIntersectingGeometry is turned on, the zbuffer
  will be captured and used to limit the traversal of the
  rays.
* int = obj.GetIntermixIntersectingGeometry () - If
  IntermixIntersectingGeometry is turned on, the zbuffer
  will be captured and used to limit the traversal of the
  rays.
* obj.IntermixIntersectingGeometryOn () - If
  IntermixIntersectingGeometry is turned on, the zbuffer
  will be captured and used to limit the traversal of the
  rays.
* obj.IntermixIntersectingGeometryOff () - If
  IntermixIntersectingGeometry is turned on, the zbuffer
  will be captured and used to limit the traversal of the
  rays.
* obj.SetRayCastFunction
  (vtkUnstructuredGridVolumeRayCastFunction f) - Set/Get the
  helper class for casting rays.
* vtkUnstructuredGridVolumeRayCastFunction =
  obj.GetRayCastFunction () - Set/Get the helper class for
  casting rays.
* obj.SetRayIntegrator
  (vtkUnstructuredGridVolumeRayIntegrator ri) - Set/Get the
  helper class for integrating rays. If set to NULL, a
  default integrator will be assigned.
* vtkUnstructuredGridVolumeRayIntegrator =
  obj.GetRayIntegrator () - Set/Get the helper class for
  integrating rays. If set to NULL, a default integrator
  will be assigned.
* obj.CastRays (int threadID, int threadCount)


* FreeMat_Documentation
* Visualization_Toolkit_Volume_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

