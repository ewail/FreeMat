
 Usage

PolyDataMapper that uses painters to do the actual
rendering. .SECTION Thanks Support for generic vertex
attributes in VTK was contributed in collaboration with
Stephane Ploix at EDF.
To create an instance of class vtkPainterPolyDataMapper,
simply invoke its constructor as follows

    obj = vtkPainterPolyDataMapper



 Methods

The class vtkPainterPolyDataMapper has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkPainterPolyDataMapper class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkPainterPolyDataMapper = obj.NewInstance ()
* vtkPainterPolyDataMapper = obj.SafeDownCast (vtkObject o)
* obj.RenderPiece (vtkRenderer ren, vtkActor act) -
  Implemented by sub classes. Actual rendering is done here.
* vtkPainter = obj.GetPainter () - Get/Set the painter used
  to do the actual rendering. By default, vtkDefaultPainter
  is used to build the rendering painter chain for color
  mapping/clipping etc. followed by a vtkChooserPainter
  which renders the primitives.
* obj.SetPainter (vtkPainter ) - Get/Set the painter used to
  do the actual rendering. By default, vtkDefaultPainter is
  used to build the rendering painter chain for color
  mapping/clipping etc. followed by a vtkChooserPainter
  which renders the primitives.
* obj.ReleaseGraphicsResources (vtkWindow ) - Release any
  graphics resources that are being consumed by this mapper.
  The parameter window could be used to determine which
  graphic resources to release. Merely propagates the call
  to the painter.
* obj.GetBounds (double bounds[6]) - Re-implement the
  superclass GetBounds method.
* double = obj.GetBounds () - Re-implement the superclass
  GetBounds method.
* obj.MapDataArrayToVertexAttribute (string
  vertexAttributeName, string dataArrayName, int
  fieldAssociation, int componentno) - Select a data array
  from the point/cell data and map it to a generic vertex
  attribute. vertexAttributeName is the name of the vertex
  attribute. dataArrayName is the name of the data array.
  fieldAssociation indicates when the data array is a point
  data array or cell data array (vtkDataObject::
  FIELD_ASSOCIATION_POINTS or (vtkDataObject::
  FIELD_ASSOCIATION_CELLS). componentno indicates which
  component from the data array must be passed as the
  attribute. If -1, then all components are passed.
* obj.MapDataArrayToMultiTextureAttribute (int unit, string
  dataArrayName, int fieldAssociation, int componentno)
* obj.RemoveVertexAttributeMapping (string
  vertexAttributeName) - Remove a vertex attribute mapping.
* obj.RemoveAllVertexAttributeMappings () - Remove all
  vertex attributes.
* vtkPainter = obj.GetSelectionPainter () - Get/Set the
  painter used when rendering the selection pass.
* obj.SetSelectionPainter (vtkPainter ) - Get/Set the
  painter used when rendering the selection pass.
* bool = obj.GetSupportsSelection ()


* FreeMat_Documentation
* Visualization_Toolkit_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:35 for FreeMat by
  doxygen_ 1.8.1.1

