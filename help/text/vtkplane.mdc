
 Usage

vtkPlane provides methods for various plane computations.
These include projecting points onto a plane, evaluating the
plane equation, and returning plane normal. vtkPlane is a
concrete implementation of the abstract class
vtkImplicitFunction.
To create an instance of class vtkPlane, simply invoke its
constructor as follows

    obj = vtkPlane



 Methods

The class vtkPlane has several methods that can be used.
They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkPlane class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkPlane = obj.NewInstance ()
* vtkPlane = obj.SafeDownCast (vtkObject o)
* double = obj.EvaluateFunction (double x[3])
* double = obj.EvaluateFunction (double x, double y, double
  z)
* obj.EvaluateGradient (double x[3], double g[3])
* obj.SetNormal (double , double , double ) - Set/get plane
  normal. Plane is defined by point and normal.
* obj.SetNormal (double a[3]) - Set/get plane normal. Plane
  is defined by point and normal.
* double = obj. GetNormal () - Set/get plane normal. Plane
  is defined by point and normal.
* obj.SetOrigin (double , double , double ) - Set/get point
  through which plane passes. Plane is defined by point and
  normal.
* obj.SetOrigin (double a[3]) - Set/get point through which
  plane passes. Plane is defined by point and normal.
* double = obj. GetOrigin () - Set/get point through which
  plane passes. Plane is defined by point and normal.
* obj.Push (double distance) - Translate the plane in the
  direction of the normal by the distance specified.
  Negative values move the plane in the opposite direction.
* obj.ProjectPoint (double x[3], double xproj[3])
* obj.GeneralizedProjectPoint (double x[3], double xproj[3])
* double = obj.DistanceToPlane (double x[3]) - Return the
  distance of a point x to a plane defined by n(x-p0) = 0.
  The normal n[3] must be magnitude=1.


* FreeMat_Documentation
* Visualization_Toolkit_Common_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

