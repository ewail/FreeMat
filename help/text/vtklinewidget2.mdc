
 Usage

This 3D widget defines a straight line that can be
interactively placed in a scene. The widget is assumed to
consist of two parts: 1) two end points and 2) a straight
line connecting the two points. (The representation paired
with this widget determines the actual geometry of the
widget.) The positioning of the two end points is
facilitated by using vtkHandleWidgets to position the
points.
To use this widget, you generally pair it with a
vtkLineRepresentation (or a subclass). Variuos options are
available in the representation for controlling how the
widget appears, and how the widget functions.
.SECTION Event Bindings By default, the widget responds to
the following VTK events (i.e., it watches the
vtkRenderWindowInteractor for these events):

   If one of the two end points are selected:
     LeftButtonPressEvent - activate the associated handle
  widget
     LeftButtonReleaseEvent - release the handle widget
  associated with the point
     MouseMoveEvent - move the point
   If the line is selected:
     LeftButtonPressEvent - activate a handle widget
  accociated with the line
     LeftButtonReleaseEvent - release the handle widget
  associated with the line
     MouseMoveEvent - translate the line
   In all the cases, independent of what is picked, the
  widget responds to the
   following VTK events:
     MiddleButtonPressEvent - translate the widget
     MiddleButtonReleaseEvent - release the widget
     RightButtonPressEvent - scale the widget's
  representation
     RightButtonReleaseEvent - stop scaling the widget
     MouseMoveEvent - scale (if right button) or move (if
  middle button) the widget

Note that the event bindings described above can be changed
using this class's vtkWidgetEventTranslator. This class
translates VTK events into the vtkLineWidget2's widget
events:

     vtkWidgetEvent::Select &ndash; some part of the widget
  has been selected
     vtkWidgetEvent::EndSelect &ndash; the selection process
  has completed
     vtkWidgetEvent::Move &ndash; a request for slider
  motion has been invoked

In turn, when these widget events are processed, the
vtkLineWidget2 invokes the following VTK events on itself
(which observers can listen for):

     vtkCommand::StartInteractionEvent (on vtkWidgetEvent::
  Select)
     vtkCommand::EndInteractionEvent (on vtkWidgetEvent::
  EndSelect)
     vtkCommand::InteractionEvent (on vtkWidgetEvent::Move)

To create an instance of class vtkLineWidget2, simply invoke
its constructor as follows

    obj = vtkLineWidget2



 Methods

The class vtkLineWidget2 has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkLineWidget2 class.

* string = obj.GetClassName () - Standard vtkObject methods
* int = obj.IsA (string name) - Standard vtkObject methods
* vtkLineWidget2 = obj.NewInstance () - Standard vtkObject
  methods
* vtkLineWidget2 = obj.SafeDownCast (vtkObject o) - Standard
  vtkObject methods
* obj.SetEnabled (int enabling) - Override superclasses'
  SetEnabled() method because the line widget must enable
  its internal handle widgets.
* obj.SetRepresentation (vtkLineRepresentation r) - Create
  the default widget representation if one is not set.
* obj.CreateDefaultRepresentation () - Create the default
  widget representation if one is not set.
* obj.SetProcessEvents (int ) - Methods to change the
  whether the widget responds to interaction. Overridden to
  pass the state to component widgets.


* FreeMat_Documentation
* Visualization_Toolkit_Widget_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

