
 Usage

vtkHierarchicalGraphPipeline renders bundled edges that are
meant to be viewed as an overlay on a tree. This class is
not for general use, but is used in the internals of
vtkRenderedHierarchyRepresentation and
vtkRenderedTreeAreaRepresentation.
To create an instance of class vtkHierarchicalGraphPipeline,
simply invoke its constructor as follows

    obj = vtkHierarchicalGraphPipeline



 Methods

The class vtkHierarchicalGraphPipeline has several methods
that can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkHierarchicalGraphPipeline
class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkHierarchicalGraphPipeline = obj.NewInstance ()
* vtkHierarchicalGraphPipeline = obj.SafeDownCast (vtkObject
  o)
* vtkActor = obj.GetActor () - The actor associated with the
  hierarchical graph.
* vtkActor2D = obj.GetLabelActor () - The actor associated
  with the hierarchical graph.
* obj.SetBundlingStrength (double strength) - The bundling
  strength for the bundled edges.
* double = obj.GetBundlingStrength () - The bundling
  strength for the bundled edges.
* obj.SetLabelArrayName (string name) - The edge label array
  name.
* string = obj.GetLabelArrayName () - The edge label array
  name.
* obj.SetLabelVisibility (bool vis) - The edge label
  visibility.
* bool = obj.GetLabelVisibility () - The edge label
  visibility.
* obj.LabelVisibilityOn () - The edge label visibility.
* obj.LabelVisibilityOff () - The edge label visibility.
* obj.SetLabelTextProperty (vtkTextProperty prop) - The edge
  label text property.
* vtkTextProperty = obj.GetLabelTextProperty () - The edge
  label text property.
* obj.SetColorArrayName (string name) - The edge color
  array.
* string = obj.GetColorArrayName () - The edge color array.
* obj.SetColorEdgesByArray (bool vis) - Whether to color the
  edges by an array.
* bool = obj.GetColorEdgesByArray () - Whether to color the
  edges by an array.
* obj.ColorEdgesByArrayOn () - Whether to color the edges by
  an array.
* obj.ColorEdgesByArrayOff () - Whether to color the edges
  by an array.
* obj.SetVisibility (bool vis) - The visibility of this
  graph.
* bool = obj.GetVisibility () - The visibility of this
  graph.
* obj.VisibilityOn () - The visibility of this graph.
* obj.VisibilityOff () - The visibility of this graph.
* vtkSelection = obj.ConvertSelection (vtkDataRepresentation
  rep, vtkSelection sel) - Returns a new selection relevant
  to this graph based on an input selection and the view
  that this graph is contained in.
* obj.PrepareInputConnections (vtkAlgorithmOutput graphConn,
  vtkAlgorithmOutput treeConn, vtkAlgorithmOutput annConn) -
  Sets the input connections for this graph. graphConn is
  the input graph connection. treeConn is the input tree
  connection. annConn is the annotation link connection.
* obj.ApplyViewTheme (vtkViewTheme theme) - Applies the view
  theme to this graph.
* obj.SetHoverArrayName (string ) - The array to use while
  hovering over an edge.
* string = obj.GetHoverArrayName () - The array to use while
  hovering over an edge.
* obj.SetSplineType (int type) - The spline mode to use in
  vtkSplineGraphEdges. vtkSplineGraphEdges::CUSTOM uses a
  vtkCardinalSpline. vtkSplineGraphEdges::BSPLINE uses a b-
  spline. The default is CUSTOM.
* int = obj.GetSplineType () - The spline mode to use in
  vtkSplineGraphEdges. vtkSplineGraphEdges::CUSTOM uses a
  vtkCardinalSpline. vtkSplineGraphEdges::BSPLINE uses a b-
  spline. The default is CUSTOM.
* obj.RegisterProgress (vtkRenderView view) - Register
  progress with a view.


* FreeMat_Documentation
* Visualization_Toolkit_View_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

