
 Usage

vtkAnnotatedCubeActor is a hybrid 3D actor used to represent
an anatomical orientation marker in a scene. The class
consists of a 3D unit cube centered on the origin with each
face labelled in correspondance to a particular coordinate
direction. For example, with Cartesian directions, the user
defined text labels could be: +X, -X, +Y, -Y, +Z, -Z, while
for anatomical directions: A, P, L, R, S, I. Text is
automatically centered on each cube face and is not
restriceted to single characters. In addition to or in
replace of a solid text label representation, the outline
edges of the labels can be displayed. The individual
properties of the cube, face labels and text outlines can be
manipulated as can their visibility.
To create an instance of class vtkAnnotatedCubeActor, simply
invoke its constructor as follows

    obj = vtkAnnotatedCubeActor



 Methods

The class vtkAnnotatedCubeActor has several methods that can
be used. They are listed below. Note that the documentation
is translated automatically from the VTK sources, and may
not be completely intelligible. When in doubt, consult the
VTK website. In the methods listed below, obj is an instance
of the vtkAnnotatedCubeActor class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkAnnotatedCubeActor = obj.NewInstance ()
* vtkAnnotatedCubeActor = obj.SafeDownCast (vtkObject o)
* obj.GetActors (vtkPropCollection ) - For some exporters
  and other other operations we must be able to collect all
  the actors or volumes. These methods are used in that
  process.
* int = obj.RenderOpaqueGeometry (vtkViewport viewport) -
  Support the standard render methods.
* int = obj.RenderTranslucentPolygonalGeometry (vtkViewport
  viewport) - Support the standard render methods.
* int = obj.HasTranslucentPolygonalGeometry () - Does this
  prop have some translucent polygonal geometry?
* obj.ShallowCopy (vtkProp prop) - Shallow copy of an axes
  actor. Overloads the virtual vtkProp method.
* obj.ReleaseGraphicsResources (vtkWindow ) - Release any
  graphics resources that are being consumed by this actor.
  The parameter window could be used to determine which
  graphic resources to release.
* obj.GetBounds (double bounds[6]) - Get the bounds for this
  Actor as (Xmin,Xmax,Ymin,Ymax,Zmin,Zmax). (The method
  GetBounds(double bounds[6]) is available from the
  superclass.)
* double = obj.GetBounds () - Get the bounds for this Actor
  as (Xmin,Xmax,Ymin,Ymax,Zmin,Zmax). (The method GetBounds
  (double bounds[6]) is available from the superclass.)
* long = obj.GetMTime () - Get the actors mtime plus
  consider its properties and texture if set.
* obj.SetFaceTextScale (double ) - Set/Get the scale factor
  for the face text
* double = obj.GetFaceTextScale () - Set/Get the scale
  factor for the face text
* vtkProperty = obj.GetXPlusFaceProperty () - Get the
  individual face text properties.
* vtkProperty = obj.GetXMinusFaceProperty () - Get the
  individual face text properties.
* vtkProperty = obj.GetYPlusFaceProperty () - Get the
  individual face text properties.
* vtkProperty = obj.GetYMinusFaceProperty () - Get the
  individual face text properties.
* vtkProperty = obj.GetZPlusFaceProperty () - Get the
  individual face text properties.
* vtkProperty = obj.GetZMinusFaceProperty () - Get the
  individual face text properties.
* vtkProperty = obj.GetCubeProperty () - Get the cube
  properties.
* vtkProperty = obj.GetTextEdgesProperty () - Get the text
  edges properties.
* obj.SetXPlusFaceText (string ) - Set/get the face text.
* string = obj.GetXPlusFaceText () - Set/get the face text.
* obj.SetXMinusFaceText (string ) - Set/get the face text.
* string = obj.GetXMinusFaceText () - Set/get the face text.
* obj.SetYPlusFaceText (string ) - Set/get the face text.
* string = obj.GetYPlusFaceText () - Set/get the face text.
* obj.SetYMinusFaceText (string ) - Set/get the face text.
* string = obj.GetYMinusFaceText () - Set/get the face text.
* obj.SetZPlusFaceText (string ) - Set/get the face text.
* string = obj.GetZPlusFaceText () - Set/get the face text.
* obj.SetZMinusFaceText (string ) - Set/get the face text.
* string = obj.GetZMinusFaceText () - Set/get the face text.
* obj.SetTextEdgesVisibility (int ) - Enable/disable drawing
  the vector text edges.
* int = obj.GetTextEdgesVisibility () - Enable/disable
  drawing the vector text edges.
* obj.SetCubeVisibility (int ) - Enable/disable drawing the
  cube.
* int = obj.GetCubeVisibility () - Enable/disable drawing
  the cube.
* obj.SetFaceTextVisibility (int ) - Enable/disable drawing
  the vector text.
* int = obj.GetFaceTextVisibility () - Enable/disable
  drawing the vector text.
* obj.SetXFaceTextRotation (double ) - Augment individual
  face text orientations.
* double = obj.GetXFaceTextRotation () - Augment individual
  face text orientations.
* obj.SetYFaceTextRotation (double ) - Augment individual
  face text orientations.
* double = obj.GetYFaceTextRotation () - Augment individual
  face text orientations.
* obj.SetZFaceTextRotation (double ) - Augment individual
  face text orientations.
* double = obj.GetZFaceTextRotation () - Augment individual
  face text orientations.
* vtkAssembly = obj.GetAssembly ()


* FreeMat_Documentation
* Visualization_Toolkit_Hybrid_Classes
* Generated on Thu Jul 25 2013 17:18:32 for FreeMat by
  doxygen_ 1.8.1.1

