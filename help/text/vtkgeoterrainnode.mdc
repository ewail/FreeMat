
 Usage

To create an instance of class vtkGeoTerrainNode, simply
invoke its constructor as follows

    obj = vtkGeoTerrainNode



 Methods

The class vtkGeoTerrainNode has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkGeoTerrainNode class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkGeoTerrainNode = obj.NewInstance ()
* vtkGeoTerrainNode = obj.SafeDownCast (vtkObject o)
* vtkGeoTerrainNode = obj.GetChild (int idx)
* vtkGeoTerrainNode = obj.GetParent ()
* double = obj.GetAltitude (double longitude, double
  latitude)
* vtkPolyData = obj.GetModel () - Get the terrrain model.
  The user has to copy the terrain into this object.
* obj.SetModel (vtkPolyData model) - Get the terrrain model.
  The user has to copy the terrain into this object.
* obj.UpdateBoundingSphere () - Bounding sphere is
  precomputed for faster updates of terrain.
* double = obj.GetBoundingSphereRadius () - Bounding sphere
  is precomputed for faster updates of terrain.
* double = obj. GetBoundingSphereCenter () - Bounding sphere
  is precomputed for faster updates of terrain.
* double = obj. GetCornerNormal00 ()
* double = obj. GetCornerNormal01 ()
* double = obj. GetCornerNormal10 ()
* double = obj. GetCornerNormal11 ()
* double = obj. GetProjectionBounds () - For 2D projections,
  store the bounds of the node in projected space to quickly
  determine if a node is offscreen.
* obj.SetProjectionBounds (double , double , double , double
  ) - For 2D projections, store the bounds of the node in
  projected space to quickly determine if a node is
  offscreen.
* obj.SetProjectionBounds (double a[4]) - For 2D
  projections, store the bounds of the node in projected
  space to quickly determine if a node is offscreen.
* int = obj.GetGraticuleLevel () - For 2D projections, store
  the granularity of the graticule in this node.
* obj.SetGraticuleLevel (int ) - For 2D projections, store
  the granularity of the graticule in this node.
* double = obj.GetError () - For 2D projections, store the
  maximum deviation of line segment centers from the actual
  projection value.
* obj.SetError (double ) - For 2D projections, store the
  maximum deviation of line segment centers from the actual
  projection value.
* float = obj.GetCoverage () - For 2D projections, store the
  maximum deviation of line segment centers from the actual
  projection value.
* obj.SetCoverage (float ) - For 2D projections, store the
  maximum deviation of line segment centers from the actual
  projection value.
* obj.ShallowCopy (vtkGeoTreeNode src) - Shallow and Deep
  copy.
* obj.DeepCopy (vtkGeoTreeNode src) - Shallow and Deep copy.
* bool = obj.HasData () - Returns whether this node has
  valid data associated with it, or if it is an "empty"
  node.
* obj.DeleteData () - Deletes the data associated with the
  node to make this an "empty" node. This is performed when
  the node has been unused for a certain amount of time.


* FreeMat_Documentation
* Visualization_Toolkit_Geo_Vis_Classes
* Generated on Thu Jul 25 2013 17:18:31 for FreeMat by
  doxygen_ 1.8.1.1

