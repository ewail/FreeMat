
 Usage

The filter requires both a vtkGraph and vtkTree as input.
The tree vertices must be a superset of the graph vertices.
A common example is when the graph vertices correspond to
the leaves of the tree, but the internal vertices of the
tree represent groupings of graph vertices. The algorithm
matches the vertices using the array "PedigreeId". The user
may alternately set the DirectMapping flag to indicate that
the two structures must have directly corresponding offsets
(i.e. node i in the graph must correspond to node i in the
tree).
.SECTION Thanks
To create an instance of class vtkTransferAttributes, simply
invoke its constructor as follows

    obj = vtkTransferAttributes



 Methods

The class vtkTransferAttributes has several methods that can
be used. They are listed below. Note that the documentation
is translated automatically from the VTK sources, and may
not be completely intelligible. When in doubt, consult the
VTK website. In the methods listed below, obj is an instance
of the vtkTransferAttributes class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkTransferAttributes = obj.NewInstance ()
* vtkTransferAttributes = obj.SafeDownCast (vtkObject o)
* obj.SetDirectMapping (bool ) - If on, uses direct mapping
  from tree to graph vertices. If off, both the graph and
  tree must contain PedigreeId arrays which are used to
  match graph and tree vertices. Default is off.
* bool = obj.GetDirectMapping () - If on, uses direct
  mapping from tree to graph vertices. If off, both the
  graph and tree must contain PedigreeId arrays which are
  used to match graph and tree vertices. Default is off.
* obj.DirectMappingOn () - If on, uses direct mapping from
  tree to graph vertices. If off, both the graph and tree
  must contain PedigreeId arrays which are used to match
  graph and tree vertices. Default is off.
* obj.DirectMappingOff () - If on, uses direct mapping from
  tree to graph vertices. If off, both the graph and tree
  must contain PedigreeId arrays which are used to match
  graph and tree vertices. Default is off.
* string = obj.GetSourceArrayName () - The field name to use
  for storing the source array.
* obj.SetSourceArrayName (string ) - The field name to use
  for storing the source array.
* string = obj.GetTargetArrayName () - The field name to use
  for storing the source array.
* obj.SetTargetArrayName (string ) - The field name to use
  for storing the source array.
* int = obj.GetSourceFieldType () - The source field type
  for accessing the source array. Valid values are those
  from enum vtkDataObject::FieldAssociations.
* obj.SetSourceFieldType (int ) - The source field type for
  accessing the source array. Valid values are those from
  enum vtkDataObject::FieldAssociations.
* int = obj.GetTargetFieldType () - The target field type
  for accessing the target array. Valid values are those
  from enum vtkDataObject::FieldAssociations.
* obj.SetTargetFieldType (int ) - The target field type for
  accessing the target array. Valid values are those from
  enum vtkDataObject::FieldAssociations.
* int = obj.FillInputPortInformation (int port,
  vtkInformation info) - Set the input type of the algorithm
  to vtkGraph.


* FreeMat_Documentation
* Visualization_Toolkit_Infovis_Classes
* Generated on Thu Jul 25 2013 17:18:34 for FreeMat by
  doxygen_ 1.8.1.1

