
 Usage

Given an input that changes over time, vtkTemporalStatistics
looks at the data for each time step and computes some
statistical information of how a point or cell variable
changes over time. For example, vtkTemporalStatistics can
compute the average value of "pressure" over time of each
point.
Note that this filter will require the upstream filter to be
run on every time step that it reports that it can compute.
This may be a time consuming operation.
vtkTemporalStatistics ignores the temporal spacing. Each
timestep will be weighted the same regardless of how long of
an interval it is to the next timestep. Thus, the average
statistic may be quite different from an integration of the
variable if the time spacing varies.
.SECTION Thanks This class was originally written by Kenneth
Moreland (kmore.nosp@m.l@sa.nosp@m.ndia..nosp@m.gov) from
Sandia National Laboratories.
To create an instance of class vtkTemporalStatistics, simply
invoke its constructor as follows

    obj = vtkTemporalStatistics



 Methods

The class vtkTemporalStatistics has several methods that can
be used. They are listed below. Note that the documentation
is translated automatically from the VTK sources, and may
not be completely intelligible. When in doubt, consult the
VTK website. In the methods listed below, obj is an instance
of the vtkTemporalStatistics class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkTemporalStatistics = obj.NewInstance ()
* vtkTemporalStatistics = obj.SafeDownCast (vtkObject o)
* int = obj.GetComputeAverage () - Turn on/off the
  computation of the average values over time. On by
  default. The resulting array names have "_average"
  appended to them.
* obj.SetComputeAverage (int ) - Turn on/off the computation
  of the average values over time. On by default. The
  resulting array names have "_average" appended to them.
* obj.ComputeAverageOn () - Turn on/off the computation of
  the average values over time. On by default. The resulting
  array names have "_average" appended to them.
* obj.ComputeAverageOff () - Turn on/off the computation of
  the average values over time. On by default. The resulting
  array names have "_average" appended to them.
* int = obj.GetComputeMinimum () - Turn on/off the
  computation of the minimum values over time. On by
  default. The resulting array names have "_minimum"
  appended to them.
* obj.SetComputeMinimum (int ) - Turn on/off the computation
  of the minimum values over time. On by default. The
  resulting array names have "_minimum" appended to them.
* obj.ComputeMinimumOn () - Turn on/off the computation of
  the minimum values over time. On by default. The resulting
  array names have "_minimum" appended to them.
* obj.ComputeMinimumOff () - Turn on/off the computation of
  the minimum values over time. On by default. The resulting
  array names have "_minimum" appended to them.
* int = obj.GetComputeMaximum () - Turn on/off the
  computation of the maximum values over time. On by
  default. The resulting array names have "_maximum"
  appended to them.
* obj.SetComputeMaximum (int ) - Turn on/off the computation
  of the maximum values over time. On by default. The
  resulting array names have "_maximum" appended to them.
* obj.ComputeMaximumOn () - Turn on/off the computation of
  the maximum values over time. On by default. The resulting
  array names have "_maximum" appended to them.
* obj.ComputeMaximumOff () - Turn on/off the computation of
  the maximum values over time. On by default. The resulting
  array names have "_maximum" appended to them.
* int = obj.GetComputeStandardDeviation ()
* obj.SetComputeStandardDeviation (int )
* obj.ComputeStandardDeviationOn ()
* obj.ComputeStandardDeviationOff ()


* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:32 for FreeMat by
  doxygen_ 1.8.1.1

