
 Usage

vtkImageThreshold can do binary or continuous thresholding
for lower, upper or a range of data. The output data type
may be different than the output, but defaults to the same
type.
To create an instance of class vtkImageThreshold, simply
invoke its constructor as follows

    obj = vtkImageThreshold



 Methods

The class vtkImageThreshold has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkImageThreshold class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkImageThreshold = obj.NewInstance ()
* vtkImageThreshold = obj.SafeDownCast (vtkObject o)
* obj.ThresholdByUpper (double thresh) - The values greater
  than or equal to the value match.
* obj.ThresholdByLower (double thresh) - The values less
  than or equal to the value match.
* obj.ThresholdBetween (double lower, double upper) - The
  values in a range (inclusive) match
* obj.SetReplaceIn (int ) - Determines whether to replace
  the pixel in range with InValue
* int = obj.GetReplaceIn () - Determines whether to replace
  the pixel in range with InValue
* obj.ReplaceInOn () - Determines whether to replace the
  pixel in range with InValue
* obj.ReplaceInOff () - Determines whether to replace the
  pixel in range with InValue
* obj.SetInValue (double val) - Replace the in range pixels
  with this value.
* double = obj.GetInValue () - Replace the in range pixels
  with this value.
* obj.SetReplaceOut (int ) - Determines whether to replace
  the pixel out of range with OutValue
* int = obj.GetReplaceOut () - Determines whether to replace
  the pixel out of range with OutValue
* obj.ReplaceOutOn () - Determines whether to replace the
  pixel out of range with OutValue
* obj.ReplaceOutOff () - Determines whether to replace the
  pixel out of range with OutValue
* obj.SetOutValue (double val) - Replace the in range pixels
  with this value.
* double = obj.GetOutValue () - Replace the in range pixels
  with this value.
* double = obj.GetUpperThreshold () - Get the Upper and
  Lower thresholds.
* double = obj.GetLowerThreshold () - Get the Upper and
  Lower thresholds.
* obj.SetOutputScalarType (int ) - Set the desired output
  scalar type to cast to
* int = obj.GetOutputScalarType () - Set the desired output
  scalar type to cast to
* obj.SetOutputScalarTypeToDouble () - Set the desired
  output scalar type to cast to
* obj.SetOutputScalarTypeToFloat () - Set the desired output
  scalar type to cast to
* obj.SetOutputScalarTypeToLong () - Set the desired output
  scalar type to cast to
* obj.SetOutputScalarTypeToUnsignedLong () - Set the desired
  output scalar type to cast to
* obj.SetOutputScalarTypeToInt () - Set the desired output
  scalar type to cast to
* obj.SetOutputScalarTypeToUnsignedInt () - Set the desired
  output scalar type to cast to
* obj.SetOutputScalarTypeToShort () - Set the desired output
  scalar type to cast to
* obj.SetOutputScalarTypeToUnsignedShort () - Set the
  desired output scalar type to cast to
* obj.SetOutputScalarTypeToChar () - Set the desired output
  scalar type to cast to
* obj.SetOutputScalarTypeToSignedChar () - Set the desired
  output scalar type to cast to
* obj.SetOutputScalarTypeToUnsignedChar ()


* FreeMat_Documentation
* Visualization_Toolkit_Imaging_Classes
* Generated on Thu Jul 25 2013 17:18:33 for FreeMat by
  doxygen_ 1.8.1.1

