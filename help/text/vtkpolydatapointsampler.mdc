
 Usage

vtkPolyDataPointSampler generates points from input
vtkPolyData. The points are placed approximately a specified
distance apart.
This filter functions as follows. First, it regurgitates all
input points, then samples all lines, plus edges associated
with the input polygons and triangle strips to produce edge
points. Finally, the interiors of polygons and triangle
strips are subsampled to produce points. All of these
functiona can be enabled or disabled separately. Note that
this algorithm only approximately generates points the
specified distance apart. Generally the point density is
finer than requested.
To create an instance of class vtkPolyDataPointSampler,
simply invoke its constructor as follows

    obj = vtkPolyDataPointSampler



 Methods

The class vtkPolyDataPointSampler has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkPolyDataPointSampler class.

* string = obj.GetClassName () - Standard macros for type
  information and printing.
* int = obj.IsA (string name) - Standard macros for type
  information and printing.
* vtkPolyDataPointSampler = obj.NewInstance () - Standard
  macros for type information and printing.
* vtkPolyDataPointSampler = obj.SafeDownCast (vtkObject o) -
  Standard macros for type information and printing.
* obj.SetDistance (double ) - Set/Get the approximate
  distance between points. This is an absolute distance
  measure. The default is 0.01.
* double = obj.GetDistanceMinValue () - Set/Get the
  approximate distance between points. This is an absolute
  distance measure. The default is 0.01.
* double = obj.GetDistanceMaxValue () - Set/Get the
  approximate distance between points. This is an absolute
  distance measure. The default is 0.01.
* double = obj.GetDistance () - Set/Get the approximate
  distance between points. This is an absolute distance
  measure. The default is 0.01.
* int = obj.GetGenerateVertexPoints () - Specify/retrieve a
  boolean flag indicating whether cell vertex points should
  be output.
* obj.SetGenerateVertexPoints (int ) - Specify/retrieve a
  boolean flag indicating whether cell vertex points should
  be output.
* obj.GenerateVertexPointsOn () - Specify/retrieve a boolean
  flag indicating whether cell vertex points should be
  output.
* obj.GenerateVertexPointsOff () - Specify/retrieve a
  boolean flag indicating whether cell vertex points should
  be output.
* int = obj.GetGenerateEdgePoints () - Specify/retrieve a
  boolean flag indicating whether cell edges should be
  sampled to produce output points. The default is true.
* obj.SetGenerateEdgePoints (int ) - Specify/retrieve a
  boolean flag indicating whether cell edges should be
  sampled to produce output points. The default is true.
* obj.GenerateEdgePointsOn () - Specify/retrieve a boolean
  flag indicating whether cell edges should be sampled to
  produce output points. The default is true.
* obj.GenerateEdgePointsOff () - Specify/retrieve a boolean
  flag indicating whether cell edges should be sampled to
  produce output points. The default is true.
* int = obj.GetGenerateInteriorPoints () - Specify/retrieve
  a boolean flag indicating whether cell interiors should be
  sampled to produce output points. The default is true.
* obj.SetGenerateInteriorPoints (int ) - Specify/retrieve a
  boolean flag indicating whether cell interiors should be
  sampled to produce output points. The default is true.
* obj.GenerateInteriorPointsOn () - Specify/retrieve a
  boolean flag indicating whether cell interiors should be
  sampled to produce output points. The default is true.
* obj.GenerateInteriorPointsOff () - Specify/retrieve a
  boolean flag indicating whether cell interiors should be
  sampled to produce output points. The default is true.
* int = obj.GetGenerateVertices () - Specify/retrieve a
  boolean flag indicating whether cell vertices should be
  generated. Cell vertices are useful if you actually want
  to display the points (that is, for each point generated,
  a vertex is generated). Recall that VTK only renders
  vertices and not points. The default is true.
* obj.SetGenerateVertices (int ) - Specify/retrieve a
  boolean flag indicating whether cell vertices should be
  generated. Cell vertices are useful if you actually want
  to display the points (that is, for each point generated,
  a vertex is generated). Recall that VTK only renders
  vertices and not points. The default is true.
* obj.GenerateVerticesOn () - Specify/retrieve a boolean
  flag indicating whether cell vertices should be generated.
  Cell vertices are useful if you actually want to display
  the points (that is, for each point generated, a vertex is
  generated). Recall that VTK only renders vertices and not
  points. The default is true.
* obj.GenerateVerticesOff () - Specify/retrieve a boolean
  flag indicating whether cell vertices should be generated.
  Cell vertices are useful if you actually want to display
  the points (that is, for each point generated, a vertex is
  generated). Recall that VTK only renders vertices and not
  points. The default is true.


* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:32 for FreeMat by
  doxygen_ 1.8.1.1

