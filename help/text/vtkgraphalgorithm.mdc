
 Usage

vtkGraphAlgorithm is a convenience class to make writing
algorithms easier. It is also designed to help transition
old algorithms to the new pipeline architecture. There are
some assumptions and defaults made by this class you should
be aware of. This class defaults such that your filter will
have one input port and one output port. If that is not the
case simply change it with SetNumberOfInputPorts etc. See
this class constructor for the default. This class also
provides a FillInputPortInfo method that by default says
that all inputs will be Graph. If that isn't the case then
please override this method in your subclass. This class
breaks out the downstream requests into separate functions
such as ExecuteData and ExecuteInformation. For new
algorithms you should implement RequestData( request,
inputVec, outputVec) but for older filters there is a
default implementation that calls the old ExecuteData
(output) signature. For even older filters that don't
implement ExecuteData the default implementation calls the
even older Execute() signature.
.SECTION Thanks Thanks to Patricia Crossno, Ken Moreland,
Andrew Wilson and Brian Wylie from Sandia National
Laboratories for their help in developing this class.
To create an instance of class vtkGraphAlgorithm, simply
invoke its constructor as follows

    obj = vtkGraphAlgorithm



 Methods

The class vtkGraphAlgorithm has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkGraphAlgorithm class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkGraphAlgorithm = obj.NewInstance ()
* vtkGraphAlgorithm = obj.SafeDownCast (vtkObject o)
* vtkGraph = obj.GetOutput () - Get the output data object
  for a port on this algorithm.
* vtkGraph = obj.GetOutput (int index) - Get the output data
  object for a port on this algorithm.
* obj.SetInput (vtkDataObject obj) - Set an input of this
  algorithm. You should not override these methods because
  they are not the only way to connect a pipeline. Note that
  these methods support old-style pipeline connections. When
  writing new code you should use the more general
  vtkAlgorithm::SetInputConnection(). These methods
  transform the input index to the input port index, not an
  index of a connection within a single port.
* obj.SetInput (int index, vtkDataObject obj) - Set an input
  of this algorithm. You should not override these methods
  because they are not the only way to connect a pipeline.
  Note that these methods support old-style pipeline
  connections. When writing new code you should use the more
  general vtkAlgorithm::SetInputConnection(). These methods
  transform the input index to the input port index, not an
  index of a connection within a single port.


* FreeMat_Documentation
* Visualization_Toolkit_Filtering_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

