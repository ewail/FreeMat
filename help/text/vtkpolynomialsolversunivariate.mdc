
 Usage

vtkPolynomialSolversUnivariate provides solvers for
univariate polynomial equations with real coefficients. The
Tartaglia-Cardan and Ferrari solvers work on polynomials of
fixed degree 3 and 4, respectively. The Lin-Bairstow and
Sturm solvers work on polynomials of arbitrary degree. The
Sturm solver is the most robust solver but only reports
roots within an interval and does not report multiplicities.
The Lin-Bairstow solver reports multiplicities.
For difficult polynomials, you may wish to use FilterRoots
to eliminate some of the roots reported by the Sturm solver.
FilterRoots evaluates the derivatives near each root to
eliminate cases where a local minimum or maximum is close to
zero.
.SECTION Thanks Thanks to Philippe Pebay, Korben Rusek,
David Thompson, and Maurice Rojas for implementing these
solvers.
To create an instance of class
vtkPolynomialSolversUnivariate, simply invoke its
constructor as follows

    obj = vtkPolynomialSolversUnivariate



 Methods

The class vtkPolynomialSolversUnivariate has several methods
that can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkPolynomialSolversUnivariate
class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkPolynomialSolversUnivariate = obj.NewInstance ()
* vtkPolynomialSolversUnivariate = obj.SafeDownCast
  (vtkObject o)


* FreeMat_Documentation
* Visualization_Toolkit_Common_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

