
 Usage

A parallel coordinates plot represents each variable in a
multivariate data set as a separate axis. Individual samples
of that data set are represented as a polyline that pass
through each variable axis at positions that correspond to
data values. vtkParallelCoordinatesRepresentation generates
this plot when added to a vtkParallelCoordinatesView, which
handles interaction and highlighting. Sample polylines can
alternatively be represented as s-curves by enabling the
UseCurves flag.
There are three selection modes: lasso, angle, and function.
Lasso selection picks sample lines that pass through a
polyline. Angle selection picks sample lines that have
similar slope to a line segment. Function selection picks
sample lines that are near a linear function defined on two
variables. This function specified by passing two (x,y)
variable value pairs.
All primitives are plotted in normalized view coordinates
[0,1].
To create an instance of class
vtkParallelCoordinatesRepresentation, simply invoke its
constructor as follows

    obj = vtkParallelCoordinatesRepresentation



 Methods

The class vtkParallelCoordinatesRepresentation has several
methods that can be used. They are listed below. Note that
the documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the
vtkParallelCoordinatesRepresentation class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkParallelCoordinatesRepresentation = obj.NewInstance ()
* vtkParallelCoordinatesRepresentation = obj.SafeDownCast
  (vtkObject o)
* obj.ApplyViewTheme (vtkViewTheme theme) - Apply the theme
  to this view. CellColor is used for line coloring and
  titles. EdgeLabelColor is used for axis color. CellOpacity
  is used for line opacity.
* string = obj.GetHoverText (vtkView view, int x, int y) -
  Returns the hover text at an x,y location.
* int = obj.SetPositionAndSize (double position, double
  size) - Change the position of the plot
* int = obj.GetPositionAndSize (double position, double
  size) - Change the position of the plot
* obj.SetAxisTitles (vtkStringArray ) - Set/Get the axis
  titles
* obj.SetAxisTitles (vtkAlgorithmOutput ) - Set/Get the axis
  titles
* obj.SetPlotTitle (string ) - Set the title for the entire
  plot
* int = obj.GetNumberOfAxes () - Get the number of axes in
  the plot
* int = obj.GetNumberOfSamples ()
* obj.SetNumberOfAxisLabels (int num) - Set/Get the number
  of labels to display on each axis
* int = obj.GetNumberOfAxisLabels () - Set/Get the number of
  labels to display on each axis
* int = obj.SwapAxisPositions (int position1, int position2)
  - Move an axis to a particular screen position. Using
  these methods requires an Update() before they will work
  properly.
* int = obj.SetXCoordinateOfPosition (int position, double
  xcoord) - Move an axis to a particular screen position.
  Using these methods requires an Update() before they will
  work properly.
* double = obj.GetXCoordinateOfPosition (int axis) - Move an
  axis to a particular screen position. Using these methods
  requires an Update() before they will work properly.
* obj.GetXCoordinatesOfPositions (double coords) - Move an
  axis to a particular screen position. Using these methods
  requires an Update() before they will work properly.
* int = obj.GetPositionNearXCoordinate (double xcoord) -
  Move an axis to a particular screen position. Using these
  methods requires an Update() before they will work
  properly.
* obj.SetUseCurves (int ) - Whether or not to display using
  curves
* int = obj.GetUseCurves () - Whether or not to display
  using curves
* obj.UseCurvesOn () - Whether or not to display using
  curves
* obj.UseCurvesOff () - Whether or not to display using
  curves
* obj.SetCurveResolution (int ) - Resolution of the curves
  displayed, enabled by setting UseCurves
* int = obj.GetCurveResolution () - Resolution of the curves
  displayed, enabled by setting UseCurves
* double = obj.GetLineOpacity () - Access plot properties
* double = obj.GetFontSize () - Access plot properties
* double = obj. GetLineColor () - Access plot properties
* double = obj. GetAxisColor () - Access plot properties
* double = obj. GetAxisLabelColor () - Access plot
  properties
* obj.SetLineOpacity (double ) - Access plot properties
* obj.SetFontSize (double ) - Access plot properties
* obj.SetLineColor (double , double , double ) - Access plot
  properties
* obj.SetLineColor (double a[3]) - Access plot properties
* obj.SetAxisColor (double , double , double ) - Access plot
  properties
* obj.SetAxisColor (double a[3]) - Access plot properties
* obj.SetAxisLabelColor (double , double , double ) - Access
  plot properties
* obj.SetAxisLabelColor (double a[3]) - Access plot
  properties
* obj.SetAngleBrushThreshold (double ) - Maximum angle
  difference (in degrees) of selection using angle/function
  brushes
* double = obj.GetAngleBrushThreshold () - Maximum angle
  difference (in degrees) of selection using angle/function
  brushes
* obj.SetFunctionBrushThreshold (double ) - Maximum angle
  difference (in degrees) of selection using angle/function
  brushes
* double = obj.GetFunctionBrushThreshold () - Maximum angle
  difference (in degrees) of selection using angle/function
  brushes
* int = obj.GetRangeAtPosition (int position, double range
  [2]) - Set/get the value range of the axis at a particular
  screen position
* int = obj.SetRangeAtPosition (int position, double range
  [2]) - Set/get the value range of the axis at a particular
  screen position
* obj.ResetAxes () - Reset the axes to their default
  positions and orders
* obj.LassoSelect (int brushClass, int brushOperator,
  vtkPoints brushPoints) - Do a selection of the lines. See
  the main description for how to use these functions.
  RangeSelect is currently stubbed out.
* obj.AngleSelect (int brushClass, int brushOperator, double
  p1, double p2) - Do a selection of the lines. See the main
  description for how to use these functions. RangeSelect is
  currently stubbed out.
* obj.FunctionSelect (int brushClass, int brushOperator,
  double p1, double p2, double q1, double q2) - Do a
  selection of the lines. See the main description for how
  to use these functions. RangeSelect is currently stubbed
  out.
* obj.RangeSelect (int brushClass, int brushOperator, double
  p1, double p2) - Do a selection of the lines. See the main
  description for how to use these functions. RangeSelect is
  currently stubbed out.


* FreeMat_Documentation
* Visualization_Toolkit_View_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

