
 Usage

vtkDataReader is a helper superclass that reads the vtk data
file header, dataset type, and attribute data (point and
cell attributes such as scalars, vectors, normals, etc.)
from a vtk data file. See text for the format of the various
vtk file types.
To create an instance of class vtkVPICReader, simply invoke
its constructor as follows

    obj = vtkVPICReader



 Methods

The class vtkVPICReader has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkVPICReader class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkVPICReader = obj.NewInstance ()
* vtkVPICReader = obj.SafeDownCast (vtkObject o)
* obj.SetFileName (string ) - Specify file name of VPIC data
  file to read.
* string = obj.GetFileName () - Specify file name of VPIC
  data file to read.
* obj.SetStride (int , int , int ) - Set the stride in each
  dimension
* obj.SetStride (int a[3]) - Set the stride in each
  dimension
* int = obj. GetStride () - Set the stride in each dimension
* obj.SetXExtent (int , int ) - Set the simulation file
  decomposition in each dimension
* obj.SetXExtent (int a[2]) - Set the simulation file
  decomposition in each dimension
* obj.SetYExtent (int , int ) - Set the simulation file
  decomposition in each dimension
* obj.SetYExtent (int a[2]) - Set the simulation file
  decomposition in each dimension
* obj.SetZExtent (int , int ) - Set the simulation file
  decomposition in each dimension
* obj.SetZExtent (int a[2]) - Set the simulation file
  decomposition in each dimension
* int = obj. GetXLayout ()
* int = obj. GetYLayout ()
* int = obj. GetZLayout ()
* vtkImageData = obj.GetOutput () - Get the reader's output
* vtkImageData = obj.GetOutput (int index) - Get the
  reader's output
* int = obj.GetNumberOfPointArrays () - The following
  methods allow selective reading of solutions fields. By
  default, ALL data fields on the nodes are read, but this
  can be modified.
* string = obj.GetPointArrayName (int index) - The following
  methods allow selective reading of solutions fields. By
  default, ALL data fields on the nodes are read, but this
  can be modified.
* int = obj.GetPointArrayStatus (string name) - The
  following methods allow selective reading of solutions
  fields. By default, ALL data fields on the nodes are read,
  but this can be modified.
* obj.SetPointArrayStatus (string name, int status) - The
  following methods allow selective reading of solutions
  fields. By default, ALL data fields on the nodes are read,
  but this can be modified.
* obj.DisableAllPointArrays () - The following methods allow
  selective reading of solutions fields. By default, ALL
  data fields on the nodes are read, but this can be
  modified.
* obj.EnableAllPointArrays () - The following methods allow
  selective reading of solutions fields. By default, ALL
  data fields on the nodes are read, but this can be
  modified.


* FreeMat_Documentation
* Visualization_Toolkit_Parallel_Classes
* Generated on Thu Jul 25 2013 17:18:34 for FreeMat by
  doxygen_ 1.8.1.1

