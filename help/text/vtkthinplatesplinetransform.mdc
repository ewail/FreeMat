
 Usage

vtkThinPlateSplineTransform describes a nonlinear warp
transform defined by a set of source and target landmarks.
Any point on the mesh close to a source landmark will be
moved to a place close to the corresponding target landmark.
The points in between are interpolated smoothly using
Bookstein's Thin Plate Spline algorithm.
To obtain a correct TPS warp, use the R2LogR kernel if your
data is 2D, and the R kernel if your data is 3D. Or you can
specify your own RBF. (Hence this class is more general than
a pure TPS transform.)
To create an instance of class vtkThinPlateSplineTransform,
simply invoke its constructor as follows

    obj = vtkThinPlateSplineTransform



 Methods

The class vtkThinPlateSplineTransform has several methods
that can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkThinPlateSplineTransform class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkThinPlateSplineTransform = obj.NewInstance ()
* vtkThinPlateSplineTransform = obj.SafeDownCast (vtkObject
  o)
* double = obj.GetSigma () - Specify the 'stiffness' of the
  spline. The default is 1.0.
* obj.SetSigma (double ) - Specify the 'stiffness' of the
  spline. The default is 1.0.
* obj.SetBasis (int basis) - Specify the radial basis
  function to use. The default is R2LogR which is
  appropriate for 2D. Use |R| (SetBasisToR) if your data is
  3D. Alternatively specify your own basis function, however
  this will mean that the transform will no longer be a true
  thin-plate spline.
* int = obj.GetBasis () - Specify the radial basis function
  to use. The default is R2LogR which is appropriate for 2D.
  Use |R| (SetBasisToR) if your data is 3D. Alternatively
  specify your own basis function, however this will mean
  that the transform will no longer be a true thin-plate
  spline.
* obj.SetBasisToR () - Specify the radial basis function to
  use. The default is R2LogR which is appropriate for 2D.
  Use |R| (SetBasisToR) if your data is 3D. Alternatively
  specify your own basis function, however this will mean
  that the transform will no longer be a true thin-plate
  spline.
* obj.SetBasisToR2LogR () - Specify the radial basis
  function to use. The default is R2LogR which is
  appropriate for 2D. Use |R| (SetBasisToR) if your data is
  3D. Alternatively specify your own basis function, however
  this will mean that the transform will no longer be a true
  thin-plate spline.
* string = obj.GetBasisAsString () - Specify the radial
  basis function to use. The default is R2LogR which is
  appropriate for 2D. Use |R| (SetBasisToR) if your data is
  3D. Alternatively specify your own basis function, however
  this will mean that the transform will no longer be a true
  thin-plate spline.
* obj.SetSourceLandmarks (vtkPoints source) - Set the source
  landmarks for the warp. If you add or change the vtkPoints
  object, you must call Modified() on it or the
  transformation might not update.
* vtkPoints = obj.GetSourceLandmarks () - Set the source
  landmarks for the warp. If you add or change the vtkPoints
  object, you must call Modified() on it or the
  transformation might not update.
* obj.SetTargetLandmarks (vtkPoints target) - Set the target
  landmarks for the warp. If you add or change the vtkPoints
  object, you must call Modified() on it or the
  transformation might not update.
* vtkPoints = obj.GetTargetLandmarks () - Set the target
  landmarks for the warp. If you add or change the vtkPoints
  object, you must call Modified() on it or the
  transformation might not update.
* long = obj.GetMTime () - Get the MTime.
* vtkAbstractTransform = obj.MakeTransform () - Make another
  transform of the same type.


* FreeMat_Documentation
* Visualization_Toolkit_Hybrid_Classes
* Generated on Thu Jul 25 2013 17:18:33 for FreeMat by
  doxygen_ 1.8.1.1

