
 Usage

vtkInteractorStyleTrackballCamera allows the user to
interactively manipulate (rotate, pan, etc.) the camera, the
viewpoint of the scene. In trackball interaction, the
magnitude of the mouse motion is proportional to the camera
motion associated with a particular mouse binding. For
example, small left-button motions cause small changes in
the rotation of the camera around its focal point. For a 3-
button mouse, the left button is for rotation, the right
button for zooming, the middle button for panning, and ctrl
+ left button for spinning. (With fewer mouse buttons, ctrl
+ shift + left button is for zooming, and shift + left
button is for panning.)
To create an instance of class
vtkInteractorStyleTrackballCamera, simply invoke its
constructor as follows

    obj = vtkInteractorStyleTrackballCamera



 Methods

The class vtkInteractorStyleTrackballCamera has several
methods that can be used. They are listed below. Note that
the documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkInteractorStyleTrackballCamera
class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkInteractorStyleTrackballCamera = obj.NewInstance ()
* vtkInteractorStyleTrackballCamera = obj.SafeDownCast
  (vtkObject o)
* obj.OnMouseMove () - Event bindings controlling the
  effects of pressing mouse buttons or moving the mouse.
* obj.OnLeftButtonDown () - Event bindings controlling the
  effects of pressing mouse buttons or moving the mouse.
* obj.OnLeftButtonUp () - Event bindings controlling the
  effects of pressing mouse buttons or moving the mouse.
* obj.OnMiddleButtonDown () - Event bindings controlling the
  effects of pressing mouse buttons or moving the mouse.
* obj.OnMiddleButtonUp () - Event bindings controlling the
  effects of pressing mouse buttons or moving the mouse.
* obj.OnRightButtonDown () - Event bindings controlling the
  effects of pressing mouse buttons or moving the mouse.
* obj.OnRightButtonUp () - Event bindings controlling the
  effects of pressing mouse buttons or moving the mouse.
* obj.OnMouseWheelForward () - Event bindings controlling
  the effects of pressing mouse buttons or moving the mouse.
* obj.OnMouseWheelBackward () - Event bindings controlling
  the effects of pressing mouse buttons or moving the mouse.
* obj.Rotate ()
* obj.Spin ()
* obj.Pan ()
* obj.Dolly ()
* obj.SetMotionFactor (double ) - Set the apparent
  sensitivity of the interactor style to mouse motion.
* double = obj.GetMotionFactor () - Set the apparent
  sensitivity of the interactor style to mouse motion.


* FreeMat_Documentation
* Visualization_Toolkit_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:35 for FreeMat by
  doxygen_ 1.8.1.1

