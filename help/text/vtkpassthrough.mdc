
 Usage

The output type is always the same as the input object type.
To create an instance of class vtkPassThrough, simply invoke
its constructor as follows

    obj = vtkPassThrough



 Methods

The class vtkPassThrough has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkPassThrough class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkPassThrough = obj.NewInstance ()
* vtkPassThrough = obj.SafeDownCast (vtkObject o)
* int = obj.FillInputPortInformation (int port,
  vtkInformation info) - Specify the first input port as
  optional
* obj.SetDeepCopyInput (int ) - Whether or not to deep copy
  the input. This can be useful if you want to create a copy
  of a data object. You can then disconnect this filter's
  input connections and it will act like a source. Defaults
  to OFF.
* int = obj.GetDeepCopyInput () - Whether or not to deep
  copy the input. This can be useful if you want to create a
  copy of a data object. You can then disconnect this
  filter's input connections and it will act like a source.
  Defaults to OFF.
* obj.DeepCopyInputOn () - Whether or not to deep copy the
  input. This can be useful if you want to create a copy of
  a data object. You can then disconnect this filter's input
  connections and it will act like a source. Defaults to
  OFF.
* obj.DeepCopyInputOff () - Whether or not to deep copy the
  input. This can be useful if you want to create a copy of
  a data object. You can then disconnect this filter's input
  connections and it will act like a source. Defaults to
  OFF.


* FreeMat_Documentation
* Visualization_Toolkit_Infovis_Classes
* Generated on Thu Jul 25 2013 17:18:33 for FreeMat by
  doxygen_ 1.8.1.1

