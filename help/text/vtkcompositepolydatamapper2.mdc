
 Usage

vtkCompositePolyDataMapper2 is similar to
vtkCompositePolyDataMapper except that instead of creating
individual mapper for each block in the composite dataset,
it iterates over the blocks internally.
To create an instance of class vtkCompositePolyDataMapper2,
simply invoke its constructor as follows

    obj = vtkCompositePolyDataMapper2



 Methods

The class vtkCompositePolyDataMapper2 has several methods
that can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkCompositePolyDataMapper2 class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkCompositePolyDataMapper2 = obj.NewInstance ()
* vtkCompositePolyDataMapper2 = obj.SafeDownCast (vtkObject
  o)
* obj.RenderPiece (vtkRenderer ren, vtkActor act) -
  Implemented by sub classes. Actual rendering is done here.
* double = obj.GetBounds () - Standard vtkProp method to get
  3D bounds of a 3D prop
* obj.GetBounds (double bounds[6]) - Standard vtkProp method
  to get 3D bounds of a 3D prop
* obj.Render (vtkRenderer ren, vtkActor act) - This calls
  RenderPiece (in a for loop is streaming is necessary).
  Basically a reimplementation for vtkPolyDataMapper::Render
  () since we don't want it to give up when
  vtkCompositeDataSet is encountered.
* obj.SetColorBlocks (int ) - When set, each block is
  colored with a different color. Note that scalar coloring
  will be ignored.
* int = obj.GetColorBlocks () - When set, each block is
  colored with a different color. Note that scalar coloring
  will be ignored.


* FreeMat_Documentation
* Visualization_Toolkit_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:35 for FreeMat by
  doxygen_ 1.8.1.1

