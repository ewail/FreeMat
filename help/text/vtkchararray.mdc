
 Usage

vtkCharArray is an array of values of type char. It provides
methods for insertion and retrieval of values and will
automatically resize itself to hold new data.
To create an instance of class vtkCharArray, simply invoke
its constructor as follows

    obj = vtkCharArray



 Methods

The class vtkCharArray has several methods that can be used.
They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkCharArray class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkCharArray = obj.NewInstance ()
* vtkCharArray = obj.SafeDownCast (vtkObject o)
* int = obj.GetDataType () - Copy the tuple value into a
  user-provided array.
* obj.GetTupleValue (vtkIdType i, string tuple) - Set the
  tuple value at the ith location in the array.
* obj.SetTupleValue (vtkIdType i, string tuple) - Insert
  (memory allocation performed) the tuple into the ith
  location in the array.
* obj.InsertTupleValue (vtkIdType i, string tuple) - Insert
  (memory allocation performed) the tuple onto the end of
  the array.
* vtkIdType = obj.InsertNextTupleValue (string tuple) - Get
  the data at a particular index.
* char = obj.GetValue (vtkIdType id) - Set the data at a
  particular index. Does not do range checking. Make sure
  you use the method SetNumberOfValues() before inserting
  data.
* obj.SetValue (vtkIdType id, char value) - Specify the
  number of values for this object to hold. Does an
  allocation as well as setting the MaxId ivar. Used in
  conjunction with SetValue() method for fast insertion.
* obj.SetNumberOfValues (vtkIdType number) - Insert data at
  a specified position in the array.
* obj.InsertValue (vtkIdType id, char f) - Insert data at
  the end of the array. Return its location in the array.
* vtkIdType = obj.InsertNextValue (char f) - Get the address
  of a particular data index. Make sure data is allocated
  for the number of items requested. Set MaxId according to
  the number of data values requested.
* string = obj.WritePointer (vtkIdType id, vtkIdType number)
  - Get the address of a particular data index. Performs no
  checks to verify that the memory has been allocated etc.
* string = obj.GetPointer (vtkIdType id) - This method lets
  the user specify data to be held by the array. The array
  argument is a pointer to the data. size is the size of the
  array supplied by the user. Set save to 1 to keep the
  class from deleting the array when it cleans up or
  reallocates memory. The class uses the actual array
  provided; it does not copy the data from the suppled
  array.
* obj.SetArray (string array, vtkIdType size, int save) -
  This method lets the user specify data to be held by the
  array. The array argument is a pointer to the data. size
  is the size of the array supplied by the user. Set save to
  1 to keep the class from deleting the array when it cleans
  up or reallocates memory. The class uses the actual array
  provided; it does not copy the data from the suppled
  array.
* obj.SetArray (string array, vtkIdType size, int save, int
  deleteMethod)


* FreeMat_Documentation
* Visualization_Toolkit_Common_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

