
 Usage

vtkCollectionIterator provides an alternative way to
traverse through the objects in a vtkCollection. Unlike the
collection's built in interface, this allows multiple
iterators to simultaneously traverse the collection. If
items are removed from the collection, only the iterators
currently pointing to those items are invalidated. Other
iterators will still continue to function normally.
To create an instance of class vtkCollectionIterator, simply
invoke its constructor as follows

    obj = vtkCollectionIterator



 Methods

The class vtkCollectionIterator has several methods that can
be used. They are listed below. Note that the documentation
is translated automatically from the VTK sources, and may
not be completely intelligible. When in doubt, consult the
VTK website. In the methods listed below, obj is an instance
of the vtkCollectionIterator class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkCollectionIterator = obj.NewInstance ()
* vtkCollectionIterator = obj.SafeDownCast (vtkObject o)
* obj.SetCollection (vtkCollection ) - Set/Get the
  collection over which to iterate.
* vtkCollection = obj.GetCollection () - Set/Get the
  collection over which to iterate.
* obj.InitTraversal () - Position the iterator at the first
  item in the collection.
* obj.GoToFirstItem () - Position the iterator at the first
  item in the collection.
* obj.GoToNextItem () - Move the iterator to the next item
  in the collection.
* int = obj.IsDoneWithTraversal () - Test whether the
  iterator is currently positioned at a valid item. Returns
  1 for yes, 0 for no.
* vtkObject = obj.GetCurrentObject () - Get the item at the
  current iterator position. Valid only when
  IsDoneWithTraversal() returns 1.
* vtkObject = obj.GetObject () -


* FreeMat_Documentation
* Visualization_Toolkit_Common_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

