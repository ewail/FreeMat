
 Usage

This class is used to annotate the render window. Its basic
goal is to provide an indication of the scale of the scene.
Four axes surrounding the render window indicate (in a
variety of ways) the scale of what the camera is viewing. An
option also exists for displaying a scale legend.
The axes can be programmed either to display distance scales
or x-y coordinate values. By default, the scales display a
distance. However, if you know that the view is down the z-
axis, the scales can be programmed to display x-y coordinate
values.
To create an instance of class vtkLegendScaleActor, simply
invoke its constructor as follows

    obj = vtkLegendScaleActor



 Methods

The class vtkLegendScaleActor has several methods that can
be used. They are listed below. Note that the documentation
is translated automatically from the VTK sources, and may
not be completely intelligible. When in doubt, consult the
VTK website. In the methods listed below, obj is an instance
of the vtkLegendScaleActor class.

* string = obj.GetClassName () - Standard methods for the
  class.
* int = obj.IsA (string name) - Standard methods for the
  class.
* vtkLegendScaleActor = obj.NewInstance () - Standard
  methods for the class.
* vtkLegendScaleActor = obj.SafeDownCast (vtkObject o) -
  Standard methods for the class.
* obj.SetLabelMode (int ) - Specify the mode for labeling
  the scale axes. By default, the axes are labeled with the
  distance between points (centered at a distance of 0.0).
  Alternatively if you know that the view is down the z-
  axis; the axes can be labeled with x-y coordinate values.
* int = obj.GetLabelModeMinValue () - Specify the mode for
  labeling the scale axes. By default, the axes are labeled
  with the distance between points (centered at a distance
  of 0.0). Alternatively if you know that the view is down
  the z-axis; the axes can be labeled with x-y coordinate
  values.
* int = obj.GetLabelModeMaxValue () - Specify the mode for
  labeling the scale axes. By default, the axes are labeled
  with the distance between points (centered at a distance
  of 0.0). Alternatively if you know that the view is down
  the z-axis; the axes can be labeled with x-y coordinate
  values.
* int = obj.GetLabelMode () - Specify the mode for labeling
  the scale axes. By default, the axes are labeled with the
  distance between points (centered at a distance of 0.0).
  Alternatively if you know that the view is down the z-
  axis; the axes can be labeled with x-y coordinate values.
* obj.SetLabelModeToDistance () - Specify the mode for
  labeling the scale axes. By default, the axes are labeled
  with the distance between points (centered at a distance
  of 0.0). Alternatively if you know that the view is down
  the z-axis; the axes can be labeled with x-y coordinate
  values.
* obj.SetLabelModeToXYCoordinates () - Set/Get the flags
  that control which of the four axes to display (top,
  bottom, left and right). By default, all the axes are
  displayed.
* obj.SetRightAxisVisibility (int ) - Set/Get the flags that
  control which of the four axes to display (top, bottom,
  left and right). By default, all the axes are displayed.
* int = obj.GetRightAxisVisibility () - Set/Get the flags
  that control which of the four axes to display (top,
  bottom, left and right). By default, all the axes are
  displayed.
* obj.RightAxisVisibilityOn () - Set/Get the flags that
  control which of the four axes to display (top, bottom,
  left and right). By default, all the axes are displayed.
* obj.RightAxisVisibilityOff () - Set/Get the flags that
  control which of the four axes to display (top, bottom,
  left and right). By default, all the axes are displayed.
* obj.SetTopAxisVisibility (int ) - Set/Get the flags that
  control which of the four axes to display (top, bottom,
  left and right). By default, all the axes are displayed.
* int = obj.GetTopAxisVisibility () - Set/Get the flags that
  control which of the four axes to display (top, bottom,
  left and right). By default, all the axes are displayed.
* obj.TopAxisVisibilityOn () - Set/Get the flags that
  control which of the four axes to display (top, bottom,
  left and right). By default, all the axes are displayed.
* obj.TopAxisVisibilityOff () - Set/Get the flags that
  control which of the four axes to display (top, bottom,
  left and right). By default, all the axes are displayed.
* obj.SetLeftAxisVisibility (int ) - Set/Get the flags that
  control which of the four axes to display (top, bottom,
  left and right). By default, all the axes are displayed.
* int = obj.GetLeftAxisVisibility () - Set/Get the flags
  that control which of the four axes to display (top,
  bottom, left and right). By default, all the axes are
  displayed.
* obj.LeftAxisVisibilityOn () - Set/Get the flags that
  control which of the four axes to display (top, bottom,
  left and right). By default, all the axes are displayed.
* obj.LeftAxisVisibilityOff () - Set/Get the flags that
  control which of the four axes to display (top, bottom,
  left and right). By default, all the axes are displayed.
* obj.SetBottomAxisVisibility (int ) - Set/Get the flags
  that control which of the four axes to display (top,
  bottom, left and right). By default, all the axes are
  displayed.
* int = obj.GetBottomAxisVisibility () - Set/Get the flags
  that control which of the four axes to display (top,
  bottom, left and right). By default, all the axes are
  displayed.
* obj.BottomAxisVisibilityOn () - Set/Get the flags that
  control which of the four axes to display (top, bottom,
  left and right). By default, all the axes are displayed.
* obj.BottomAxisVisibilityOff () - Set/Get the flags that
  control which of the four axes to display (top, bottom,
  left and right). By default, all the axes are displayed.
* obj.SetLegendVisibility (int ) - Indicate whether the
  legend scale should be displayed or not. The default is
  On.
* int = obj.GetLegendVisibility () - Indicate whether the
  legend scale should be displayed or not. The default is
  On.
* obj.LegendVisibilityOn () - Indicate whether the legend
  scale should be displayed or not. The default is On.
* obj.LegendVisibilityOff () - Indicate whether the legend
  scale should be displayed or not. The default is On.
* obj.AllAxesOn () - Convenience method that turns all the
  axes either on or off.
* obj.AllAxesOff () - Convenience method that turns all the
  axes either on or off.
* obj.AllAnnotationsOn () - Convenience method that turns
  all the axes and the legend scale.
* obj.AllAnnotationsOff () - Convenience method that turns
  all the axes and the legend scale.
* obj.SetRightBorderOffset (int ) - Set/Get the offset of
  the right axis from the border. This number is expressed
  in pixels, and represents the approximate distance of the
  axes from the sides of the renderer. The default is 50.
* int = obj.GetRightBorderOffsetMinValue () - Set/Get the
  offset of the right axis from the border. This number is
  expressed in pixels, and represents the approximate
  distance of the axes from the sides of the renderer. The
  default is 50.
* int = obj.GetRightBorderOffsetMaxValue () - Set/Get the
  offset of the right axis from the border. This number is
  expressed in pixels, and represents the approximate
  distance of the axes from the sides of the renderer. The
  default is 50.
* int = obj.GetRightBorderOffset () - Set/Get the offset of
  the right axis from the border. This number is expressed
  in pixels, and represents the approximate distance of the
  axes from the sides of the renderer. The default is 50.
* obj.SetTopBorderOffset (int ) - Set/Get the offset of the
  top axis from the border. This number is expressed in
  pixels, and represents the approximate distance of the
  axes from the sides of the renderer. The default is 30.
* int = obj.GetTopBorderOffsetMinValue () - Set/Get the
  offset of the top axis from the border. This number is
  expressed in pixels, and represents the approximate
  distance of the axes from the sides of the renderer. The
  default is 30.
* int = obj.GetTopBorderOffsetMaxValue () - Set/Get the
  offset of the top axis from the border. This number is
  expressed in pixels, and represents the approximate
  distance of the axes from the sides of the renderer. The
  default is 30.
* int = obj.GetTopBorderOffset () - Set/Get the offset of
  the top axis from the border. This number is expressed in
  pixels, and represents the approximate distance of the
  axes from the sides of the renderer. The default is 30.
* obj.SetLeftBorderOffset (int ) - Set/Get the offset of the
  left axis from the border. This number is expressed in
  pixels, and represents the approximate distance of the
  axes from the sides of the renderer. The default is 50.
* int = obj.GetLeftBorderOffsetMinValue () - Set/Get the
  offset of the left axis from the border. This number is
  expressed in pixels, and represents the approximate
  distance of the axes from the sides of the renderer. The
  default is 50.
* int = obj.GetLeftBorderOffsetMaxValue () - Set/Get the
  offset of the left axis from the border. This number is
  expressed in pixels, and represents the approximate
  distance of the axes from the sides of the renderer. The
  default is 50.
* int = obj.GetLeftBorderOffset () - Set/Get the offset of
  the left axis from the border. This number is expressed in
  pixels, and represents the approximate distance of the
  axes from the sides of the renderer. The default is 50.
* obj.SetBottomBorderOffset (int ) - Set/Get the offset of
  the bottom axis from the border. This number is expressed
  in pixels, and represents the approximate distance of the
  axes from the sides of the renderer. The default is 30.
* int = obj.GetBottomBorderOffsetMinValue () - Set/Get the
  offset of the bottom axis from the border. This number is
  expressed in pixels, and represents the approximate
  distance of the axes from the sides of the renderer. The
  default is 30.
* int = obj.GetBottomBorderOffsetMaxValue () - Set/Get the
  offset of the bottom axis from the border. This number is
  expressed in pixels, and represents the approximate
  distance of the axes from the sides of the renderer. The
  default is 30.
* int = obj.GetBottomBorderOffset () - Set/Get the offset of
  the bottom axis from the border. This number is expressed
  in pixels, and represents the approximate distance of the
  axes from the sides of the renderer. The default is 30.
* obj.SetCornerOffsetFactor (double ) - Get/Set the corner
  offset. This is the offset factor used to offset the axes
  at the corners. Default value is 2.0.
* double = obj.GetCornerOffsetFactorMinValue () - Get/Set
  the corner offset. This is the offset factor used to
  offset the axes at the corners. Default value is 2.0.
* double = obj.GetCornerOffsetFactorMaxValue () - Get/Set
  the corner offset. This is the offset factor used to
  offset the axes at the corners. Default value is 2.0.
* double = obj.GetCornerOffsetFactor () - Get/Set the corner
  offset. This is the offset factor used to offset the axes
  at the corners. Default value is 2.0.
* vtkTextProperty = obj.GetLegendTitleProperty () - Set/Get
  the labels text properties for the legend title and
  labels.
* vtkTextProperty = obj.GetLegendLabelProperty () - Set/Get
  the labels text properties for the legend title and
  labels.
* vtkAxisActor2D = obj.GetRightAxis () - These are methods
  to retrieve the vtkAxisActors used to represent the four
  axes that form this representation. Users may retrieve and
  then modify these axes to control their appearance.
* vtkAxisActor2D = obj.GetTopAxis () - These are methods to
  retrieve the vtkAxisActors used to represent the four axes
  that form this representation. Users may retrieve and then
  modify these axes to control their appearance.
* vtkAxisActor2D = obj.GetLeftAxis () - These are methods to
  retrieve the vtkAxisActors used to represent the four axes
  that form this representation. Users may retrieve and then
  modify these axes to control their appearance.
* vtkAxisActor2D = obj.GetBottomAxis () - These are methods
  to retrieve the vtkAxisActors used to represent the four
  axes that form this representation. Users may retrieve and
  then modify these axes to control their appearance.
* obj.BuildRepresentation (vtkViewport viewport)
* obj.GetActors2D (vtkPropCollection )
* obj.ReleaseGraphicsResources (vtkWindow )
* int = obj.RenderOverlay (vtkViewport )
* int = obj.RenderOpaqueGeometry (vtkViewport )


* FreeMat_Documentation
* Visualization_Toolkit_Hybrid_Classes
* Generated on Thu Jul 25 2013 17:18:33 for FreeMat by
  doxygen_ 1.8.1.1

