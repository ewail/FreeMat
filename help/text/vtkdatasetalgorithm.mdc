
 Usage

vtkDataSetAlgorithm is a convenience class to make writing
algorithms easier. It is also designed to help transition
old algorithms to the new pipeline architecture. Ther are
some assumptions and defaults made by this class you should
be aware of. This class defaults such that your filter will
have one input port and one output port. If that is not the
case simply change it with SetNumberOfInputPorts etc. See
this classes contstructor for the default. This class also
provides a FillInputPortInfo method that by default says
that all inputs will be DataSet. If that isn't the case then
please override this method in your subclass. This class
breaks out the downstream requests into seperate functions
such as RequestDataObject RequestData and
RequestInformation. The default implementation of
RequestDataObject will create an output data of the same
type as the input.
To create an instance of class vtkDataSetAlgorithm, simply
invoke its constructor as follows

    obj = vtkDataSetAlgorithm



 Methods

The class vtkDataSetAlgorithm has several methods that can
be used. They are listed below. Note that the documentation
is translated automatically from the VTK sources, and may
not be completely intelligible. When in doubt, consult the
VTK website. In the methods listed below, obj is an instance
of the vtkDataSetAlgorithm class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkDataSetAlgorithm = obj.NewInstance ()
* vtkDataSetAlgorithm = obj.SafeDownCast (vtkObject o)
* vtkDataSet = obj.GetOutput () - Get the output data object
  for a port on this algorithm.
* vtkDataSet = obj.GetOutput (int ) - Get the output data
  object for a port on this algorithm.
* vtkDataObject = obj.GetInput () - Get the input data
  object. This method is not recommended for use, but lots
  of old style filters use it.
* vtkPolyData = obj.GetPolyDataOutput () - Get the output as
  vtkPolyData.
* vtkStructuredPoints = obj.GetStructuredPointsOutput () -
  Get the output as vtkStructuredPoints.
* vtkImageData = obj.GetImageDataOutput () - Get the output
  as vtkStructuredPoints.
* vtkStructuredGrid = obj.GetStructuredGridOutput () - Get
  the output as vtkStructuredGrid.
* vtkUnstructuredGrid = obj.GetUnstructuredGridOutput () -
  Get the output as vtkUnstructuredGrid.
* vtkRectilinearGrid = obj.GetRectilinearGridOutput () - Get
  the output as vtkRectilinearGrid.
* obj.SetInput (vtkDataObject ) - Set an input of this
  algorithm. You should not override these methods because
  they are not the only way to connect a pipeline. Note that
  these methods support old-style pipeline connections. When
  writing new code you should use the more general
  vtkAlgorithm::SetInputConnection(). These methods
  transform the input index to the input port index, not an
  index of a connection within a single port.
* obj.SetInput (int , vtkDataObject ) - Set an input of this
  algorithm. You should not override these methods because
  they are not the only way to connect a pipeline. Note that
  these methods support old-style pipeline connections. When
  writing new code you should use the more general
  vtkAlgorithm::SetInputConnection(). These methods
  transform the input index to the input port index, not an
  index of a connection within a single port.
* obj.SetInput (vtkDataSet ) - Set an input of this
  algorithm. You should not override these methods because
  they are not the only way to connect a pipeline. Note that
  these methods support old-style pipeline connections. When
  writing new code you should use the more general
  vtkAlgorithm::SetInputConnection(). These methods
  transform the input index to the input port index, not an
  index of a connection within a single port.
* obj.SetInput (int , vtkDataSet ) - Set an input of this
  algorithm. You should not override these methods because
  they are not the only way to connect a pipeline. Note that
  these methods support old-style pipeline connections. When
  writing new code you should use the more general
  vtkAlgorithm::SetInputConnection(). These methods
  transform the input index to the input port index, not an
  index of a connection within a single port.
* obj.AddInput (vtkDataObject ) - Add an input of this
  algorithm. Note that these methods support old-style
  pipeline connections. When writing new code you should use
  the more general vtkAlgorithm::AddInputConnection(). See
  SetInput() for details.
* obj.AddInput (vtkDataSet ) - Add an input of this
  algorithm. Note that these methods support old-style
  pipeline connections. When writing new code you should use
  the more general vtkAlgorithm::AddInputConnection(). See
  SetInput() for details.
* obj.AddInput (int , vtkDataSet ) - Add an input of this
  algorithm. Note that these methods support old-style
  pipeline connections. When writing new code you should use
  the more general vtkAlgorithm::AddInputConnection(). See
  SetInput() for details.
* obj.AddInput (int , vtkDataObject ) - Add an input of this
  algorithm. Note that these methods support old-style
  pipeline connections. When writing new code you should use
  the more general vtkAlgorithm::AddInputConnection(). See
  SetInput() for details.


* FreeMat_Documentation
* Visualization_Toolkit_Filtering_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

