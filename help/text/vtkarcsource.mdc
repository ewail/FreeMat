
 Usage

vtkArcSource is a source object that creates an arc defined
by two endpoints and a center. The number of segments
composing the polyline is controlled by setting the object
resolution.
To create an instance of class vtkArcSource, simply invoke
its constructor as follows

    obj = vtkArcSource



 Methods

The class vtkArcSource has several methods that can be used.
They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkArcSource class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkArcSource = obj.NewInstance ()
* vtkArcSource = obj.SafeDownCast (vtkObject o)
* obj.SetPoint1 (double , double , double ) - Set position
  of first end point.
* obj.SetPoint1 (double a[3]) - Set position of first end
  point.
* double = obj. GetPoint1 () - Set position of first end
  point.
* obj.SetPoint2 (double , double , double ) - Set position
  of other end point.
* obj.SetPoint2 (double a[3]) - Set position of other end
  point.
* double = obj. GetPoint2 () - Set position of other end
  point.
* obj.SetCenter (double , double , double ) - Set position
  of the center of the circle that define the arc. Note: you
  can use the function vtkMath::Solve3PointCircle to find
  the center from 3 points located on a circle.
* obj.SetCenter (double a[3]) - Set position of the center
  of the circle that define the arc. Note: you can use the
  function vtkMath::Solve3PointCircle to find the center
  from 3 points located on a circle.
* double = obj. GetCenter () - Set position of the center of
  the circle that define the arc. Note: you can use the
  function vtkMath::Solve3PointCircle to find the center
  from 3 points located on a circle.
* obj.SetResolution (int ) - Divide line into resolution
  number of pieces. Note: if Resolution is set to 1
  (default), the arc is a straight line.
* int = obj.GetResolutionMinValue () - Divide line into
  resolution number of pieces. Note: if Resolution is set to
  1 (default), the arc is a straight line.
* int = obj.GetResolutionMaxValue () - Divide line into
  resolution number of pieces. Note: if Resolution is set to
  1 (default), the arc is a straight line.
* int = obj.GetResolution () - Divide line into resolution
  number of pieces. Note: if Resolution is set to 1
  (default), the arc is a straight line.
* obj.SetNegative (bool ) - Use the angle that is a negative
  coterminal of the vectors angle: the longest angle. Note:
  false by default.
* bool = obj.GetNegative () - Use the angle that is a
  negative coterminal of the vectors angle: the longest
  angle. Note: false by default.
* obj.NegativeOn () - Use the angle that is a negative
  coterminal of the vectors angle: the longest angle. Note:
  false by default.
* obj.NegativeOff () - Use the angle that is a negative
  coterminal of the vectors angle: the longest angle. Note:
  false by default.


* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:31 for FreeMat by
  doxygen_ 1.8.1.1

