
 Usage

vtkImplicitTextureCoords is a filter to generate 1D, 2D, or
3D texture coordinates from one, two, or three implicit
functions, respectively. In combinations with a
vtkBooleanTexture map (or another texture map of your own
creation), the texture coordinates can be used to highlight
(via color or intensity) or cut (via transparency) dataset
geometry without any complex geometric processing. (Note:
the texture coordinates are referred to as r-s-
t coordinates.)
The texture coordinates are automatically normalized to lie
between (0,1). Thus, no matter what the implicit functions
evaluate to, the resulting texture coordinates lie between
(0,1), with the zero implicit function value mapped to the
0.5 texture coordinates value. Depending upon the maximum
negative/positive implicit function values, the full (0,1)
range may not be occupied (i.e., the positive/negative
ranges are mapped using the same scale factor).
A boolean variable InvertTexture is available to flip the
texture coordinates around 0.5 (value 1.0 becomes 0.0, 0.25-
>0.75). This is equivalent to flipping the texture map (but
a whole lot easier).
To create an instance of class vtkImplicitTextureCoords,
simply invoke its constructor as follows

    obj = vtkImplicitTextureCoords



 Methods

The class vtkImplicitTextureCoords has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkImplicitTextureCoords class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkImplicitTextureCoords = obj.NewInstance ()
* vtkImplicitTextureCoords = obj.SafeDownCast (vtkObject o)
* obj.SetRFunction (vtkImplicitFunction ) - Specify an
  implicit function to compute the r texture coordinate.
* vtkImplicitFunction = obj.GetRFunction () - Specify an
  implicit function to compute the r texture coordinate.
* obj.SetSFunction (vtkImplicitFunction ) - Specify an
  implicit function to compute the s texture coordinate.
* vtkImplicitFunction = obj.GetSFunction () - Specify an
  implicit function to compute the s texture coordinate.
* obj.SetTFunction (vtkImplicitFunction ) - Specify an
  implicit function to compute the t texture coordinate.
* vtkImplicitFunction = obj.GetTFunction () - Specify an
  implicit function to compute the t texture coordinate.
* obj.SetFlipTexture (int ) - If enabled, this will flip the
  sense of inside and outside the implicit function (i.e., a
  rotation around the r-s-t=0.5 axis).
* int = obj.GetFlipTexture () - If enabled, this will flip
  the sense of inside and outside the implicit function
  (i.e., a rotation around the r-s-t=0.5 axis).
* obj.FlipTextureOn () - If enabled, this will flip the
  sense of inside and outside the implicit function (i.e., a
  rotation around the r-s-t=0.5 axis).
* obj.FlipTextureOff () - If enabled, this will flip the
  sense of inside and outside the implicit function (i.e., a
  rotation around the r-s-t=0.5 axis).


* FreeMat_Documentation
* Visualization_Toolkit_Graphics_Classes
* Generated on Thu Jul 25 2013 17:18:32 for FreeMat by
  doxygen_ 1.8.1.1

