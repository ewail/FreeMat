
 Usage

vtkSequencePass executes a list of render passes
sequentially. This class allows to define a sequence of
render passes at run time. The other solution to write a
sequence of render passes is to write an effective subclass
of vtkRenderPass.
As vtkSequencePass is a vtkRenderPass itself, it is possible
to have a hierarchy of render passes built at runtime.
To create an instance of class vtkSequencePass, simply
invoke its constructor as follows

    obj = vtkSequencePass



 Methods

The class vtkSequencePass has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkSequencePass class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkSequencePass = obj.NewInstance ()
* vtkSequencePass = obj.SafeDownCast (vtkObject o)
* obj.ReleaseGraphicsResources (vtkWindow w) - Release
  graphics resources and ask components to release their own
  resources.


    Precondition:
        w_exists: w!=0

* vtkRenderPassCollection = obj.GetPasses () - The ordered
  list of render passes to execute sequentially. If the
  pointer is NULL or the list is empty, it is silently
  ignored. There is no warning. Initial value is a NULL
  pointer.
* obj.SetPasses (vtkRenderPassCollection passes) - The
  ordered list of render passes to execute sequentially. If
  the pointer is NULL or the list is empty, it is silently
  ignored. There is no warning. Initial value is a NULL
  pointer.


* FreeMat_Documentation
* Visualization_Toolkit_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:35 for FreeMat by
  doxygen_ 1.8.1.1

