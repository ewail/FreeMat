
 Usage

To create an instance of class vtkInformationVector, simply
invoke its constructor as follows

    obj = vtkInformationVector



 Methods

The class vtkInformationVector has several methods that can
be used. They are listed below. Note that the documentation
is translated automatically from the VTK sources, and may
not be completely intelligible. When in doubt, consult the
VTK website. In the methods listed below, obj is an instance
of the vtkInformationVector class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkInformationVector = obj.NewInstance ()
* vtkInformationVector = obj.SafeDownCast (vtkObject o)
* int = obj.GetNumberOfInformationObjects () - Get/Set the
  number of information objects in the vector. Setting the
  number to larger than the current number will create empty
  vtkInformation instances. Setting the number to smaller
  than the current number will remove entries from higher
  indices.
* obj.SetNumberOfInformationObjects (int n) - Get/Set the
  number of information objects in the vector. Setting the
  number to larger than the current number will create empty
  vtkInformation instances. Setting the number to smaller
  than the current number will remove entries from higher
  indices.
* obj.SetInformationObject (int index, vtkInformation info)
  - Get/Set the vtkInformation instance stored at the given
  index in the vector. The vector will automatically expand
  to include the index given if necessary. Missing entries
  in-between will be filled with empty vtkInformation
  instances.
* vtkInformation = obj.GetInformationObject (int index) -
  Get/Set the vtkInformation instance stored at the given
  index in the vector. The vector will automatically expand
  to include the index given if necessary. Missing entries
  in-between will be filled with empty vtkInformation
  instances.
* obj.Append (vtkInformation info) - Append/Remove an
  information object.
* obj.Remove (vtkInformation info) - Append/Remove an
  information object.
* obj.Register (vtkObjectBase o) - Initiate garbage
  collection when a reference is removed.
* obj.UnRegister (vtkObjectBase o) - Initiate garbage
  collection when a reference is removed.
* obj.Copy (vtkInformationVector from, int deep) - Copy all
  information entries from the given vtkInformation
  instance. Any previously existing entries are removed. If
  deep==1, a deep copy of the information structure is
  performed (new instances of any contained vtkInformation
  and vtkInformationVector objects are created).


* FreeMat_Documentation
* Visualization_Toolkit_Common_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

