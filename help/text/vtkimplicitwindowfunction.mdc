
 Usage

vtkImplicitWindowFunction is used to modify the output of
another implicit function to lie within a specified
"window", or function range. This can be used to add
"thickness" to cutting or clipping functions.
This class works as follows. First, it evaluates the
function value of the user-specified implicit function.
Then, based on the window range specified, it maps the
function value into the window values specified.
To create an instance of class vtkImplicitWindowFunction,
simply invoke its constructor as follows

    obj = vtkImplicitWindowFunction



 Methods

The class vtkImplicitWindowFunction has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkImplicitWindowFunction class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkImplicitWindowFunction = obj.NewInstance ()
* vtkImplicitWindowFunction = obj.SafeDownCast (vtkObject o)
* double = obj.EvaluateFunction (double x[3])
* double = obj.EvaluateFunction (double x, double y, double
  z)
* obj.EvaluateGradient (double x[3], double n[3])
* obj.SetImplicitFunction (vtkImplicitFunction ) - Specify
  an implicit function to operate on.
* vtkImplicitFunction = obj.GetImplicitFunction () - Specify
  an implicit function to operate on.
* obj.SetWindowRange (double , double ) - Specify the range
  of function values which are considered to lie within the
  window. WindowRange[0] is assumed to be less than
  WindowRange[1].
* obj.SetWindowRange (double a[2]) - Specify the range of
  function values which are considered to lie within the
  window. WindowRange[0] is assumed to be less than
  WindowRange[1].
* double = obj. GetWindowRange () - Specify the range of
  function values which are considered to lie within the
  window. WindowRange[0] is assumed to be less than
  WindowRange[1].
* obj.SetWindowValues (double , double ) - Specify the range
  of output values that the window range is mapped into.
  This is effectively a scaling and shifting of the original
  function values.
* obj.SetWindowValues (double a[2]) - Specify the range of
  output values that the window range is mapped into. This
  is effectively a scaling and shifting of the original
  function values.
* double = obj. GetWindowValues () - Specify the range of
  output values that the window range is mapped into. This
  is effectively a scaling and shifting of the original
  function values.
* long = obj.GetMTime () - Override modified time retrieval
  because of object dependencies.
* obj.Register (vtkObjectBase o) - Participate in garbage
  collection.
* obj.UnRegister (vtkObjectBase o) - Participate in garbage
  collection.


* FreeMat_Documentation
* Visualization_Toolkit_Filtering_Classes
* Generated on Thu Jul 25 2013 17:18:30 for FreeMat by
  doxygen_ 1.8.1.1

