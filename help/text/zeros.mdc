
 Usage

Creates an array of zeros of the specified size. Two
seperate syntaxes are possible. The first syntax specifies
the array dimensions as a sequence of scalar dimensions:

     y = zeros(d1,d2,...,dn).

The resulting array has the given dimensions, and is filled
with all zeros. The type of y is double, a 64-bit floating
point array. To get arrays of other types, use the typecast
functions (e.g., uint8, int8, etc.). An alternative syntax
is to use the following notation:

     y = zeros(d1,d2,...,dn,classname)

where classname is one of 'double', 'single', 'int8',
'uint8', 'int16', 'uint16', 'int32', 'uint32', 'int64',
'uint64', 'float', 'logical'.
The second syntax specifies the array dimensions as a
vector, where each element in the vector specifies a
dimension length:

     y = zeros([d1,d2,...,dn]),

or

     y = zeros([d1,d2,...,dn],classname).

This syntax is more convenient for calling zeros using a
variable for the argument. In both cases, specifying only
one dimension results in a square matrix output.


 Example

The following examples demonstrate generation of some zero
arrays using the first form.

  --> zeros(2,3,2)

  ans =

  (:,:,1) =
   0 0 0
   0 0 0

  (:,:,2) =
   0 0 0
   0 0 0

  --> zeros(1,3)

  ans =
   0 0 0

The same expressions, using the second form.

  --> zeros([2,6])

  ans =
   0 0 0 0 0 0
   0 0 0 0 0 0

  --> zeros([1,3])

  ans =
   0 0 0

Finally, an example of using the type casting function
uint16 to generate an array of 16-bit unsigned integers with
zero values.

  --> uint16(zeros(3))

  ans =
   0 0 0
   0 0 0
   0 0 0

Here we use the second syntax where the class of the output
is specified explicitly

  --> zeros(3,'int16')

  ans =
   0 0 0
   0 0 0
   0 0 0


* FreeMat_Documentation
* Array_Generation_and_Manipulations
* Generated on Thu Jul 25 2013 17:17:13 for FreeMat by
  doxygen_ 1.8.1.1

