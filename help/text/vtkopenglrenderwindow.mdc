
 Usage

vtkOpenGLRenderWindow is a concrete implementation of the
abstract class vtkRenderWindow. vtkOpenGLRenderer interfaces
to the OpenGL graphics library. Application programmers
should normally use vtkRenderWindow instead of the OpenGL
specific version.
To create an instance of class vtkOpenGLRenderWindow, simply
invoke its constructor as follows

    obj = vtkOpenGLRenderWindow



 Methods

The class vtkOpenGLRenderWindow has several methods that can
be used. They are listed below. Note that the documentation
is translated automatically from the VTK sources, and may
not be completely intelligible. When in doubt, consult the
VTK website. In the methods listed below, obj is an instance
of the vtkOpenGLRenderWindow class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkOpenGLRenderWindow = obj.NewInstance ()
* vtkOpenGLRenderWindow = obj.SafeDownCast (vtkObject o)
* obj.StereoUpdate () - Update system if needed due to
  stereo rendering.
* int = obj.GetPixelData (int x, int y, int x2, int y2, int
  front, vtkUnsignedCharArray data) - Set/Get the pixel data
  of an image, transmitted as RGBRGB...
* int = obj.SetPixelData (int x, int y, int x2, int y2,
  string data, int front) - Set/Get the pixel data of an
  image, transmitted as RGBRGB...
* int = obj.SetPixelData (int x, int y, int x2, int y2,
  vtkUnsignedCharArray data, int front) - Set/Get the pixel
  data of an image, transmitted as RGBRGB...
* int = obj.GetRGBAPixelData (int x, int y, int x2, int y2,
  int front, vtkFloatArray data) - Set/Get the pixel data of
  an image, transmitted as RGBARGBA...
* int = obj.SetRGBAPixelData (int x, int y, int x2, int y2,
  float data, int front, int blend) - Set/Get the pixel data
  of an image, transmitted as RGBARGBA...
* int = obj.SetRGBAPixelData (int x, int y, int x2, int y2,
  vtkFloatArray data, int front, int blend) - Set/Get the
  pixel data of an image, transmitted as RGBARGBA...
* obj.ReleaseRGBAPixelData (float data) - Set/Get the pixel
  data of an image, transmitted as RGBARGBA...
* int = obj.GetRGBACharPixelData (int x, int y, int x2, int
  y2, int front, vtkUnsignedCharArray data) - Set/Get the
  pixel data of an image, transmitted as RGBARGBA...
* int = obj.SetRGBACharPixelData (int x, int y, int x2, int
  y2, string data, int front, int blend) - Set/Get the pixel
  data of an image, transmitted as RGBARGBA...
* int = obj.SetRGBACharPixelData (int x, int y, int x2, int
  y2, vtkUnsignedCharArray data, int front, int blend) -
  Set/Get the pixel data of an image, transmitted as
  RGBARGBA...
* int = obj.GetZbufferData (int x1, int y1, int x2, int y2,
  float z) - Set/Get the zbuffer data from an image
* int = obj.GetZbufferData (int x1, int y1, int x2, int y2,
  vtkFloatArray z) - Set/Get the zbuffer data from an image
* int = obj.SetZbufferData (int x1, int y1, int x2, int y2,
  float buffer) - Set/Get the zbuffer data from an image
* int = obj.SetZbufferData (int x1, int y1, int x2, int y2,
  vtkFloatArray buffer) - Set/Get the zbuffer data from an
  image
* int = obj.GetDepthBufferSize () - Get the size of the
  depth buffer.
* int = obj.GetColorBufferSizes (int rgba) - Get the size of
  the color buffer. Returns 0 if not able to determine
  otherwise sets R G B and A into buffer.
* obj.OpenGLInit () - Initialize OpenGL for this window.
* int = obj.GetBackLeftBuffer () - Return the OpenGL name of
  the back left buffer. It is GL_BACK_LEFT if GL is bound to
  the window-system-provided framebuffer. It is vtkgl::
  COLOR_ATTACHMENT0_EXT if GL is bound to an application-
  created framebuffer object (GPU-based offscreen rendering)
  It is used by vtkOpenGLCamera.
* int = obj.GetBackRightBuffer () - Return the OpenGL name
  of the back right buffer. It is GL_BACK_RIGHT if GL is
  bound to the window-system-provided framebuffer. It is
  vtkgl::COLOR_ATTACHMENT0_EXT+1 if GL is bound to an
  application-created framebuffer object (GPU-based
  offscreen rendering) It is used by vtkOpenGLCamera.
* int = obj.GetFrontLeftBuffer () - Return the OpenGL name
  of the front left buffer. It is GL_FRONT_LEFT if GL is
  bound to the window-system-provided framebuffer. It is
  vtkgl::COLOR_ATTACHMENT0_EXT if GL is bound to an
  application-created framebuffer object (GPU-based
  offscreen rendering) It is used by vtkOpenGLCamera.
* int = obj.GetFrontRightBuffer () - Return the OpenGL name
  of the front right buffer. It is GL_FRONT_RIGHT if GL is
  bound to the window-system-provided framebuffer. It is
  vtkgl::COLOR_ATTACHMENT0_EXT+1 if GL is bound to an
  application-created framebuffer object (GPU-based
  offscreen rendering) It is used by vtkOpenGLCamera.
* int = obj.GetBackBuffer () - Return the OpenGL name of the
  back left buffer. It is GL_BACK if GL is bound to the
  window-system-provided framebuffer. It is vtkgl::
  COLOR_ATTACHMENT0_EXT if GL is bound to an application-
  created framebuffer object (GPU-based offscreen rendering)
  It is used by vtkOpenGLCamera.
* int = obj.GetFrontBuffer () - Return the OpenGL name of
  the front left buffer. It is GL_FRONT if GL is bound to
  the window-system-provided framebuffer. It is vtkgl::
  COLOR_ATTACHMENT0_EXT if GL is bound to an application-
  created framebuffer object (GPU-based offscreen rendering)
  It is used by vtkOpenGLCamera.
* obj.CheckGraphicError () - Update graphic error status,
  regardless of ReportGraphicErrors flag. It means this
  method can be used in any context and is not restricted to
  debug mode.
* int = obj.HasGraphicError () - Return the last graphic
  error status. Initial value is false.
* string = obj.GetLastGraphicErrorString () - Return a
  string matching the last graphic error status.
* vtkOpenGLExtensionManager = obj.GetExtensionManager () -
  Returns the extension manager. A new one will be created
  if one hasn't already been set up.
* vtkOpenGLHardwareSupport = obj.GetHardwareSupport () -
  Returns an Hardware Support object. A new one will be
  created if one hasn't already been set up.
* obj.WaitForCompletion () - Block the thread until the
  actual rendering is finished(). Useful for measurement
  only.


* FreeMat_Documentation
* Visualization_Toolkit_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:35 for FreeMat by
  doxygen_ 1.8.1.1

