
 Usage

The vtkPolyDataToImageStencil class will convert a surface
mesh into an image stencil that can be used to mask an image
with vtkImageStencil, or used to calculate statistics within
the enclosed region with vtkImageAccumulate.
To create an instance of class vtkPolyDataToImageStencil,
simply invoke its constructor as follows

    obj = vtkPolyDataToImageStencil



 Methods

The class vtkPolyDataToImageStencil has several methods that
can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkPolyDataToImageStencil class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkPolyDataToImageStencil = obj.NewInstance ()
* vtkPolyDataToImageStencil = obj.SafeDownCast (vtkObject o)
* obj.SetInput (vtkPolyData ) - Specify the implicit
  function to convert into a stencil.
* vtkPolyData = obj.GetInput () - Specify the implicit
  function to convert into a stencil.
* obj.SetInformationInput (vtkImageData ) - Set a
  vtkImageData that has the Spacing, Origin, and WholeExtent
  that will be used for the stencil. This input should be
  set to the image that you wish to apply the stencil to. If
  you use this method, then any values set with the
  SetOutputSpacing, SetOutputOrigin, and
  SetOutputWholeExtent methods will be ignored.
* vtkImageData = obj.GetInformationInput () - Set a
  vtkImageData that has the Spacing, Origin, and WholeExtent
  that will be used for the stencil. This input should be
  set to the image that you wish to apply the stencil to. If
  you use this method, then any values set with the
  SetOutputSpacing, SetOutputOrigin, and
  SetOutputWholeExtent methods will be ignored.
* obj.SetOutputOrigin (double , double , double ) - Set the
  Origin to be used for the stencil. It should be set to the
  Origin of the image you intend to apply the stencil to.
  The default value is (0,0,0).
* obj.SetOutputOrigin (double a[3]) - Set the Origin to be
  used for the stencil. It should be set to the Origin of
  the image you intend to apply the stencil to. The default
  value is (0,0,0).
* double = obj. GetOutputOrigin () - Set the Origin to be
  used for the stencil. It should be set to the Origin of
  the image you intend to apply the stencil to. The default
  value is (0,0,0).
* obj.SetOutputSpacing (double , double , double ) - Set the
  Spacing to be used for the stencil. It should be set to
  the Spacing of the image you intend to apply the stencil
  to. The default value is (1,1,1)
* obj.SetOutputSpacing (double a[3]) - Set the Spacing to be
  used for the stencil. It should be set to the Spacing of
  the image you intend to apply the stencil to. The default
  value is (1,1,1)
* double = obj. GetOutputSpacing () - Set the Spacing to be
  used for the stencil. It should be set to the Spacing of
  the image you intend to apply the stencil to. The default
  value is (1,1,1)
* obj.SetOutputWholeExtent (int , int , int , int , int ,
  int ) - Set the whole extent for the stencil (anything
  outside this extent will be considered to be "outside" the
  stencil). If this is not set, then the stencil will always
  use the requested UpdateExtent as the stencil extent.
* obj.SetOutputWholeExtent (int a[6]) - Set the whole extent
  for the stencil (anything outside this extent will be
  considered to be "outside" the stencil). If this is not
  set, then the stencil will always use the requested
  UpdateExtent as the stencil extent.
* int = obj. GetOutputWholeExtent () - Set the whole extent
  for the stencil (anything outside this extent will be
  considered to be "outside" the stencil). If this is not
  set, then the stencil will always use the requested
  UpdateExtent as the stencil extent.
* obj.SetTolerance (double ) - The tolerance to apply in
  when determining whether a voxel is inside the stencil,
  given as a fraction of a voxel. Only used in X and Y, not
  in Z.
* double = obj.GetToleranceMinValue () - The tolerance to
  apply in when determining whether a voxel is inside the
  stencil, given as a fraction of a voxel. Only used in X
  and Y, not in Z.
* double = obj.GetToleranceMaxValue () - The tolerance to
  apply in when determining whether a voxel is inside the
  stencil, given as a fraction of a voxel. Only used in X
  and Y, not in Z.
* double = obj.GetTolerance () - The tolerance to apply in
  when determining whether a voxel is inside the stencil,
  given as a fraction of a voxel. Only used in X and Y, not
  in Z.


* FreeMat_Documentation
* Visualization_Toolkit_Hybrid_Classes
* Generated on Thu Jul 25 2013 17:18:33 for FreeMat by
  doxygen_ 1.8.1.1

