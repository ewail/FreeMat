
 Usage

This class is deprecated and will be removed from VTK in a
future release. Use vtkLabelPlacementMapper instead.
This should probably be a mapper unto itself (given that the
polydata output could be large and will realistically always
be iterated over exactly once before being tossed for the
next frame of the render).
In any event, it takes as input one (or more, eventually)
vtkLabelHierarchies that represent prioritized lists of
labels sorted by their placement in space. As output, it
provides vtkPolyData containing only VTK_QUAD cells, each
representing a single label from the input. Each
quadrilateral has cell data indicating what label in the
input it corresponds to (via an array named "LabelId").
To create an instance of class vtkLabelPlacer, simply invoke
its constructor as follows

    obj = vtkLabelPlacer



 Methods

The class vtkLabelPlacer has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkLabelPlacer class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkLabelPlacer = obj.NewInstance ()
* vtkLabelPlacer = obj.SafeDownCast (vtkObject o)
* vtkRenderer = obj.GetRenderer ()
* obj.SetRenderer (vtkRenderer )
* vtkCoordinate = obj.GetAnchorTransform ()
* obj.SetGravity (int gravity) - The placement of the label
  relative to the anchor point.
* int = obj.GetGravity () - The placement of the label
  relative to the anchor point.
* obj.SetMaximumLabelFraction (double ) - The maximum amount
  of screen space labels can take up before placement
  terminates.
* double = obj.GetMaximumLabelFractionMinValue () - The
  maximum amount of screen space labels can take up before
  placement terminates.
* double = obj.GetMaximumLabelFractionMaxValue () - The
  maximum amount of screen space labels can take up before
  placement terminates.
* double = obj.GetMaximumLabelFraction () - The maximum
  amount of screen space labels can take up before placement
  terminates.
* obj.SetIteratorType (int ) - The type of iterator used
  when traversing the labels. May be vtkLabelHierarchy::
  FRUSTUM or vtkLabelHierarchy::FULL_SORT.
* int = obj.GetIteratorType () - The type of iterator used
  when traversing the labels. May be vtkLabelHierarchy::
  FRUSTUM or vtkLabelHierarchy::FULL_SORT.
* obj.SetUseUnicodeStrings (bool ) - Set whether, or not, to
  use unicode strings.
* bool = obj.GetUseUnicodeStrings () - Set whether, or not,
  to use unicode strings.
* obj.UseUnicodeStringsOn () - Set whether, or not, to use
  unicode strings.
* obj.UseUnicodeStringsOff () - Set whether, or not, to use
  unicode strings.
* long = obj.GetMTime ()
* bool = obj.GetPositionsAsNormals () - Use label anchor
  point coordinates as normal vectors and eliminate those
  pointing away from the camera. Valid only when points are
  on a sphere centered at the origin (such as a 3D
  geographic view). Off by default.
* obj.SetPositionsAsNormals (bool ) - Use label anchor point
  coordinates as normal vectors and eliminate those pointing
  away from the camera. Valid only when points are on a
  sphere centered at the origin (such as a 3D geographic
  view). Off by default.
* obj.PositionsAsNormalsOn () - Use label anchor point
  coordinates as normal vectors and eliminate those pointing
  away from the camera. Valid only when points are on a
  sphere centered at the origin (such as a 3D geographic
  view). Off by default.
* obj.PositionsAsNormalsOff () - Use label anchor point
  coordinates as normal vectors and eliminate those pointing
  away from the camera. Valid only when points are on a
  sphere centered at the origin (such as a 3D geographic
  view). Off by default.
* bool = obj.GetGeneratePerturbedLabelSpokes () - Enable
  drawing spokes (lines) to anchor point coordinates that
  were perturbed for being coincident with other anchor
  point coordinates.
* obj.SetGeneratePerturbedLabelSpokes (bool ) - Enable
  drawing spokes (lines) to anchor point coordinates that
  were perturbed for being coincident with other anchor
  point coordinates.
* obj.GeneratePerturbedLabelSpokesOn () - Enable drawing
  spokes (lines) to anchor point coordinates that were
  perturbed for being coincident with other anchor point
  coordinates.
* obj.GeneratePerturbedLabelSpokesOff () - Enable drawing
  spokes (lines) to anchor point coordinates that were
  perturbed for being coincident with other anchor point
  coordinates.
* bool = obj.GetUseDepthBuffer () - Use the depth buffer to
  test each label to see if it should not be displayed if it
  would be occluded by other objects in the scene. Off by
  default.
* obj.SetUseDepthBuffer (bool ) - Use the depth buffer to
  test each label to see if it should not be displayed if it
  would be occluded by other objects in the scene. Off by
  default.
* obj.UseDepthBufferOn () - Use the depth buffer to test
  each label to see if it should not be displayed if it
  would be occluded by other objects in the scene. Off by
  default.
* obj.UseDepthBufferOff () - Use the depth buffer to test
  each label to see if it should not be displayed if it
  would be occluded by other objects in the scene. Off by
  default.
* bool = obj.GetOutputTraversedBounds () - In the second
  output, output the geometry of the traversed octree nodes.
* obj.SetOutputTraversedBounds (bool ) - In the second
  output, output the geometry of the traversed octree nodes.
* obj.OutputTraversedBoundsOn () - In the second output,
  output the geometry of the traversed octree nodes.
* obj.OutputTraversedBoundsOff () - In the second output,
  output the geometry of the traversed octree nodes.
* int = obj.GetOutputCoordinateSystem () - Set/get the
  coordinate system used for output labels. The output
  datasets may have point coordinates reported in the world
  space or display space.
* obj.SetOutputCoordinateSystem (int ) - Set/get the
  coordinate system used for output labels. The output
  datasets may have point coordinates reported in the world
  space or display space.
* int = obj.GetOutputCoordinateSystemMinValue () - Set/get
  the coordinate system used for output labels. The output
  datasets may have point coordinates reported in the world
  space or display space.
* int = obj.GetOutputCoordinateSystemMaxValue () - Set/get
  the coordinate system used for output labels. The output
  datasets may have point coordinates reported in the world
  space or display space.
* obj.OutputCoordinateSystemWorld () - Set/get the
  coordinate system used for output labels. The output
  datasets may have point coordinates reported in the world
  space or display space.
* obj.OutputCoordinateSystemDisplay ()


* FreeMat_Documentation
* Visualization_Toolkit_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:35 for FreeMat by
  doxygen_ 1.8.1.1

