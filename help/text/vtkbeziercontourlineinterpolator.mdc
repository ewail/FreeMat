
 Usage

The line interpolator interpolates supplied nodes (see
InterpolateLine) with bezier line segments. The finess of
the curve may be controlled using SetMaximumCurveError and
SetMaximumNumberOfLineSegments.
To create an instance of class
vtkBezierContourLineInterpolator, simply invoke its
constructor as follows

    obj = vtkBezierContourLineInterpolator



 Methods

The class vtkBezierContourLineInterpolator has several
methods that can be used. They are listed below. Note that
the documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkBezierContourLineInterpolator
class.

* string = obj.GetClassName () - Standard methods for
  instances of this class.
* int = obj.IsA (string name) - Standard methods for
  instances of this class.
* vtkBezierContourLineInterpolator = obj.NewInstance () -
  Standard methods for instances of this class.
* vtkBezierContourLineInterpolator = obj.SafeDownCast
  (vtkObject o) - Standard methods for instances of this
  class.
* int = obj.InterpolateLine (vtkRenderer ren,
  vtkContourRepresentation rep, int idx1, int idx2)
* obj.SetMaximumCurveError (double ) - The difference
  between a line segment connecting two points and the curve
  connecting the same points. In the limit of the length of
  the curve dx -> 0, the two values will be the same. The
  smaller this number, the finer the bezier curve will be
  interpolated. Default is 0.005
* double = obj.GetMaximumCurveErrorMinValue () - The
  difference between a line segment connecting two points
  and the curve connecting the same points. In the limit of
  the length of the curve dx -> 0, the two values will be
  the same. The smaller this number, the finer the bezier
  curve will be interpolated. Default is 0.005
* double = obj.GetMaximumCurveErrorMaxValue () - The
  difference between a line segment connecting two points
  and the curve connecting the same points. In the limit of
  the length of the curve dx -> 0, the two values will be
  the same. The smaller this number, the finer the bezier
  curve will be interpolated. Default is 0.005
* double = obj.GetMaximumCurveError () - The difference
  between a line segment connecting two points and the curve
  connecting the same points. In the limit of the length of
  the curve dx -> 0, the two values will be the same. The
  smaller this number, the finer the bezier curve will be
  interpolated. Default is 0.005
* obj.SetMaximumCurveLineSegments (int ) - Maximum number of
  bezier line segments between two nodes. Larger values
  create a finer interpolation. Default is 100.
* int = obj.GetMaximumCurveLineSegmentsMinValue () - Maximum
  number of bezier line segments between two nodes. Larger
  values create a finer interpolation. Default is 100.
* int = obj.GetMaximumCurveLineSegmentsMaxValue () - Maximum
  number of bezier line segments between two nodes. Larger
  values create a finer interpolation. Default is 100.
* int = obj.GetMaximumCurveLineSegments () - Maximum number
  of bezier line segments between two nodes. Larger values
  create a finer interpolation. Default is 100.
* obj.GetSpan (int nodeIndex, vtkIntArray nodeIndices,
  vtkContourRepresentation rep) - Span of the interpolator.
  ie. the number of control points its supposed to
  interpolate given a node.
  The first argument is the current nodeIndex. ie, you'd be
  trying to interpolate between nodes "nodeIndex" and
  "nodeIndex-1", unless you're closing the contour in which
  case, you're trying to interpolate "nodeIndex" and
  "Node=0". The node span is returned in a vtkIntArray.
  The node span is returned in a vtkIntArray. The node span
  returned by this interpolator will be a 2-tuple with a
  span of 4.


* FreeMat_Documentation
* Visualization_Toolkit_Widget_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

