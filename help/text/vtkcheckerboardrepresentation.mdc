
 Usage

The vtkCheckerboardRepresentation is used to implement the
representation of the vtkCheckerboardWidget. The user can
adjust the number of divisions in each of the i-j directions
in a 2D image. A frame appears around the vtkImageActor with
sliders along each side of the frame. The user can
interactively adjust the sliders to the desired number of
checkerboard subdivisions. The representation uses four
instances of vtkSliderRepresentation3D to implement itself.
To create an instance of class
vtkCheckerboardRepresentation, simply invoke its constructor
as follows

    obj = vtkCheckerboardRepresentation



 Methods

The class vtkCheckerboardRepresentation has several methods
that can be used. They are listed below. Note that the
documentation is translated automatically from the VTK
sources, and may not be completely intelligible. When in
doubt, consult the VTK website. In the methods listed below,
obj is an instance of the vtkCheckerboardRepresentation
class.

* string = obj.GetClassName () - Standard VTK methods.
* int = obj.IsA (string name) - Standard VTK methods.
* vtkCheckerboardRepresentation = obj.NewInstance () -
  Standard VTK methods.
* vtkCheckerboardRepresentation = obj.SafeDownCast
  (vtkObject o) - Standard VTK methods.
* obj.SetCheckerboard (vtkImageCheckerboard chkrbrd) -
  Specify an instance of vtkImageCheckerboard to manipulate.
* vtkImageCheckerboard = obj.GetCheckerboard () - Specify an
  instance of vtkImageCheckerboard to manipulate.
* obj.SetImageActor (vtkImageActor imageActor) - Specify an
  instance of vtkImageActor to decorate.
* vtkImageActor = obj.GetImageActor () - Specify an instance
  of vtkImageActor to decorate.
* obj.SetCornerOffset (double ) - Specify the offset of the
  ends of the sliders (on the boundary edges of the image)
  from the corner of the image. The offset is expressed as a
  normalized fraction of the border edges.
* double = obj.GetCornerOffsetMinValue () - Specify the
  offset of the ends of the sliders (on the boundary edges
  of the image) from the corner of the image. The offset is
  expressed as a normalized fraction of the border edges.
* double = obj.GetCornerOffsetMaxValue () - Specify the
  offset of the ends of the sliders (on the boundary edges
  of the image) from the corner of the image. The offset is
  expressed as a normalized fraction of the border edges.
* double = obj.GetCornerOffset () - Specify the offset of
  the ends of the sliders (on the boundary edges of the
  image) from the corner of the image. The offset is
  expressed as a normalized fraction of the border edges.
* obj.SliderValueChanged (int sliderNum) - This method is
  invoked by the vtkCheckerboardWidget() when a value of
  some slider has changed.
* obj.SetTopRepresentation (vtkSliderRepresentation3D ) -
  Set and get the instances of vtkSliderRepresention used to
  implement this representation. Normally default
  representations are created, but you can specify the ones
  you want to use.
* obj.SetRightRepresentation (vtkSliderRepresentation3D ) -
  Set and get the instances of vtkSliderRepresention used to
  implement this representation. Normally default
  representations are created, but you can specify the ones
  you want to use.
* obj.SetBottomRepresentation (vtkSliderRepresentation3D ) -
  Set and get the instances of vtkSliderRepresention used to
  implement this representation. Normally default
  representations are created, but you can specify the ones
  you want to use.
* obj.SetLeftRepresentation (vtkSliderRepresentation3D ) -
  Set and get the instances of vtkSliderRepresention used to
  implement this representation. Normally default
  representations are created, but you can specify the ones
  you want to use.
* vtkSliderRepresentation3D = obj.GetTopRepresentation () -
  Set and get the instances of vtkSliderRepresention used to
  implement this representation. Normally default
  representations are created, but you can specify the ones
  you want to use.
* vtkSliderRepresentation3D = obj.GetRightRepresentation ()
  - Set and get the instances of vtkSliderRepresention used
  to implement this representation. Normally default
  representations are created, but you can specify the ones
  you want to use.
* vtkSliderRepresentation3D = obj.GetBottomRepresentation ()
  - Set and get the instances of vtkSliderRepresention used
  to implement this representation. Normally default
  representations are created, but you can specify the ones
  you want to use.
* vtkSliderRepresentation3D = obj.GetLeftRepresentation () -
  Set and get the instances of vtkSliderRepresention used to
  implement this representation. Normally default
  representations are created, but you can specify the ones
  you want to use.
* obj.BuildRepresentation () - Methods required by
  superclass.
* obj.GetActors (vtkPropCollection ) - Methods required by
  superclass.
* obj.ReleaseGraphicsResources (vtkWindow w) - Methods
  required by superclass.
* int = obj.RenderOverlay (vtkViewport viewport) - Methods
  required by superclass.
* int = obj.RenderOpaqueGeometry (vtkViewport viewport) -
  Methods required by superclass.
* int = obj.RenderTranslucentPolygonalGeometry (vtkViewport
  viewport) - Methods required by superclass.
* int = obj.HasTranslucentPolygonalGeometry () - Methods
  required by superclass.


* FreeMat_Documentation
* Visualization_Toolkit_Widget_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

