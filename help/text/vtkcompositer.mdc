
 Usage

vtkCompositer operates in multiple processes. Each
compositer has a render window. They use
vtkMultiProcessControllers to communicate the color and
depth buffer to process 0's render window. It will not
handle transparency well.
To create an instance of class vtkCompositer, simply invoke
its constructor as follows

    obj = vtkCompositer



 Methods

The class vtkCompositer has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkCompositer class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkCompositer = obj.NewInstance ()
* vtkCompositer = obj.SafeDownCast (vtkObject o)
* obj.CompositeBuffer (vtkDataArray pBuf, vtkFloatArray
  zBuf, vtkDataArray pTmp, vtkFloatArray zTmp) - This method
  gets called on every process. The final image gets put
  into pBuf and zBuf.
* obj.SetController (vtkMultiProcessController ) - Access to
  the controller.
* vtkMultiProcessController = obj.GetController () - Access
  to the controller.
* obj.SetNumberOfProcesses (int ) - A hack to get a sub
  world until I can get communicators working.
* int = obj.GetNumberOfProcesses () - A hack to get a sub
  world until I can get communicators working.


* FreeMat_Documentation
* Visualization_Toolkit_Parallel_Classes
* Generated on Thu Jul 25 2013 17:18:34 for FreeMat by
  doxygen_ 1.8.1.1

