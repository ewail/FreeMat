
 Usage

This class serves as the geometrical representation of a
vtkHandleWidget. The handle can be represented by an
arbitrary polygonal data (vtkPolyData), set via SetHandle
(vtkPolyData *). The actual position of the handle will be
initially assumed to be (0,0,0). You can specify an offset
from this position if desired. This class differs from
vtkPolygonalHandleRepresentation3D in that the handle will
always remain front facing, ie it maintains a fixed
orientation with respect to the camera. This is done by
using vtkFollowers internally to render the actors.
To create an instance of class
vtkAbstractPolygonalHandleRepresentation3D, simply invoke
its constructor as follows

    obj = vtkAbstractPolygonalHandleRepresentation3D



 Methods

The class vtkAbstractPolygonalHandleRepresentation3D has
several methods that can be used. They are listed below.
Note that the documentation is translated automatically from
the VTK sources, and may not be completely intelligible.
When in doubt, consult the VTK website. In the methods
listed below, obj is an instance of the
vtkAbstractPolygonalHandleRepresentation3D class.

* string = obj.GetClassName () - Standard methods for
  instances of this class.
* int = obj.IsA (string name) - Standard methods for
  instances of this class.
* vtkAbstractPolygonalHandleRepresentation3D =
  obj.NewInstance () - Standard methods for instances of
  this class.
* vtkAbstractPolygonalHandleRepresentation3D =
  obj.SafeDownCast (vtkObject o) - Standard methods for
  instances of this class.
* obj.SetWorldPosition (double p[3]) - Set the position of
  the point in world and display coordinates.
* obj.SetDisplayPosition (double p[3]) - Set the position of
  the point in world and display coordinates.
* obj.SetHandle (vtkPolyData ) - Set/get the handle
  polydata.
* vtkPolyData = obj.GetHandle () - Set/get the handle
  polydata.
* obj.SetProperty (vtkProperty ) - Set/Get the handle
  properties when unselected and selected.
* obj.SetSelectedProperty (vtkProperty ) - Set/Get the
  handle properties when unselected and selected.
* vtkProperty = obj.GetProperty () - Set/Get the handle
  properties when unselected and selected.
* vtkProperty = obj.GetSelectedProperty () - Set/Get the
  handle properties when unselected and selected.
* vtkAbstractTransform = obj.GetTransform () - Get the
  transform used to transform the generic handle polydata
  before placing it in the render window
* obj.BuildRepresentation () - Methods to make this class
  properly act like a vtkWidgetRepresentation.
* obj.StartWidgetInteraction (double eventPos[2]) - Methods
  to make this class properly act like a
  vtkWidgetRepresentation.
* obj.WidgetInteraction (double eventPos[2]) - Methods to
  make this class properly act like a
  vtkWidgetRepresentation.
* int = obj.ComputeInteractionState (int X, int Y, int
  modify) - Methods to make this class properly act like a
  vtkWidgetRepresentation.
* obj.ShallowCopy (vtkProp prop) - Methods to make this
  class behave as a vtkProp.
* obj.DeepCopy (vtkProp prop) - Methods to make this class
  behave as a vtkProp.
* obj.GetActors (vtkPropCollection ) - Methods to make this
  class behave as a vtkProp.
* obj.ReleaseGraphicsResources (vtkWindow ) - Methods to
  make this class behave as a vtkProp.
* int = obj.RenderOpaqueGeometry (vtkViewport viewport) -
  Methods to make this class behave as a vtkProp.
* int = obj.RenderTranslucentPolygonalGeometry (vtkViewport
  viewport) - Methods to make this class behave as a
  vtkProp.
* int = obj.HasTranslucentPolygonalGeometry () - Methods to
  make this class behave as a vtkProp.
* obj.SetLabelVisibility (int ) - A label may be associated
  with the seed. The string can be set via SetLabelText. The
  visibility of the label can be turned on / off.
* int = obj.GetLabelVisibility () - A label may be
  associated with the seed. The string can be set via
  SetLabelText. The visibility of the label can be turned on
  / off.
* obj.LabelVisibilityOn () - A label may be associated with
  the seed. The string can be set via SetLabelText. The
  visibility of the label can be turned on / off.
* obj.LabelVisibilityOff () - A label may be associated with
  the seed. The string can be set via SetLabelText. The
  visibility of the label can be turned on / off.
* obj.SetLabelText (string label) - A label may be
  associated with the seed. The string can be set via
  SetLabelText. The visibility of the label can be turned on
  / off.
* string = obj.GetLabelText () - A label may be associated
  with the seed. The string can be set via SetLabelText. The
  visibility of the label can be turned on / off.
* obj.SetLabelTextScale (double scale[3]) - Scale text (font
  size along each dimension).
* vtkFollower = obj.GetLabelTextActor () - Get the label
  text actor
* obj.SetUniformScale (double scale) - The handle may be
  scaled uniformly in all three dimensions using this API.
  The handle can also be scaled interactively using the
  right mouse button.
* obj.SetHandleVisibility (int ) - Toogle the visibility of
  the handle on and off
* int = obj.GetHandleVisibility () - Toogle the visibility
  of the handle on and off
* obj.HandleVisibilityOn () - Toogle the visibility of the
  handle on and off
* obj.HandleVisibilityOff () - Toogle the visibility of the
  handle on and off


* FreeMat_Documentation
* Visualization_Toolkit_Widget_Classes
* Generated on Thu Jul 25 2013 17:18:36 for FreeMat by
  doxygen_ 1.8.1.1

