
 Usage

vtkPolyDataMapper is a class that maps polygonal data (i.e.,
vtkPolyData) to graphics primitives. vtkPolyDataMapper
serves as a superclass for device-specific poly data
mappers, that actually do the mapping to the rendering/
graphics hardware/software.
To create an instance of class vtkPolyDataMapper, simply
invoke its constructor as follows

    obj = vtkPolyDataMapper



 Methods

The class vtkPolyDataMapper has several methods that can be
used. They are listed below. Note that the documentation is
translated automatically from the VTK sources, and may not
be completely intelligible. When in doubt, consult the VTK
website. In the methods listed below, obj is an instance of
the vtkPolyDataMapper class.

* string = obj.GetClassName ()
* int = obj.IsA (string name)
* vtkPolyDataMapper = obj.NewInstance ()
* vtkPolyDataMapper = obj.SafeDownCast (vtkObject o)
* obj.RenderPiece (vtkRenderer ren, vtkActor act) -
  Implemented by sub classes. Actual rendering is done here.
* obj.Render (vtkRenderer ren, vtkActor act) - This calls
  RenderPiece (in a for loop is streaming is necessary).
* obj.SetInput (vtkPolyData in) - Specify the input data to
  map.
* vtkPolyData = obj.GetInput () - Specify the input data to
  map.
* obj.Update () - Update that sets the update piece first.
* obj.SetPiece (int ) - If you want only a part of the data,
  specify by setting the piece.
* int = obj.GetPiece () - If you want only a part of the
  data, specify by setting the piece.
* obj.SetNumberOfPieces (int ) - If you want only a part of
  the data, specify by setting the piece.
* int = obj.GetNumberOfPieces () - If you want only a part
  of the data, specify by setting the piece.
* obj.SetNumberOfSubPieces (int ) - If you want only a part
  of the data, specify by setting the piece.
* int = obj.GetNumberOfSubPieces () - If you want only a
  part of the data, specify by setting the piece.
* obj.SetGhostLevel (int ) - Set the number of ghost cells
  to return.
* int = obj.GetGhostLevel () - Set the number of ghost cells
  to return.
* double = obj.GetBounds () - Return bounding box (array of
  six doubles) of data expressed as (xmin,xmax, ymin,ymax,
  zmin,zmax).
* obj.GetBounds (double bounds[6]) - Return bounding box
  (array of six doubles) of data expressed as (xmin,xmax,
  ymin,ymax, zmin,zmax).
* obj.ShallowCopy (vtkAbstractMapper m) - Make a shallow
  copy of this mapper.
* obj.MapDataArrayToVertexAttribute (string
  vertexAttributeName, string dataArrayName, int
  fieldAssociation, int componentno) - Select a data array
  from the point/cell data and map it to a generic vertex
  attribute. vertexAttributeName is the name of the vertex
  attribute. dataArrayName is the name of the data array.
  fieldAssociation indicates when the data array is a point
  data array or cell data array (vtkDataObject::
  FIELD_ASSOCIATION_POINTS or (vtkDataObject::
  FIELD_ASSOCIATION_CELLS). componentno indicates which
  component from the data array must be passed as the
  attribute. If -1, then all components are passed.
* obj.MapDataArrayToMultiTextureAttribute (int unit, string
  dataArrayName, int fieldAssociation, int componentno)
* obj.RemoveVertexAttributeMapping (string
  vertexAttributeName) - Remove a vertex attribute mapping.
* obj.RemoveAllVertexAttributeMappings () - Remove all
  vertex attributes.


* FreeMat_Documentation
* Visualization_Toolkit_Rendering_Classes
* Generated on Thu Jul 25 2013 17:18:35 for FreeMat by
  doxygen_ 1.8.1.1

