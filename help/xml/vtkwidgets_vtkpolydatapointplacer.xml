<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkwidgets_vtkpolydatapointplacer" kind="page">
    <compoundname>vtkwidgets_vtkpolydatapointplacer</compoundname>
    <title>vtkPolyDataPointPlacer</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkwidgets_1sec_vtkwidgets" kindref="member">Visualization Toolkit Widget Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkPolyDataPointPlacer is a base class to place points on the surface of polygonal data.</para><para>.SECTION Usage The actors that render polygonal data and wish to be considered for placement by this placer are added to the list as <verbatim> placer-&gt;AddProp( polyDataActor );</verbatim></para><para>To create an instance of class vtkPolyDataPointPlacer, simply invoke its constructor as follows <verbatim>  obj = vtkPolyDataPointPlacer
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkPolyDataPointPlacer has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkPolyDataPointPlacer class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>vtkPolyDataPointPlacer = obj.NewInstance ()</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>vtkPolyDataPointPlacer = obj.SafeDownCast (vtkObject o)</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>obj.AddProp (vtkProp )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.RemoveViewProp (vtkProp prop)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.RemoveAllProps ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.HasProp (vtkProp )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfProps ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.ComputeWorldPosition (vtkRenderer ren, double displayPos[2], double worldPos[3], double worldOrient[9])</computeroutput> - Given a renderer and a display position in pixel coordinates, compute the world position and orientation where this point will be placed. This method is typically used by the representation to place the point initially. For the Terrain point placer this computes world points that lie at the specified height above the terrain.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.ComputeWorldPosition (vtkRenderer ren, double displayPos[2], double refWorldPos[3], double worldPos[3], double worldOrient[9])</computeroutput> - Given a renderer, a display position, and a reference world position, compute the new world position and orientation of this point. This method is typically used by the representation to move the point.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.ValidateWorldPosition (double worldPos[3])</computeroutput> - Given a world position check the validity of this position according to the constraints of the placer  </para></listitem>
<listitem>
<para><computeroutput>int = obj.ValidateDisplayPosition (vtkRenderer , double displayPos[2])</computeroutput> - Given a display position, check the validity of this position.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.ValidateWorldPosition (double worldPos[3], double worldOrient[9])</computeroutput> - Given a world position and a world orientation, validate it according to the constraints of the placer.  </para></listitem>
<listitem>
<para><computeroutput>vtkPropPicker = obj.GetPropPicker ()</computeroutput> - Get the Prop picker.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
