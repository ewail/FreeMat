<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtkcylinder" kind="page">
    <compoundname>vtkfiltering_vtkcylinder</compoundname>
    <title>vtkCylinder</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkCylinder computes the implicit function and function gradient for a cylinder. vtkCylinder is a concrete implementation of vtkImplicitFunction. Cylinder is centered at Center and axes of rotation is along the y-axis. (Use the superclass&apos; vtkImplicitFunction transformation matrix if necessary to reposition.)</para><para>To create an instance of class vtkCylinder, simply invoke its constructor as follows <verbatim>  obj = vtkCylinder
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkCylinder has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkCylinder class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCylinder = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCylinder = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>double = obj.EvaluateFunction (double x[3])</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>double = obj.EvaluateFunction (double x, double y, double z)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.EvaluateGradient (double x[3], double g[3])</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetRadius (double )</computeroutput> - Set/Get cylinder radius.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetRadius ()</computeroutput> - Set/Get cylinder radius.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCenter (double , double , double )</computeroutput> - Set/Get cylinder center  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCenter (double a[3])</computeroutput> - Set/Get cylinder center  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetCenter ()</computeroutput> - Set/Get cylinder center  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
