<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="functions_str2func" kind="page">
    <compoundname>functions_str2func</compoundname>
    <title>STR2FUNC String to Function conversion</title>
    <detaileddescription>
<para>Section: <ref refid="sec_functions_1sec_functions" kindref="member">Functions and Scripts</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The <computeroutput>str2func</computeroutput> function converts a function name into a function pointer. The syntax is <verbatim>    y = str2func(&apos;funcname&apos;)
</verbatim> where <computeroutput>funcname</computeroutput> is the name of the function. The return variable <computeroutput>y</computeroutput> is a function handle that points to the given function.</para><para>An alternate syntax is used to construct an anonymous function given an expression. They syntax is <verbatim>    y = str2func(&apos;anonymous def&apos;)
</verbatim> where <computeroutput>anonymous def</computeroutput> is an expression that defines an anonymous function, for example <computeroutput>&apos;@(x) x.^2&apos;</computeroutput>. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>Here is a simple example of using <computeroutput>str2func</computeroutput>.</para><para><verbatim>--&gt; sin(.5)              % Calling the function directly

ans = 
    0.4794 

--&gt; y = str2func(&apos;sin&apos;)  % Convert it into a function handle

y = 
 @sin
--&gt; y(.5)                % Calling &apos;sin&apos; via the function handle

ans = 
    0.4794 
</verbatim></para><para>Here we use <computeroutput>str2func</computeroutput> to define an anonymous function</para><para><verbatim>--&gt; y = str2func(&apos;@(x) x.^2&apos;)

y = 
 @(x)   x.^2
--&gt; y(2)

ans = 
 4 
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
