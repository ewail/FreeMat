<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkwidgets_vtkcheckerboardrepresentation" kind="page">
    <compoundname>vtkwidgets_vtkcheckerboardrepresentation</compoundname>
    <title>vtkCheckerboardRepresentation</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkwidgets_1sec_vtkwidgets" kindref="member">Visualization Toolkit Widget Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The vtkCheckerboardRepresentation is used to implement the representation of the vtkCheckerboardWidget. The user can adjust the number of divisions in each of the i-j directions in a 2D image. A frame appears around the vtkImageActor with sliders along each side of the frame. The user can interactively adjust the sliders to the desired number of checkerboard subdivisions. The representation uses four instances of vtkSliderRepresentation3D to implement itself.</para><para>To create an instance of class vtkCheckerboardRepresentation, simply invoke its constructor as follows <verbatim>  obj = vtkCheckerboardRepresentation
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkCheckerboardRepresentation has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkCheckerboardRepresentation class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput> - Standard VTK methods.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput> - Standard VTK methods.  </para></listitem>
<listitem>
<para><computeroutput>vtkCheckerboardRepresentation = obj.NewInstance ()</computeroutput> - Standard VTK methods.  </para></listitem>
<listitem>
<para><computeroutput>vtkCheckerboardRepresentation = obj.SafeDownCast (vtkObject o)</computeroutput> - Standard VTK methods.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCheckerboard (vtkImageCheckerboard chkrbrd)</computeroutput> - Specify an instance of vtkImageCheckerboard to manipulate.  </para></listitem>
<listitem>
<para><computeroutput>vtkImageCheckerboard = obj.GetCheckerboard ()</computeroutput> - Specify an instance of vtkImageCheckerboard to manipulate.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetImageActor (vtkImageActor imageActor)</computeroutput> - Specify an instance of vtkImageActor to decorate.  </para></listitem>
<listitem>
<para><computeroutput>vtkImageActor = obj.GetImageActor ()</computeroutput> - Specify an instance of vtkImageActor to decorate.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCornerOffset (double )</computeroutput> - Specify the offset of the ends of the sliders (on the boundary edges of the image) from the corner of the image. The offset is expressed as a normalized fraction of the border edges.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetCornerOffsetMinValue ()</computeroutput> - Specify the offset of the ends of the sliders (on the boundary edges of the image) from the corner of the image. The offset is expressed as a normalized fraction of the border edges.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetCornerOffsetMaxValue ()</computeroutput> - Specify the offset of the ends of the sliders (on the boundary edges of the image) from the corner of the image. The offset is expressed as a normalized fraction of the border edges.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetCornerOffset ()</computeroutput> - Specify the offset of the ends of the sliders (on the boundary edges of the image) from the corner of the image. The offset is expressed as a normalized fraction of the border edges.  </para></listitem>
<listitem>
<para><computeroutput>obj.SliderValueChanged (int sliderNum)</computeroutput> - This method is invoked by the vtkCheckerboardWidget() when a value of some slider has changed.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTopRepresentation (vtkSliderRepresentation3D )</computeroutput> - Set and get the instances of vtkSliderRepresention used to implement this representation. Normally default representations are created, but you can specify the ones you want to use.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetRightRepresentation (vtkSliderRepresentation3D )</computeroutput> - Set and get the instances of vtkSliderRepresention used to implement this representation. Normally default representations are created, but you can specify the ones you want to use.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetBottomRepresentation (vtkSliderRepresentation3D )</computeroutput> - Set and get the instances of vtkSliderRepresention used to implement this representation. Normally default representations are created, but you can specify the ones you want to use.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLeftRepresentation (vtkSliderRepresentation3D )</computeroutput> - Set and get the instances of vtkSliderRepresention used to implement this representation. Normally default representations are created, but you can specify the ones you want to use.  </para></listitem>
<listitem>
<para><computeroutput>vtkSliderRepresentation3D = obj.GetTopRepresentation ()</computeroutput> - Set and get the instances of vtkSliderRepresention used to implement this representation. Normally default representations are created, but you can specify the ones you want to use.  </para></listitem>
<listitem>
<para><computeroutput>vtkSliderRepresentation3D = obj.GetRightRepresentation ()</computeroutput> - Set and get the instances of vtkSliderRepresention used to implement this representation. Normally default representations are created, but you can specify the ones you want to use.  </para></listitem>
<listitem>
<para><computeroutput>vtkSliderRepresentation3D = obj.GetBottomRepresentation ()</computeroutput> - Set and get the instances of vtkSliderRepresention used to implement this representation. Normally default representations are created, but you can specify the ones you want to use.  </para></listitem>
<listitem>
<para><computeroutput>vtkSliderRepresentation3D = obj.GetLeftRepresentation ()</computeroutput> - Set and get the instances of vtkSliderRepresention used to implement this representation. Normally default representations are created, but you can specify the ones you want to use.  </para></listitem>
<listitem>
<para><computeroutput>obj.BuildRepresentation ()</computeroutput> - Methods required by superclass.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetActors (vtkPropCollection )</computeroutput> - Methods required by superclass.  </para></listitem>
<listitem>
<para><computeroutput>obj.ReleaseGraphicsResources (vtkWindow w)</computeroutput> - Methods required by superclass.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOverlay (vtkViewport viewport)</computeroutput> - Methods required by superclass.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOpaqueGeometry (vtkViewport viewport)</computeroutput> - Methods required by superclass.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderTranslucentPolygonalGeometry (vtkViewport viewport)</computeroutput> - Methods required by superclass.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.HasTranslucentPolygonalGeometry ()</computeroutput> - Methods required by superclass.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
