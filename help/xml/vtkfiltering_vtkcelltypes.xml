<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtkcelltypes" kind="page">
    <compoundname>vtkfiltering_vtkcelltypes</compoundname>
    <title>vtkCellTypes</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>This class is a supplemental object to vtkCellArray to allow random access into cells as well as representing cell type information. The &quot;location&quot; field is the location in the vtkCellArray list in terms of an integer offset. An integer offset was used instead of a pointer for easy storage and inter-process communication. The type information is defined in the file vtkCellType.h.</para><para>To create an instance of class vtkCellTypes, simply invoke its constructor as follows <verbatim>  obj = vtkCellTypes
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkCellTypes has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkCellTypes class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCellTypes = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCellTypes = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.Allocate (int sz, int ext)</computeroutput> - Allocate memory for this array. Delete old storage only if necessary.  </para></listitem>
<listitem>
<para><computeroutput>obj.InsertCell (int id, char type, int loc)</computeroutput> - Add a cell at specified id.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.InsertNextCell (char type, int loc)</computeroutput> - Add a cell to the object in the next available slot.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCellTypes (int ncells, vtkUnsignedCharArray cellTypes, vtkIntArray cellLocations)</computeroutput> - Specify a group of cell types.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCellLocation (int cellId)</computeroutput> - Return the location of the cell in the associated vtkCellArray.  </para></listitem>
<listitem>
<para><computeroutput>obj.DeleteCell (vtkIdType cellId)</computeroutput> - Delete cell by setting to NULL cell type.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfTypes ()</computeroutput> - Return the number of types in the list.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsType (char type)</computeroutput> - Return 1 if type specified is contained in list; 0 otherwise.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.InsertNextType (char type)</computeroutput> - Add the type specified to the end of the list. Range checking is performed.  </para></listitem>
<listitem>
<para><computeroutput>char = obj.GetCellType (int cellId)</computeroutput> - Return the type of cell.  </para></listitem>
<listitem>
<para><computeroutput>obj.Squeeze ()</computeroutput> - Reclaim any extra memory.  </para></listitem>
<listitem>
<para><computeroutput>obj.Reset ()</computeroutput> - Initialize object without releasing memory.  </para></listitem>
<listitem>
<para><computeroutput>long = obj.GetActualMemorySize ()</computeroutput> - Return the memory in kilobytes consumed by this cell type array. Used to support streaming and reading/writing data. The value returned is guaranteed to be greater than or equal to the memory required to actually represent the data represented by this object. The information returned is valid only after the pipeline has been updated.  </para></listitem>
<listitem>
<para><computeroutput>obj.DeepCopy (vtkCellTypes src)</computeroutput> - Standard DeepCopy method. Since this object contains no reference to other objects, there is no ShallowCopy.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
