<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkfielddatatoattributedatafilter" kind="page">
    <compoundname>vtkgraphics_vtkfielddatatoattributedatafilter</compoundname>
    <title>vtkFieldDataToAttributeDataFilter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkFieldDataToAttributeDataFilter is a class that maps field data into dataset attributes. The input to this filter is any type of dataset and the output is the same dataset (geometry/topology) with new attribute data (attribute data is passed through if not replaced during filter execution).</para><para>To use this filter you must specify which field data from the input dataset to use. There are three possibilities: the cell field data, the point field data, or the field data associated with the data object superclass. Then you specify which attribute data to create: either cell attribute data or point attribute data. Finally, you must define how to construct the various attribute data types (e.g., scalars, vectors, normals, etc.) from the arrays and the components of the arrays from the field data. This is done by associating components in the input field with components making up the attribute data. For example, you would specify a scalar with three components (RGB) by assigning components from the field for the R, then G, then B values of the scalars. You may also have to specify component ranges (for each R-G-B) to make sure that the number of R, G, and B values is the same. Also, you may want to normalize the components which helps distribute the data uniformly.</para><para>This filter is often used in conjunction with vtkDataObjectToDataSetFilter. vtkDataObjectToDataSetFilter filter generates dataset topology and geometry and passes its input field data along to its output. Then this filter is used to generate the attribute data to go along with the dataset.</para><para>To create an instance of class vtkFieldDataToAttributeDataFilter, simply invoke its constructor as follows <verbatim>  obj = vtkFieldDataToAttributeDataFilter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkFieldDataToAttributeDataFilter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkFieldDataToAttributeDataFilter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkFieldDataToAttributeDataFilter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkFieldDataToAttributeDataFilter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInputField (int )</computeroutput> - Specify which field data to use to generate the output attribute data. There are three choices: the field data associated with the vtkDataObject superclass; the point field attribute data; and the cell field attribute data.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetInputField ()</computeroutput> - Specify which field data to use to generate the output attribute data. There are three choices: the field data associated with the vtkDataObject superclass; the point field attribute data; and the cell field attribute data.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInputFieldToDataObjectField ()</computeroutput> - Specify which field data to use to generate the output attribute data. There are three choices: the field data associated with the vtkDataObject superclass; the point field attribute data; and the cell field attribute data.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInputFieldToPointDataField ()</computeroutput> - Specify which field data to use to generate the output attribute data. There are three choices: the field data associated with the vtkDataObject superclass; the point field attribute data; and the cell field attribute data.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInputFieldToCellDataField ()</computeroutput> - Specify which field data to use to generate the output attribute data. There are three choices: the field data associated with the vtkDataObject superclass; the point field attribute data; and the cell field attribute data.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutputAttributeData (int )</computeroutput> - Specify which attribute data to output: point or cell data attributes.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetOutputAttributeData ()</computeroutput> - Specify which attribute data to output: point or cell data attributes.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutputAttributeDataToCellData ()</computeroutput> - Specify which attribute data to output: point or cell data attributes.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutputAttributeDataToPointData ()</computeroutput> - Specify which attribute data to output: point or cell data attributes.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetScalarComponent (int comp, string arrayName, int arrayComp, int min, int max, int normalize)</computeroutput> - Define the component(s) of the field to be used for the scalar components. Note that the parameter comp must lie between (0,4). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetScalarComponent (int comp, string arrayName, int arrayComp)</computeroutput> - Define the component(s) of the field to be used for the scalar components. Note that the parameter comp must lie between (0,4). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetScalarComponentArrayName (int comp)</computeroutput> - Define the component(s) of the field to be used for the scalar components. Note that the parameter comp must lie between (0,4). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetScalarComponentArrayComponent (int comp)</computeroutput> - Define the component(s) of the field to be used for the scalar components. Note that the parameter comp must lie between (0,4). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetScalarComponentMinRange (int comp)</computeroutput> - Define the component(s) of the field to be used for the scalar components. Note that the parameter comp must lie between (0,4). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetScalarComponentMaxRange (int comp)</computeroutput> - Define the component(s) of the field to be used for the scalar components. Note that the parameter comp must lie between (0,4). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetScalarComponentNormalizeFlag (int comp)</computeroutput> - Define the component(s) of the field to be used for the scalar components. Note that the parameter comp must lie between (0,4). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetVectorComponent (int comp, string arrayName, int arrayComp, int min, int max, int normalize)</computeroutput> - Define the component(s) of the field to be used for the vector components. Note that the parameter comp must lie between (0,3). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetVectorComponent (int comp, string arrayName, int arrayComp)</computeroutput> - Define the component(s) of the field to be used for the vector components. Note that the parameter comp must lie between (0,3). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetVectorComponentArrayName (int comp)</computeroutput> - Define the component(s) of the field to be used for the vector components. Note that the parameter comp must lie between (0,3). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetVectorComponentArrayComponent (int comp)</computeroutput> - Define the component(s) of the field to be used for the vector components. Note that the parameter comp must lie between (0,3). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetVectorComponentMinRange (int comp)</computeroutput> - Define the component(s) of the field to be used for the vector components. Note that the parameter comp must lie between (0,3). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetVectorComponentMaxRange (int comp)</computeroutput> - Define the component(s) of the field to be used for the vector components. Note that the parameter comp must lie between (0,3). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetVectorComponentNormalizeFlag (int comp)</computeroutput> - Define the component(s) of the field to be used for the vector components. Note that the parameter comp must lie between (0,3). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetNormalComponent (int comp, string arrayName, int arrayComp, int min, int max, int normalize)</computeroutput> - Define the component(s) of the field to be used for the normal components. Note that the parameter comp must lie between (0,3). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetNormalComponent (int comp, string arrayName, int arrayComp)</computeroutput> - Define the component(s) of the field to be used for the normal components. Note that the parameter comp must lie between (0,3). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetNormalComponentArrayName (int comp)</computeroutput> - Define the component(s) of the field to be used for the normal components. Note that the parameter comp must lie between (0,3). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNormalComponentArrayComponent (int comp)</computeroutput> - Define the component(s) of the field to be used for the normal components. Note that the parameter comp must lie between (0,3). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNormalComponentMinRange (int comp)</computeroutput> - Define the component(s) of the field to be used for the normal components. Note that the parameter comp must lie between (0,3). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNormalComponentMaxRange (int comp)</computeroutput> - Define the component(s) of the field to be used for the normal components. Note that the parameter comp must lie between (0,3). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNormalComponentNormalizeFlag (int comp)</computeroutput> - Define the component(s) of the field to be used for the normal components. Note that the parameter comp must lie between (0,3). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTensorComponent (int comp, string arrayName, int arrayComp, int min, int max, int normalize)</computeroutput> - Define the components of the field to be used for the tensor components. Note that the parameter comp must lie between (0,9). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTensorComponent (int comp, string arrayName, int arrayComp)</computeroutput> - Define the components of the field to be used for the tensor components. Note that the parameter comp must lie between (0,9). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetTensorComponentArrayName (int comp)</computeroutput> - Define the components of the field to be used for the tensor components. Note that the parameter comp must lie between (0,9). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTensorComponentArrayComponent (int comp)</computeroutput> - Define the components of the field to be used for the tensor components. Note that the parameter comp must lie between (0,9). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTensorComponentMinRange (int comp)</computeroutput> - Define the components of the field to be used for the tensor components. Note that the parameter comp must lie between (0,9). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTensorComponentMaxRange (int comp)</computeroutput> - Define the components of the field to be used for the tensor components. Note that the parameter comp must lie between (0,9). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTensorComponentNormalizeFlag (int comp)</computeroutput> - Define the components of the field to be used for the tensor components. Note that the parameter comp must lie between (0,9). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTCoordComponent (int comp, string arrayName, int arrayComp, int min, int max, int normalize)</computeroutput> - Define the components of the field to be used for the cell texture coord components. Note that the parameter comp must lie between (0,9). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTCoordComponent (int comp, string arrayName, int arrayComp)</computeroutput> - Define the components of the field to be used for the cell texture coord components. Note that the parameter comp must lie between (0,9). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetTCoordComponentArrayName (int comp)</computeroutput> - Define the components of the field to be used for the cell texture coord components. Note that the parameter comp must lie between (0,9). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTCoordComponentArrayComponent (int comp)</computeroutput> - Define the components of the field to be used for the cell texture coord components. Note that the parameter comp must lie between (0,9). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTCoordComponentMinRange (int comp)</computeroutput> - Define the components of the field to be used for the cell texture coord components. Note that the parameter comp must lie between (0,9). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTCoordComponentMaxRange (int comp)</computeroutput> - Define the components of the field to be used for the cell texture coord components. Note that the parameter comp must lie between (0,9). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTCoordComponentNormalizeFlag (int comp)</computeroutput> - Define the components of the field to be used for the cell texture coord components. Note that the parameter comp must lie between (0,9). To define the field component to use you specify an array name and the component in that array. The (min,max) values are the range of data in the component you wish to extract.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDefaultNormalize (int )</computeroutput> - Set the default Normalize() flag for those methods setting a default Normalize value (e.g., SetScalarComponents).  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetDefaultNormalize ()</computeroutput> - Set the default Normalize() flag for those methods setting a default Normalize value (e.g., SetScalarComponents).  </para></listitem>
<listitem>
<para><computeroutput>obj.DefaultNormalizeOn ()</computeroutput> - Set the default Normalize() flag for those methods setting a default Normalize value (e.g., SetScalarComponents).  </para></listitem>
<listitem>
<para><computeroutput>obj.DefaultNormalizeOff ()</computeroutput> - Set the default Normalize() flag for those methods setting a default Normalize value (e.g., SetScalarComponents).  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
