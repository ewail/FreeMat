<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkio_vtkbase64outputstream" kind="page">
    <compoundname>vtkio_vtkbase64outputstream</compoundname>
    <title>vtkBase64OutputStream</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkio_1sec_vtkio" kindref="member">Visualization Toolkit IO Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkBase64OutputStream implements base64 encoding with the vtkOutputStream interface.</para><para>To create an instance of class vtkBase64OutputStream, simply invoke its constructor as follows <verbatim>  obj = vtkBase64OutputStream
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkBase64OutputStream has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkBase64OutputStream class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkBase64OutputStream = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkBase64OutputStream = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.StartWriting ()</computeroutput> - Called after the stream position has been set by the caller, but before any Write calls. The stream position should not be adjusted by the caller until after an EndWriting call.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.Write (string data, long length)</computeroutput> - Write output data of the given length.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.EndWriting ()</computeroutput> - Called after all desired calls to Write have been made. After this call, the caller is free to change the position of the stream. Additional writes should not be done until after another call to StartWriting.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
