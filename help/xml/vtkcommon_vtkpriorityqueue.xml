<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkcommon_vtkpriorityqueue" kind="page">
    <compoundname>vtkcommon_vtkpriorityqueue</compoundname>
    <title>vtkPriorityQueue</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkcommon_1sec_vtkcommon" kindref="member">Visualization Toolkit Common Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkPriorityQueue is a general object for creating and manipulating lists of object ids (e.g., point or cell ids). Object ids are sorted according to a user-specified priority, where entries at the top of the queue have the smallest values.</para><para>This implementation provides a feature beyond the usual ability to insert and retrieve (or pop) values from the queue. It is also possible to pop any item in the queue given its id number. This allows you to delete entries in the queue which can useful for reinserting an item into the queue.</para><para>To create an instance of class vtkPriorityQueue, simply invoke its constructor as follows <verbatim>  obj = vtkPriorityQueue
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkPriorityQueue has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkPriorityQueue class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkPriorityQueue = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkPriorityQueue = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Allocate (vtkIdType sz, vtkIdType ext)</computeroutput> - Allocate initial space for priority queue.  </para></listitem>
<listitem>
<para><computeroutput>obj.Insert (double priority, vtkIdType id)</computeroutput> - Insert id with priority specified. The id is generally an index like a point id or cell id.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.Pop (vtkIdType location)</computeroutput> - Same as above but simplified for easier wrapping into interpreted languages.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.Peek (vtkIdType location)</computeroutput> - Peek into the queue without actually removing anything. Returns the id.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.DeleteId (vtkIdType id)</computeroutput> - Delete entry in queue with specified id. Returns priority value associated with that id; or VTK_DOUBLE_MAX if not in queue.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetPriority (vtkIdType id)</computeroutput> - Get the priority of an entry in the queue with specified id. Returns priority value of that id or VTK_DOUBLE_MAX if not in queue.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetNumberOfItems ()</computeroutput> - Return the number of items in this queue.  </para></listitem>
<listitem>
<para><computeroutput>obj.Reset ()</computeroutput> - Empty the queue but without releasing memory. This avoids the overhead of memory allocation/deletion.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
