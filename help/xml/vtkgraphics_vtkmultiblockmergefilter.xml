<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkmultiblockmergefilter" kind="page">
    <compoundname>vtkgraphics_vtkmultiblockmergefilter</compoundname>
    <title>vtkMultiBlockMergeFilter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkMultiBlockMergeFilter is an M to 1 filter similar to vtkMultiBlockDataGroupFilter. However where as that class creates N groups in the output for N inputs, this creates 1 group in the output with N datasets inside it. In actuality if the inputs have M blocks, this will produce M blocks, each of which has N datasets. Inside the merged group, the i&apos;th data set comes from the i&apos;th data set in the i&apos;th input.</para><para>To create an instance of class vtkMultiBlockMergeFilter, simply invoke its constructor as follows <verbatim>  obj = vtkMultiBlockMergeFilter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkMultiBlockMergeFilter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkMultiBlockMergeFilter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkMultiBlockMergeFilter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkMultiBlockMergeFilter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.AddInput (vtkDataObject )</computeroutput> - Add an input of this algorithm. Note that these methods support old-style pipeline connections. When writing new code you should use the more general vtkAlgorithm::AddInputConnection(). See SetInput() for details.  </para></listitem>
<listitem>
<para><computeroutput>obj.AddInput (int , vtkDataObject )</computeroutput> - Add an input of this algorithm. Note that these methods support old-style pipeline connections. When writing new code you should use the more general vtkAlgorithm::AddInputConnection(). See SetInput() for details.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
