<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkrendering_vtkpolydatamapper" kind="page">
    <compoundname>vtkrendering_vtkpolydatamapper</compoundname>
    <title>vtkPolyDataMapper</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkrendering_1sec_vtkrendering" kindref="member">Visualization Toolkit Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkPolyDataMapper is a class that maps polygonal data (i.e., vtkPolyData) to graphics primitives. vtkPolyDataMapper serves as a superclass for device-specific poly data mappers, that actually do the mapping to the rendering/graphics hardware/software.</para><para>To create an instance of class vtkPolyDataMapper, simply invoke its constructor as follows <verbatim>  obj = vtkPolyDataMapper
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkPolyDataMapper has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkPolyDataMapper class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkPolyDataMapper = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkPolyDataMapper = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.RenderPiece (vtkRenderer ren, vtkActor act)</computeroutput> - Implemented by sub classes. Actual rendering is done here.  </para></listitem>
<listitem>
<para><computeroutput>obj.Render (vtkRenderer ren, vtkActor act)</computeroutput> - This calls RenderPiece (in a for loop is streaming is necessary).  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInput (vtkPolyData in)</computeroutput> - Specify the input data to map.  </para></listitem>
<listitem>
<para><computeroutput>vtkPolyData = obj.GetInput ()</computeroutput> - Specify the input data to map.  </para></listitem>
<listitem>
<para><computeroutput>obj.Update ()</computeroutput> - Update that sets the update piece first.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPiece (int )</computeroutput> - If you want only a part of the data, specify by setting the piece.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetPiece ()</computeroutput> - If you want only a part of the data, specify by setting the piece.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetNumberOfPieces (int )</computeroutput> - If you want only a part of the data, specify by setting the piece.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfPieces ()</computeroutput> - If you want only a part of the data, specify by setting the piece.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetNumberOfSubPieces (int )</computeroutput> - If you want only a part of the data, specify by setting the piece.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfSubPieces ()</computeroutput> - If you want only a part of the data, specify by setting the piece.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGhostLevel (int )</computeroutput> - Set the number of ghost cells to return.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetGhostLevel ()</computeroutput> - Set the number of ghost cells to return.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetBounds ()</computeroutput> - Return bounding box (array of six doubles) of data expressed as (xmin,xmax, ymin,ymax, zmin,zmax).  </para></listitem>
<listitem>
<para><computeroutput>obj.GetBounds (double bounds[6])</computeroutput> - Return bounding box (array of six doubles) of data expressed as (xmin,xmax, ymin,ymax, zmin,zmax).  </para></listitem>
<listitem>
<para><computeroutput>obj.ShallowCopy (vtkAbstractMapper m)</computeroutput> - Make a shallow copy of this mapper.  </para></listitem>
<listitem>
<para><computeroutput>obj.MapDataArrayToVertexAttribute (string vertexAttributeName, string dataArrayName, int fieldAssociation, int componentno)</computeroutput> - Select a data array from the point/cell data and map it to a generic vertex attribute. vertexAttributeName is the name of the vertex attribute. dataArrayName is the name of the data array. fieldAssociation indicates when the data array is a point data array or cell data array (vtkDataObject::FIELD_ASSOCIATION_POINTS or (vtkDataObject::FIELD_ASSOCIATION_CELLS). componentno indicates which component from the data array must be passed as the attribute. If -1, then all components are passed.  </para></listitem>
<listitem>
<para><computeroutput>obj.MapDataArrayToMultiTextureAttribute (int unit, string dataArrayName, int fieldAssociation, int componentno)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.RemoveVertexAttributeMapping (string vertexAttributeName)</computeroutput> - Remove a vertex attribute mapping.  </para></listitem>
<listitem>
<para><computeroutput>obj.RemoveAllVertexAttributeMappings ()</computeroutput> - Remove all vertex attributes.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
