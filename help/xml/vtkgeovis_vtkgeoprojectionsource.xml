<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgeovis_vtkgeoprojectionsource" kind="page">
    <compoundname>vtkgeovis_vtkgeoprojectionsource</compoundname>
    <title>vtkGeoProjectionSource</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgeovis_1sec_vtkgeovis" kindref="member">Visualization Toolkit Geo Vis Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkGeoProjectionSource is a vtkGeoSource suitable for use in vtkTerrain2D. This source uses the libproj4 library to produce geometry patches at multiple resolutions. Each patch covers a specific region in projected space.</para><para>To create an instance of class vtkGeoProjectionSource, simply invoke its constructor as follows <verbatim>  obj = vtkGeoProjectionSource
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkGeoProjectionSource has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkGeoProjectionSource class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkGeoProjectionSource = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkGeoProjectionSource = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkGeoProjectionSource = obj.()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>~vtkGeoProjectionSource = obj.()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.FetchRoot (vtkGeoTreeNode root)</computeroutput> - Blocking methods for sources with low latency.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.FetchChild (vtkGeoTreeNode node, int index, vtkGeoTreeNode child)</computeroutput> - Blocking methods for sources with low latency.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetProjection ()</computeroutput> - The projection ID defining the projection. Initial value is 0.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetProjection (int projection)</computeroutput> - The projection ID defining the projection. Initial value is 0.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetMinCellsPerNode ()</computeroutput> - The minimum number of cells per node.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMinCellsPerNode (int )</computeroutput> - The minimum number of cells per node.  </para></listitem>
<listitem>
<para><computeroutput>vtkAbstractTransform = obj.GetTransform ()</computeroutput> - Return the projection transformation used by this 2D terrain.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
