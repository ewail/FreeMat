<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkvolumerendering_vtkopenglvolumetexturemapper3d" kind="page">
    <compoundname>vtkvolumerendering_vtkopenglvolumetexturemapper3d</compoundname>
    <title>vtkOpenGLVolumeTextureMapper3D</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkvolumerendering_1sec_vtkvolumerendering" kindref="member">Visualization Toolkit Volume Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkOpenGLVolumeTextureMapper3D renders a volume using 3D texture mapping. See vtkVolumeTextureMapper3D for full description.</para><para>To create an instance of class vtkOpenGLVolumeTextureMapper3D, simply invoke its constructor as follows <verbatim>  obj = vtkOpenGLVolumeTextureMapper3D
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkOpenGLVolumeTextureMapper3D has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkOpenGLVolumeTextureMapper3D class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkOpenGLVolumeTextureMapper3D = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkOpenGLVolumeTextureMapper3D = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsRenderSupported (vtkVolumeProperty )</computeroutput> - Is hardware rendering supported? No if the input data is more than one independent component, or if the hardware does not support the required extensions  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetInitialized ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.ReleaseGraphicsResources (vtkWindow )</computeroutput> - Release any graphics resources that are being consumed by this texture. The parameter window could be used to determine which graphic resources to release.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
