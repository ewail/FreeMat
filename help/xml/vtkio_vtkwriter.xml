<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkio_vtkwriter" kind="page">
    <compoundname>vtkio_vtkwriter</compoundname>
    <title>vtkWriter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkio_1sec_vtkio" kindref="member">Visualization Toolkit IO Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkWriter is an abstract class for mapper objects that write their data to disk (or into a communications port). All writers respond to Write() method. This method insures that there is input and input is up to date.</para><para>To create an instance of class vtkWriter, simply invoke its constructor as follows <verbatim>  obj = vtkWriter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkWriter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkWriter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkWriter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkWriter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.Write ()</computeroutput> - Write data to output. Method executes subclasses WriteData() method, as well as StartMethod() and EndMethod() methods. Returns 1 on success and 0 on failure.  </para></listitem>
<listitem>
<para><computeroutput>obj.EncodeString (string resname, string name, bool doublePercent)</computeroutput> - Encode the string so that the reader will not have problems. The resulting string is up to three times the size of the input string. doublePercent indicates whether to output a double &apos;&apos; before escaped characters so the string may be used as a printf format string.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInput (vtkDataObject input)</computeroutput> - Set/get the input to this writer.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInput (int index, vtkDataObject input)</computeroutput> - Set/get the input to this writer.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
