<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkprogrammableglyphfilter" kind="page">
    <compoundname>vtkgraphics_vtkprogrammableglyphfilter</compoundname>
    <title>vtkProgrammableGlyphFilter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkProgrammableGlyphFilter is a filter that allows you to place a glyph at each input point in the dataset. In addition, the filter is programmable which means the user has control over the generation of the glyph. The glyphs can be controlled via the point data attributes (e.g., scalars, vectors, etc.) or any other information in the input dataset.</para><para>This is the way the filter works. You must define an input dataset which at a minimum contains points with associated attribute values. Also, the Source instance variable must be set which is of type vtkPolyData. Then, for each point in the input, the PointId is set to the current point id, and a user-defined function is called (i.e., GlyphMethod). In this method you can manipulate the Source data (including changing to a different Source object). After the GlyphMethod is called, vtkProgrammableGlyphFilter will invoke an Update() on its Source object, and then copy its data to the output of the vtkProgrammableGlyphFilter. Therefore the output of this filter is of type vtkPolyData.</para><para>Another option to this filter is the way you color the glyphs. You can use the scalar data from the input or the source. The instance variable ColorMode controls this behavior.</para><para>To create an instance of class vtkProgrammableGlyphFilter, simply invoke its constructor as follows <verbatim>  obj = vtkProgrammableGlyphFilter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkProgrammableGlyphFilter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkProgrammableGlyphFilter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkProgrammableGlyphFilter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkProgrammableGlyphFilter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSource (vtkPolyData source)</computeroutput> - Set/Get the source to use for this glyph. Note: you can change the source during execution of this filter.  </para></listitem>
<listitem>
<para><computeroutput>vtkPolyData = obj.GetSource ()</computeroutput> - Set/Get the source to use for this glyph. Note: you can change the source during execution of this filter.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetPointId ()</computeroutput> - Get the current point id during processing. Value only valid during the Execute() method of this filter. (Meant to be called by the GlyphMethod().)  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetPoint ()</computeroutput> - Get the current point coordinates during processing. Value only valid during the Execute() method of this filter. (Meant to be called by the GlyphMethod().)  </para></listitem>
<listitem>
<para><computeroutput>vtkPointData = obj.GetPointData ()</computeroutput> - Get the set of point data attributes for the input. A convenience to the programmer to be used in the GlyphMethod(). Only valid during the Execute() method of this filter.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetColorMode (int )</computeroutput> - Either color by the input or source scalar data.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetColorMode ()</computeroutput> - Either color by the input or source scalar data.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetColorModeToColorByInput ()</computeroutput> - Either color by the input or source scalar data.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetColorModeToColorBySource ()</computeroutput> - Either color by the input or source scalar data.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetColorModeAsString ()</computeroutput> - Either color by the input or source scalar data.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
