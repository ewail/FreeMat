<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkio_vtkdicomimagereader" kind="page">
    <compoundname>vtkio_vtkdicomimagereader</compoundname>
    <title>vtkDICOMImageReader</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkio_1sec_vtkio" kindref="member">Visualization Toolkit IO Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>DICOM (stands for Digital Imaging in COmmunications and Medicine) is a medical image file format widely used to exchange data, provided by various modalities. .SECTION Warnings This reader might eventually handle ACR-NEMA file (predecessor of the DICOM format for medical images). This reader does not handle encapsulated format, only plain raw file are handled. This reader also does not handle multi-frames DICOM datasets. .SECTION Warnings Internally DICOMParser assumes the x,y pixel spacing is stored in 0028,0030 and that z spacing is stored in Slice Thickness (correct only when slice were acquired contiguous): 0018,0050. Which means this is only valid for some rare MR Image Storage</para><para>To create an instance of class vtkDICOMImageReader, simply invoke its constructor as follows <verbatim>  obj = vtkDICOMImageReader
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkDICOMImageReader has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkDICOMImageReader class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput> - Static method for construction.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput> - Static method for construction.  </para></listitem>
<listitem>
<para><computeroutput>vtkDICOMImageReader = obj.NewInstance ()</computeroutput> - Static method for construction.  </para></listitem>
<listitem>
<para><computeroutput>vtkDICOMImageReader = obj.SafeDownCast (vtkObject o)</computeroutput> - Static method for construction.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFileName (string fn)</computeroutput> - Set the directory name for the reader to look in for DICOM files. If this method is used, the reader will try to find all the DICOM files in a directory. It will select the subset corresponding to the first series UID it stumbles across and it will try to build an ordered volume from them based on the slice number. The volume building will be upgraded to something more sophisticated in the future.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDirectoryName (string dn)</computeroutput> - Set the directory name for the reader to look in for DICOM files. If this method is used, the reader will try to find all the DICOM files in a directory. It will select the subset corresponding to the first series UID it stumbles across and it will try to build an ordered volume from them based on the slice number. The volume building will be upgraded to something more sophisticated in the future.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetDirectoryName ()</computeroutput> - Returns the directory name.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetPixelSpacing ()</computeroutput> - Returns the pixel spacing (in X, Y, Z). Note: if there is only one slice, the Z spacing is set to the slice thickness. If there is more than one slice, it is set to the distance between the first two slices.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetWidth ()</computeroutput> - Returns the image width.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetHeight ()</computeroutput> - Returns the image height.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetImagePositionPatient ()</computeroutput> - Get the (DICOM) x,y,z coordinates of the first pixel in the image (upper left hand corner) of the last image processed by the DICOMParser  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetImageOrientationPatient ()</computeroutput> - Get the (DICOM) directions cosines. It consist of the components of the first two vectors. The third vector needs to be computed to form an orthonormal basis.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetBitsAllocated ()</computeroutput> - Get the number of bits allocated for each pixel in the file.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetPixelRepresentation ()</computeroutput> - Get the pixel representation of the last image processed by the DICOMParser. A zero is a unsigned quantity. A one indicates a signed quantity  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfComponents ()</computeroutput> - Get the number of components of the image data for the last image processed.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetTransferSyntaxUID ()</computeroutput> - Get the transfer syntax UID for the last image processed.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetRescaleSlope ()</computeroutput> - Get the rescale slope for the pixel data.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetRescaleOffset ()</computeroutput> - Get the rescale offset for the pixel data.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetPatientName ()</computeroutput> - Get the patient name for the last image processed.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetStudyUID ()</computeroutput> - Get the study uid for the last image processed.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetStudyID ()</computeroutput> - Get the Study ID for the last image processed.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetGantryAngle ()</computeroutput> - Get the gantry angle for the last image processed.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.CanReadFile (string fname)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetFileExtensions ()</computeroutput> - Return a descriptive name for the file format that might be useful in a GUI.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetDescriptiveName ()</computeroutput>  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
