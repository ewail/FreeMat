<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkhybrid_vtkearthsource" kind="page">
    <compoundname>vtkhybrid_vtkearthsource</compoundname>
    <title>vtkEarthSource</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkhybrid_1sec_vtkhybrid" kindref="member">Visualization Toolkit Hybrid Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkEarthSource creates a spherical rendering of the geographical shapes of the major continents of the earth. The OnRatio determines how much of the data is actually used. The radius defines the radius of the sphere at which the continents are placed. Obtains data from an imbedded array of coordinates.</para><para>To create an instance of class vtkEarthSource, simply invoke its constructor as follows <verbatim>  obj = vtkEarthSource
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkEarthSource has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkEarthSource class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkEarthSource = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkEarthSource = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetRadius (double )</computeroutput> - Set radius of earth.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetRadiusMinValue ()</computeroutput> - Set radius of earth.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetRadiusMaxValue ()</computeroutput> - Set radius of earth.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetRadius ()</computeroutput> - Set radius of earth.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOnRatio (int )</computeroutput> - Turn on every nth entity. This controls how much detail the model will have. The maximum ratio is sixteen. (The smaller OnRatio, the more detail there is.)  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetOnRatioMinValue ()</computeroutput> - Turn on every nth entity. This controls how much detail the model will have. The maximum ratio is sixteen. (The smaller OnRatio, the more detail there is.)  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetOnRatioMaxValue ()</computeroutput> - Turn on every nth entity. This controls how much detail the model will have. The maximum ratio is sixteen. (The smaller OnRatio, the more detail there is.)  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetOnRatio ()</computeroutput> - Turn on every nth entity. This controls how much detail the model will have. The maximum ratio is sixteen. (The smaller OnRatio, the more detail there is.)  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutline (int )</computeroutput> - Turn on/off drawing continents as filled polygons or as wireframe outlines. Warning: some graphics systems will have trouble with the very large, concave filled polygons. Recommend you use OutlienOn (i.e., disable filled polygons) for now.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetOutline ()</computeroutput> - Turn on/off drawing continents as filled polygons or as wireframe outlines. Warning: some graphics systems will have trouble with the very large, concave filled polygons. Recommend you use OutlienOn (i.e., disable filled polygons) for now.  </para></listitem>
<listitem>
<para><computeroutput>obj.OutlineOn ()</computeroutput> - Turn on/off drawing continents as filled polygons or as wireframe outlines. Warning: some graphics systems will have trouble with the very large, concave filled polygons. Recommend you use OutlienOn (i.e., disable filled polygons) for now.  </para></listitem>
<listitem>
<para><computeroutput>obj.OutlineOff ()</computeroutput> - Turn on/off drawing continents as filled polygons or as wireframe outlines. Warning: some graphics systems will have trouble with the very large, concave filled polygons. Recommend you use OutlienOn (i.e., disable filled polygons) for now.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
