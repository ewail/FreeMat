<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkstreamline" kind="page">
    <compoundname>vtkgraphics_vtkstreamline</compoundname>
    <title>vtkStreamLine</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkStreamLine is a filter that generates a streamline for an arbitrary dataset. A streamline is a line that is everywhere tangent to the vector field. Scalar values also are calculated along the streamline and can be used to color the line. Streamlines are calculated by integrating from a starting point through the vector field. Integration can be performed forward in time (see where the line goes), backward in time (see where the line came from), or in both directions. It also is possible to compute vorticity along the streamline. Vorticity is the projection (i.e., dot product) of the flow rotation on the velocity vector, i.e., the rotation of flow around the streamline.</para><para>vtkStreamLine defines the instance variable StepLength. This parameter controls the time increment used to generate individual points along the streamline(s). Smaller values result in more line primitives but smoother streamlines. The StepLength instance variable is defined in terms of time (i.e., the distance that the particle travels in the specified time period). Thus, the line segments will be smaller in areas of low velocity and larger in regions of high velocity. (NOTE: This is different than the IntegrationStepLength defined by the superclass vtkStreamer. IntegrationStepLength is used to control integration step size and is expressed as a fraction of the cell length.) The StepLength instance variable is important because subclasses of vtkStreamLine (e.g., vtkDashedStreamLine) depend on this value to build their representation.</para><para>To create an instance of class vtkStreamLine, simply invoke its constructor as follows <verbatim>  obj = vtkStreamLine
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkStreamLine has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkStreamLine class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkStreamLine = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkStreamLine = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetStepLength (double )</computeroutput> - Specify the length of a line segment. The length is expressed in terms of elapsed time. Smaller values result in smoother appearing streamlines, but greater numbers of line primitives.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetStepLengthMinValue ()</computeroutput> - Specify the length of a line segment. The length is expressed in terms of elapsed time. Smaller values result in smoother appearing streamlines, but greater numbers of line primitives.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetStepLengthMaxValue ()</computeroutput> - Specify the length of a line segment. The length is expressed in terms of elapsed time. Smaller values result in smoother appearing streamlines, but greater numbers of line primitives.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetStepLength ()</computeroutput> - Specify the length of a line segment. The length is expressed in terms of elapsed time. Smaller values result in smoother appearing streamlines, but greater numbers of line primitives.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
