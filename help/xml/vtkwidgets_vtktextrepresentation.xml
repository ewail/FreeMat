<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkwidgets_vtktextrepresentation" kind="page">
    <compoundname>vtkwidgets_vtktextrepresentation</compoundname>
    <title>vtkTextRepresentation</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkwidgets_1sec_vtkwidgets" kindref="member">Visualization Toolkit Widget Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>This class represents text for a vtkTextWidget. This class provides support for interactively placing text on the 2D overlay plane. The text is defined by an instance of vtkTextActor.</para><para>To create an instance of class vtkTextRepresentation, simply invoke its constructor as follows <verbatim>  obj = vtkTextRepresentation
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkTextRepresentation has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkTextRepresentation class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput> - Standard VTK methods.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput> - Standard VTK methods.  </para></listitem>
<listitem>
<para><computeroutput>vtkTextRepresentation = obj.NewInstance ()</computeroutput> - Standard VTK methods.  </para></listitem>
<listitem>
<para><computeroutput>vtkTextRepresentation = obj.SafeDownCast (vtkObject o)</computeroutput> - Standard VTK methods.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTextActor (vtkTextActor textActor)</computeroutput> - Specify the vtkTextActor to manage. If not specified, then one is automatically created.  </para></listitem>
<listitem>
<para><computeroutput>vtkTextActor = obj.GetTextActor ()</computeroutput> - Specify the vtkTextActor to manage. If not specified, then one is automatically created.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetText (string text)</computeroutput> - Get/Set the text string display by this representation.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetText ()</computeroutput> - Get/Set the text string display by this representation.  </para></listitem>
<listitem>
<para><computeroutput>obj.BuildRepresentation ()</computeroutput> - Satisfy the superclasses API.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetSize (double size[2])</computeroutput> - These methods are necessary to make this representation behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetActors2D (vtkPropCollection )</computeroutput> - These methods are necessary to make this representation behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>obj.ReleaseGraphicsResources (vtkWindow )</computeroutput> - These methods are necessary to make this representation behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOverlay (vtkViewport )</computeroutput> - These methods are necessary to make this representation behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOpaqueGeometry (vtkViewport )</computeroutput> - These methods are necessary to make this representation behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderTranslucentPolygonalGeometry (vtkViewport )</computeroutput> - These methods are necessary to make this representation behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.HasTranslucentPolygonalGeometry ()</computeroutput> - These methods are necessary to make this representation behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetWindowLocation (int enumLocation)</computeroutput> - Set the text position, by enumeration ( AnyLocation = 0, LowerLeftCorner, LowerRightCorner, LowerCenter, UpperLeftCorner, UpperRightCorner, UpperCenter) related to the render window  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetWindowLocation ()</computeroutput> - Set the text position, by enumeration ( AnyLocation = 0, LowerLeftCorner, LowerRightCorner, LowerCenter, UpperLeftCorner, UpperRightCorner, UpperCenter) related to the render window  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPosition (double x, double y)</computeroutput> - Set the text position, by overiding the same function of vtkBorderRepresentation so that the Modified() will be called.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPosition (double pos[2])</computeroutput> - Set the text position, by overiding the same function of vtkBorderRepresentation so that the Modified() will be called.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
