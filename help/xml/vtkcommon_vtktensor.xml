<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkcommon_vtktensor" kind="page">
    <compoundname>vtkcommon_vtktensor</compoundname>
    <title>vtkTensor</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkcommon_1sec_vtkcommon" kindref="member">Visualization Toolkit Common Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkTensor is a floating point representation of an nxn tensor. vtkTensor provides methods for assignment and reference of tensor components. It does it in such a way as to minimize data copying.</para><para>To create an instance of class vtkTensor, simply invoke its constructor as follows <verbatim>  obj = vtkTensor
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkTensor has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkTensor class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkTensor = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkTensor = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Initialize ()</computeroutput> - Initialize tensor components to 0.0.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetComponent (int i, int j)</computeroutput> - Get the tensor component (i,j).  </para></listitem>
<listitem>
<para><computeroutput>obj.SetComponent (int i, int j, double v)</computeroutput> - Set the value of the tensor component (i,j).  </para></listitem>
<listitem>
<para><computeroutput>obj.AddComponent (int i, int j, double v)</computeroutput> - Add to the value of the tensor component at location (i,j).  </para></listitem>
<listitem>
<para><computeroutput>obj.DeepCopy (vtkTensor t)</computeroutput> - Deep copy of one tensor to another tensor.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
