<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkrendering_vtkscalarbaractor" kind="page">
    <compoundname>vtkrendering_vtkscalarbaractor</compoundname>
    <title>vtkScalarBarActor</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkrendering_1sec_vtkrendering" kindref="member">Visualization Toolkit Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkScalarBarActor creates a scalar bar with annotation text. A scalar bar is a legend that indicates to the viewer the correspondence between color value and data value. The legend consists of a rectangular bar made of rectangular pieces each colored a constant value. Since vtkScalarBarActor is a subclass of vtkActor2D, it is drawn in the image plane (i.e., in the renderer&apos;s viewport) on top of the 3D graphics window.</para><para>To use vtkScalarBarActor you must associate a vtkScalarsToColors (or subclass) with it. The lookup table defines the colors and the range of scalar values used to map scalar data. Typically, the number of colors shown in the scalar bar is not equal to the number of colors in the lookup table, in which case sampling of the lookup table is performed.</para><para>Other optional capabilities include specifying the fraction of the viewport size (both x and y directions) which will control the size of the scalar bar and the number of annotation labels. The actual position of the scalar bar on the screen is controlled by using the vtkActor2D::SetPosition() method (by default the scalar bar is centered in the viewport). Other features include the ability to orient the scalar bar horizontally of vertically and controlling the format (printf style) with which to print the labels on the scalar bar. Also, the vtkScalarBarActor&apos;s property is applied to the scalar bar and annotation (including layer, and compositing operator).</para><para>Set the text property/attributes of the title and the labels through the vtkTextProperty objects associated to this actor.</para><para>To create an instance of class vtkScalarBarActor, simply invoke its constructor as follows <verbatim>  obj = vtkScalarBarActor
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkScalarBarActor has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkScalarBarActor class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkScalarBarActor = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkScalarBarActor = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOpaqueGeometry (vtkViewport viewport)</computeroutput> - Draw the scalar bar and annotation text to the screen.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderTranslucentPolygonalGeometry (vtkViewport )</computeroutput> - Draw the scalar bar and annotation text to the screen.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOverlay (vtkViewport viewport)</computeroutput> - Draw the scalar bar and annotation text to the screen.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.HasTranslucentPolygonalGeometry ()</computeroutput> - Does this prop have some translucent polygonal geometry?  </para></listitem>
<listitem>
<para><computeroutput>obj.ReleaseGraphicsResources (vtkWindow )</computeroutput> - Release any graphics resources that are being consumed by this actor. The parameter window could be used to determine which graphic resources to release.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLookupTable (vtkScalarsToColors )</computeroutput> - Set/Get the vtkLookupTable to use. The lookup table specifies the number of colors to use in the table (if not overridden), as well as the scalar range.  </para></listitem>
<listitem>
<para><computeroutput>vtkScalarsToColors = obj.GetLookupTable ()</computeroutput> - Set/Get the vtkLookupTable to use. The lookup table specifies the number of colors to use in the table (if not overridden), as well as the scalar range.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetUseOpacity (int )</computeroutput> - Should be display the opacity as well. This is displayed by changing the opacity of the scalar bar in accordance with the opacity of the given color. For clarity, a texture grid is placed in the background if Opacity is ON. You might also want to play with SetTextureGridWith in that case. [Default: off]  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetUseOpacity ()</computeroutput> - Should be display the opacity as well. This is displayed by changing the opacity of the scalar bar in accordance with the opacity of the given color. For clarity, a texture grid is placed in the background if Opacity is ON. You might also want to play with SetTextureGridWith in that case. [Default: off]  </para></listitem>
<listitem>
<para><computeroutput>obj.UseOpacityOn ()</computeroutput> - Should be display the opacity as well. This is displayed by changing the opacity of the scalar bar in accordance with the opacity of the given color. For clarity, a texture grid is placed in the background if Opacity is ON. You might also want to play with SetTextureGridWith in that case. [Default: off]  </para></listitem>
<listitem>
<para><computeroutput>obj.UseOpacityOff ()</computeroutput> - Should be display the opacity as well. This is displayed by changing the opacity of the scalar bar in accordance with the opacity of the given color. For clarity, a texture grid is placed in the background if Opacity is ON. You might also want to play with SetTextureGridWith in that case. [Default: off]  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMaximumNumberOfColors (int )</computeroutput> - Set/Get the maximum number of scalar bar segments to show. This may differ from the number of colors in the lookup table, in which case the colors are samples from the lookup table.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetMaximumNumberOfColorsMinValue ()</computeroutput> - Set/Get the maximum number of scalar bar segments to show. This may differ from the number of colors in the lookup table, in which case the colors are samples from the lookup table.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetMaximumNumberOfColorsMaxValue ()</computeroutput> - Set/Get the maximum number of scalar bar segments to show. This may differ from the number of colors in the lookup table, in which case the colors are samples from the lookup table.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetMaximumNumberOfColors ()</computeroutput> - Set/Get the maximum number of scalar bar segments to show. This may differ from the number of colors in the lookup table, in which case the colors are samples from the lookup table.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetNumberOfLabels (int )</computeroutput> - Set/Get the number of annotation labels to show.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfLabelsMinValue ()</computeroutput> - Set/Get the number of annotation labels to show.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfLabelsMaxValue ()</computeroutput> - Set/Get the number of annotation labels to show.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfLabels ()</computeroutput> - Set/Get the number of annotation labels to show.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOrientation (int )</computeroutput> - Control the orientation of the scalar bar.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetOrientationMinValue ()</computeroutput> - Control the orientation of the scalar bar.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetOrientationMaxValue ()</computeroutput> - Control the orientation of the scalar bar.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetOrientation ()</computeroutput> - Control the orientation of the scalar bar.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOrientationToHorizontal ()</computeroutput> - Control the orientation of the scalar bar.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOrientationToVertical ()</computeroutput> - Control the orientation of the scalar bar.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTitleTextProperty (vtkTextProperty p)</computeroutput> - Set/Get the title text property.  </para></listitem>
<listitem>
<para><computeroutput>vtkTextProperty = obj.GetTitleTextProperty ()</computeroutput> - Set/Get the title text property.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLabelTextProperty (vtkTextProperty p)</computeroutput> - Set/Get the labels text property.  </para></listitem>
<listitem>
<para><computeroutput>vtkTextProperty = obj.GetLabelTextProperty ()</computeroutput> - Set/Get the labels text property.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLabelFormat (string )</computeroutput> - Set/Get the format with which to print the labels on the scalar bar.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetLabelFormat ()</computeroutput> - Set/Get the format with which to print the labels on the scalar bar.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTitle (string )</computeroutput> - Set/Get the title of the scalar bar actor,  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetTitle ()</computeroutput> - Set/Get the title of the scalar bar actor,  </para></listitem>
<listitem>
<para><computeroutput>obj.ShallowCopy (vtkProp prop)</computeroutput> - Shallow copy of a scalar bar actor. Overloads the virtual vtkProp method.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTextureGridWidth (double )</computeroutput> - Set the width of the texture grid. Used only if UseOpacity is ON.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetTextureGridWidth ()</computeroutput> - Set the width of the texture grid. Used only if UseOpacity is ON.  </para></listitem>
<listitem>
<para><computeroutput>vtkActor2D = obj.GetTextureActor ()</computeroutput> - Get the texture actor.. you may want to change some properties on it  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTextPosition (int )</computeroutput> - Have the text preceding the scalar bar or suceeding it ? Succeed implies the that the text is Above scalar bar if orientation is horizontal or Right of scalar bar if orientation is vertical. Precede is the opposite  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTextPositionMinValue ()</computeroutput> - Have the text preceding the scalar bar or suceeding it ? Succeed implies the that the text is Above scalar bar if orientation is horizontal or Right of scalar bar if orientation is vertical. Precede is the opposite  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTextPositionMaxValue ()</computeroutput> - Have the text preceding the scalar bar or suceeding it ? Succeed implies the that the text is Above scalar bar if orientation is horizontal or Right of scalar bar if orientation is vertical. Precede is the opposite  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTextPosition ()</computeroutput> - Have the text preceding the scalar bar or suceeding it ? Succeed implies the that the text is Above scalar bar if orientation is horizontal or Right of scalar bar if orientation is vertical. Precede is the opposite  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTextPositionToPrecedeScalarBar ()</computeroutput> - Have the text preceding the scalar bar or suceeding it ? Succeed implies the that the text is Above scalar bar if orientation is horizontal or Right of scalar bar if orientation is vertical. Precede is the opposite  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTextPositionToSucceedScalarBar ()</computeroutput> - Set/Get the maximum width and height in pixels. Specifying the size as a relative fraction of the viewport can sometimes undersirably strech the size of the actor too much. These methods allow the user to set bounds on the maximum size of the scalar bar in pixels along any direction. Defaults to unbounded.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMaximumWidthInPixels (int )</computeroutput> - Set/Get the maximum width and height in pixels. Specifying the size as a relative fraction of the viewport can sometimes undersirably strech the size of the actor too much. These methods allow the user to set bounds on the maximum size of the scalar bar in pixels along any direction. Defaults to unbounded.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetMaximumWidthInPixels ()</computeroutput> - Set/Get the maximum width and height in pixels. Specifying the size as a relative fraction of the viewport can sometimes undersirably strech the size of the actor too much. These methods allow the user to set bounds on the maximum size of the scalar bar in pixels along any direction. Defaults to unbounded.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMaximumHeightInPixels (int )</computeroutput> - Set/Get the maximum width and height in pixels. Specifying the size as a relative fraction of the viewport can sometimes undersirably strech the size of the actor too much. These methods allow the user to set bounds on the maximum size of the scalar bar in pixels along any direction. Defaults to unbounded.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetMaximumHeightInPixels ()</computeroutput> - Set/Get the maximum width and height in pixels. Specifying the size as a relative fraction of the viewport can sometimes undersirably strech the size of the actor too much. These methods allow the user to set bounds on the maximum size of the scalar bar in pixels along any direction. Defaults to unbounded.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
