<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="io_sprintf" kind="page">
    <compoundname>io_sprintf</compoundname>
    <title>SPRINTF Formated String Output Function (C-Style)</title>
    <detaileddescription>
<para>Section: <ref refid="sec_io_1sec_io" kindref="member">Input/Ouput Functions</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Prints values to a string. The general syntax for its use is <verbatim>  y = sprintf(format,a1,a2,...).
</verbatim> Here <computeroutput>format</computeroutput> is the format string, which is a string that controls the format of the output. The values of the variables <computeroutput>a_i</computeroutput> are substituted into the output as required. It is an error if there are not enough variables to satisfy the format string. Note that this <computeroutput>sprintf</computeroutput> command is not vectorized! Each variable must be a scalar. The returned value <computeroutput>y</computeroutput> contains the string that would normally have been printed. For more details on the format string, see <computeroutput>printf</computeroutput>. </para></sect1>
<sect1 id="variables_matrix_1Examples">
<title>Examples</title>
<para>Here is an example of a loop that generates a sequence of files based on a template name, and stores them in a cell array.</para><para><verbatim>--&gt; l = {}; for i = 1:5; s = sprintf(&apos;file_%d.dat&apos;,i); l(i) = {s}; end;
--&gt; l

ans = 
 [file_1.dat] [file_2.dat] [file_3.dat] [file_4.dat] [file_5.dat] 
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
