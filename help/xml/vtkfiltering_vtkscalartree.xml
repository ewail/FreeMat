<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtkscalartree" kind="page">
    <compoundname>vtkfiltering_vtkscalartree</compoundname>
    <title>vtkScalarTree</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkScalarTree is an abstract class that defines the API to concrete scalar tree subclasses. A scalar tree is a data structure that organizes data according to its scalar value. This allows rapid access to data for those algorithms that access the data based on scalar value. For example, isocontouring operates on cells based on the scalar (isocontour) value.</para><para>To use subclasses of this class, you must specify a dataset to operate on, and then specify a scalar value in the InitTraversal() method. Then calls to GetNextCell() return cells whose scalar data contains the scalar value specified.</para><para>To create an instance of class vtkScalarTree, simply invoke its constructor as follows <verbatim>  obj = vtkScalarTree
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkScalarTree has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkScalarTree class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkScalarTree = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkScalarTree = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDataSet (vtkDataSet )</computeroutput> - Build the tree from the points/cells defining this dataset.  </para></listitem>
<listitem>
<para><computeroutput>vtkDataSet = obj.GetDataSet ()</computeroutput> - Build the tree from the points/cells defining this dataset.  </para></listitem>
<listitem>
<para><computeroutput>obj.BuildTree ()</computeroutput> - Construct the scalar tree from the dataset provided. Checks build times and modified time from input and reconstructs the tree if necessary.  </para></listitem>
<listitem>
<para><computeroutput>obj.Initialize ()</computeroutput> - Initialize locator. Frees memory and resets object as appropriate.  </para></listitem>
<listitem>
<para><computeroutput>obj.InitTraversal (double scalarValue)</computeroutput> - Begin to traverse the cells based on a scalar value. Returned cells will have scalar values that span the scalar value specified.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
