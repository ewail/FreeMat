<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="transforms_qr" kind="page">
    <compoundname>transforms_qr</compoundname>
    <title>QR QR Decomposition of a Matrix</title>
    <detaileddescription>
<para>Section: <ref refid="sec_transforms_1sec_transforms" kindref="member">Transforms/Decompositions</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Computes the QR factorization of a matrix. The <computeroutput>qr</computeroutput> function has multiple forms, with and without pivoting. The non-pivot version has two forms, a compact version and a full-blown decomposition version. The compact version of the decomposition of a matrix of size <computeroutput>M x N</computeroutput> is <verbatim>  [q,r] = qr(a,0)
</verbatim> where <computeroutput>q</computeroutput> is a matrix of size <computeroutput>M x L</computeroutput> and <computeroutput>r</computeroutput> is a matrix of size <computeroutput>L x N</computeroutput> and <computeroutput>L = min(N,M)</computeroutput>, and <computeroutput>q*r = a</computeroutput>. The QR decomposition is such that the columns of <computeroutput>Q</computeroutput> are orthonormal, and <computeroutput>R</computeroutput> is upper triangular. The decomposition is computed using the LAPACK routine <computeroutput>xgeqrf</computeroutput>, where <computeroutput>x</computeroutput> is the precision of the matrix. FreeMat supports decompositions of <computeroutput>single</computeroutput> and <computeroutput>double</computeroutput> types.</para><para>The second form of the non-pivot decomposition omits the second <computeroutput>0</computeroutput> argument: <verbatim>  [q,r] = qr(a)
</verbatim> This second form differs from the previous form only for matrices with more rows than columns (<computeroutput>M &gt; N</computeroutput>). For these matrices, the full decomposition is of a matrix <computeroutput>Q</computeroutput> of size <computeroutput>M x M</computeroutput> and a matrix <computeroutput>R</computeroutput> of size <computeroutput>M x N</computeroutput>. The full decomposition is computed using the same LAPACK routines as the compact decomposition, but on an augmented matrix <computeroutput>[a 0]</computeroutput>, where enough columns are added to form a square matrix.</para><para>Generally, the QR decomposition will not return a matrix <computeroutput>R</computeroutput> with diagonal elements in any specific order. The remaining two forms of the <computeroutput>qr</computeroutput> command utilize permutations of the columns of <computeroutput>a</computeroutput> so that the diagonal elements of <computeroutput>r</computeroutput> are in decreasing magnitude. To trigger this form of the decomposition, a third argument is required, which records the permutation applied to the argument <computeroutput>a</computeroutput>. The compact version is <verbatim>  [q,r,e] = qr(a,0)
</verbatim> where <computeroutput>e</computeroutput> is an integer vector that describes the permutation of the columns of <computeroutput>a</computeroutput> necessary to reorder the diagonal elements of <computeroutput>r</computeroutput>. This result is computed using the LAPACK routines <computeroutput>(s,d)geqp3</computeroutput>. In the non-compact version of the QR decomposition with pivoting, <verbatim>  [q,r,e] = qr(a)
</verbatim> the returned matrix <computeroutput>e</computeroutput> is a permutation matrix, such that <computeroutput>q*r*e&apos; = a</computeroutput>. </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
