<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtkimplicitwindowfunction" kind="page">
    <compoundname>vtkfiltering_vtkimplicitwindowfunction</compoundname>
    <title>vtkImplicitWindowFunction</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkImplicitWindowFunction is used to modify the output of another implicit function to lie within a specified &quot;window&quot;, or function range. This can be used to add &quot;thickness&quot; to cutting or clipping functions.</para><para>This class works as follows. First, it evaluates the function value of the user-specified implicit function. Then, based on the window range specified, it maps the function value into the window values specified.</para><para>To create an instance of class vtkImplicitWindowFunction, simply invoke its constructor as follows <verbatim>  obj = vtkImplicitWindowFunction
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkImplicitWindowFunction has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkImplicitWindowFunction class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImplicitWindowFunction = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImplicitWindowFunction = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>double = obj.EvaluateFunction (double x[3])</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>double = obj.EvaluateFunction (double x, double y, double z)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.EvaluateGradient (double x[3], double n[3])</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetImplicitFunction (vtkImplicitFunction )</computeroutput> - Specify an implicit function to operate on.  </para></listitem>
<listitem>
<para><computeroutput>vtkImplicitFunction = obj.GetImplicitFunction ()</computeroutput> - Specify an implicit function to operate on.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetWindowRange (double , double )</computeroutput> - Specify the range of function values which are considered to lie within the window. WindowRange[0] is assumed to be less than WindowRange[1].  </para></listitem>
<listitem>
<para><computeroutput>obj.SetWindowRange (double a[2])</computeroutput> - Specify the range of function values which are considered to lie within the window. WindowRange[0] is assumed to be less than WindowRange[1].  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetWindowRange ()</computeroutput> - Specify the range of function values which are considered to lie within the window. WindowRange[0] is assumed to be less than WindowRange[1].  </para></listitem>
<listitem>
<para><computeroutput>obj.SetWindowValues (double , double )</computeroutput> - Specify the range of output values that the window range is mapped into. This is effectively a scaling and shifting of the original function values.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetWindowValues (double a[2])</computeroutput> - Specify the range of output values that the window range is mapped into. This is effectively a scaling and shifting of the original function values.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetWindowValues ()</computeroutput> - Specify the range of output values that the window range is mapped into. This is effectively a scaling and shifting of the original function values.  </para></listitem>
<listitem>
<para><computeroutput>long = obj.GetMTime ()</computeroutput> - Override modified time retrieval because of object dependencies.  </para></listitem>
<listitem>
<para><computeroutput>obj.Register (vtkObjectBase o)</computeroutput> - Participate in garbage collection.  </para></listitem>
<listitem>
<para><computeroutput>obj.UnRegister (vtkObjectBase o)</computeroutput> - Participate in garbage collection.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
