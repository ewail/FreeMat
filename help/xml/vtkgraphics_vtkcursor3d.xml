<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkcursor3d" kind="page">
    <compoundname>vtkgraphics_vtkcursor3d</compoundname>
    <title>vtkCursor3D</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkCursor3D is an object that generates a 3D representation of a cursor. The cursor consists of a wireframe bounding box, three intersecting axes lines that meet at the cursor focus, and &quot;shadows&quot; or projections of the axes against the sides of the bounding box. Each of these components can be turned on/off.</para><para>This filter generates two output datasets. The first (Output) is just the geometric representation of the cursor. The second (Focus) is a single point at the focal point.</para><para>To create an instance of class vtkCursor3D, simply invoke its constructor as follows <verbatim>  obj = vtkCursor3D
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkCursor3D has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkCursor3D class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCursor3D = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCursor3D = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetModelBounds (double xmin, double xmax, double ymin, double ymax, double zmin, double zmax)</computeroutput> - Set / get the boundary of the 3D cursor.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetModelBounds (double bounds[6])</computeroutput> - Set / get the boundary of the 3D cursor.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetModelBounds ()</computeroutput> - Set / get the boundary of the 3D cursor.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFocalPoint (double x[3])</computeroutput> - Set/Get the position of cursor focus. If translation mode is on, then the entire cursor (including bounding box, cursor, and shadows) is translated. Otherwise, the focal point will either be clamped to the bounding box, or wrapped, if Wrap is on. (Note: this behavior requires that the bounding box is set prior to the focal point.)  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFocalPoint (double x, double y, double z)</computeroutput> - Set/Get the position of cursor focus. If translation mode is on, then the entire cursor (including bounding box, cursor, and shadows) is translated. Otherwise, the focal point will either be clamped to the bounding box, or wrapped, if Wrap is on. (Note: this behavior requires that the bounding box is set prior to the focal point.)  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetFocalPoint ()</computeroutput> - Set/Get the position of cursor focus. If translation mode is on, then the entire cursor (including bounding box, cursor, and shadows) is translated. Otherwise, the focal point will either be clamped to the bounding box, or wrapped, if Wrap is on. (Note: this behavior requires that the bounding box is set prior to the focal point.)  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutline (int )</computeroutput> - Turn on/off the wireframe bounding box.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetOutline ()</computeroutput> - Turn on/off the wireframe bounding box.  </para></listitem>
<listitem>
<para><computeroutput>obj.OutlineOn ()</computeroutput> - Turn on/off the wireframe bounding box.  </para></listitem>
<listitem>
<para><computeroutput>obj.OutlineOff ()</computeroutput> - Turn on/off the wireframe bounding box.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetAxes (int )</computeroutput> - Turn on/off the wireframe axes.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetAxes ()</computeroutput> - Turn on/off the wireframe axes.  </para></listitem>
<listitem>
<para><computeroutput>obj.AxesOn ()</computeroutput> - Turn on/off the wireframe axes.  </para></listitem>
<listitem>
<para><computeroutput>obj.AxesOff ()</computeroutput> - Turn on/off the wireframe axes.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetXShadows (int )</computeroutput> - Turn on/off the wireframe x-shadows.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetXShadows ()</computeroutput> - Turn on/off the wireframe x-shadows.  </para></listitem>
<listitem>
<para><computeroutput>obj.XShadowsOn ()</computeroutput> - Turn on/off the wireframe x-shadows.  </para></listitem>
<listitem>
<para><computeroutput>obj.XShadowsOff ()</computeroutput> - Turn on/off the wireframe x-shadows.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetYShadows (int )</computeroutput> - Turn on/off the wireframe y-shadows.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetYShadows ()</computeroutput> - Turn on/off the wireframe y-shadows.  </para></listitem>
<listitem>
<para><computeroutput>obj.YShadowsOn ()</computeroutput> - Turn on/off the wireframe y-shadows.  </para></listitem>
<listitem>
<para><computeroutput>obj.YShadowsOff ()</computeroutput> - Turn on/off the wireframe y-shadows.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetZShadows (int )</computeroutput> - Turn on/off the wireframe z-shadows.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetZShadows ()</computeroutput> - Turn on/off the wireframe z-shadows.  </para></listitem>
<listitem>
<para><computeroutput>obj.ZShadowsOn ()</computeroutput> - Turn on/off the wireframe z-shadows.  </para></listitem>
<listitem>
<para><computeroutput>obj.ZShadowsOff ()</computeroutput> - Turn on/off the wireframe z-shadows.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTranslationMode (int )</computeroutput> - Enable/disable the translation mode. If on, changes in cursor position cause the entire widget to translate along with the cursor. By default, translation mode is off.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTranslationMode ()</computeroutput> - Enable/disable the translation mode. If on, changes in cursor position cause the entire widget to translate along with the cursor. By default, translation mode is off.  </para></listitem>
<listitem>
<para><computeroutput>obj.TranslationModeOn ()</computeroutput> - Enable/disable the translation mode. If on, changes in cursor position cause the entire widget to translate along with the cursor. By default, translation mode is off.  </para></listitem>
<listitem>
<para><computeroutput>obj.TranslationModeOff ()</computeroutput> - Enable/disable the translation mode. If on, changes in cursor position cause the entire widget to translate along with the cursor. By default, translation mode is off.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetWrap (int )</computeroutput> - Turn on/off cursor wrapping. If the cursor focus moves outside the specified bounds, the cursor will either be restrained against the nearest &quot;wall&quot; (Wrap=off), or it will wrap around (Wrap=on).  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetWrap ()</computeroutput> - Turn on/off cursor wrapping. If the cursor focus moves outside the specified bounds, the cursor will either be restrained against the nearest &quot;wall&quot; (Wrap=off), or it will wrap around (Wrap=on).  </para></listitem>
<listitem>
<para><computeroutput>obj.WrapOn ()</computeroutput> - Turn on/off cursor wrapping. If the cursor focus moves outside the specified bounds, the cursor will either be restrained against the nearest &quot;wall&quot; (Wrap=off), or it will wrap around (Wrap=on).  </para></listitem>
<listitem>
<para><computeroutput>obj.WrapOff ()</computeroutput> - Turn on/off cursor wrapping. If the cursor focus moves outside the specified bounds, the cursor will either be restrained against the nearest &quot;wall&quot; (Wrap=off), or it will wrap around (Wrap=on).  </para></listitem>
<listitem>
<para><computeroutput>vtkPolyData = obj.GetFocus ()</computeroutput> - Get the focus for this filter.  </para></listitem>
<listitem>
<para><computeroutput>obj.AllOn ()</computeroutput> - Turn every part of the 3D cursor on or off.  </para></listitem>
<listitem>
<para><computeroutput>obj.AllOff ()</computeroutput> - Turn every part of the 3D cursor on or off.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
