<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtkimagetostructuredpoints" kind="page">
    <compoundname>vtkfiltering_vtkimagetostructuredpoints</compoundname>
    <title>vtkImageToStructuredPoints</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkImageToStructuredPoints changes an image cache format to a structured points dataset. It takes an Input plus an optional VectorInput. The VectorInput converts the RGB scalar components of the VectorInput to vector pointdata attributes. This filter will try to reference count the data but in some cases it must make a copy.</para><para>To create an instance of class vtkImageToStructuredPoints, simply invoke its constructor as follows <verbatim>  obj = vtkImageToStructuredPoints
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkImageToStructuredPoints has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkImageToStructuredPoints class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImageToStructuredPoints = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImageToStructuredPoints = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetVectorInput (vtkImageData input)</computeroutput> - Set/Get the input object from the image pipeline.  </para></listitem>
<listitem>
<para><computeroutput>vtkImageData = obj.GetVectorInput ()</computeroutput> - Set/Get the input object from the image pipeline.  </para></listitem>
<listitem>
<para><computeroutput>vtkStructuredPoints = obj.GetStructuredPointsOutput ()</computeroutput> - Get the output of the filter.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
