<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="operators_typerules" kind="page">
    <compoundname>operators_typerules</compoundname>
    <title>TYPERULES Type Rules for Operators</title>
    <detaileddescription>
<para>Section: <ref refid="sec_operators_1sec_operators" kindref="member">Mathematical Operators</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Starting with FreeMat 4.0, the type of <computeroutput>y</computeroutput> is determined according to the same rules as Matlab. These are the rules: <orderedlist>
<listitem>
<para>Integer types of the same class can be combined. The answer is the same type as the inputs, and the operation is performed using saturating arithmetic. Integer types can also be combined with double precision values (again, the result is of the integer type).  </para></listitem>
<listitem>
<para>Single precision floating point values can be combined with double precision, logical and character array classes. The result is of class single.  </para></listitem>
<listitem>
<para>Double precision floating point values can be combined with all other types. Except as noted above, the output is of double precision.  </para></listitem>
</orderedlist>
These rules look strange, and they are. In general, computations are done in double precision in almost all cases. When single precision values are involved, the computations take place in single precision. </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
