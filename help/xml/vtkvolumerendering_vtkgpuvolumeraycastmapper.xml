<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkvolumerendering_vtkgpuvolumeraycastmapper" kind="page">
    <compoundname>vtkvolumerendering_vtkgpuvolumeraycastmapper</compoundname>
    <title>vtkGPUVolumeRayCastMapper</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkvolumerendering_1sec_vtkvolumerendering" kindref="member">Visualization Toolkit Volume Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkGPUVolumeRayCastMapper is a volume mapper that performs ray casting on the GPU using fragment programs.</para><para>To create an instance of class vtkGPUVolumeRayCastMapper, simply invoke its constructor as follows <verbatim>  obj = vtkGPUVolumeRayCastMapper
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkGPUVolumeRayCastMapper has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkGPUVolumeRayCastMapper class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkGPUVolumeRayCastMapper = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkGPUVolumeRayCastMapper = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetAutoAdjustSampleDistances (int )</computeroutput> - If AutoAdjustSampleDistances is on, the the ImageSampleDistance will be varied to achieve the allocated render time of this prop (controlled by the desired update rate and any culling in use).  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetAutoAdjustSampleDistancesMinValue ()</computeroutput> - If AutoAdjustSampleDistances is on, the the ImageSampleDistance will be varied to achieve the allocated render time of this prop (controlled by the desired update rate and any culling in use).  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetAutoAdjustSampleDistancesMaxValue ()</computeroutput> - If AutoAdjustSampleDistances is on, the the ImageSampleDistance will be varied to achieve the allocated render time of this prop (controlled by the desired update rate and any culling in use).  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetAutoAdjustSampleDistances ()</computeroutput> - If AutoAdjustSampleDistances is on, the the ImageSampleDistance will be varied to achieve the allocated render time of this prop (controlled by the desired update rate and any culling in use).  </para></listitem>
<listitem>
<para><computeroutput>obj.AutoAdjustSampleDistancesOn ()</computeroutput> - If AutoAdjustSampleDistances is on, the the ImageSampleDistance will be varied to achieve the allocated render time of this prop (controlled by the desired update rate and any culling in use).  </para></listitem>
<listitem>
<para><computeroutput>obj.AutoAdjustSampleDistancesOff ()</computeroutput> - If AutoAdjustSampleDistances is on, the the ImageSampleDistance will be varied to achieve the allocated render time of this prop (controlled by the desired update rate and any culling in use).  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSampleDistance (float )</computeroutput> - Set/Get the distance between samples used for rendering when AutoAdjustSampleDistances is off, or when this mapper has more than 1 second allocated to it for rendering. Initial value is 1.0.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetSampleDistance ()</computeroutput> - Set/Get the distance between samples used for rendering when AutoAdjustSampleDistances is off, or when this mapper has more than 1 second allocated to it for rendering. Initial value is 1.0.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetImageSampleDistance (float )</computeroutput> - Sampling distance in the XY image dimensions. Default value of 1 meaning 1 ray cast per pixel. If set to 0.5, 4 rays will be cast per pixel. If set to 2.0, 1 ray will be cast for every 4 (2 by 2) pixels. This value will be adjusted to meet a desired frame rate when AutoAdjustSampleDistances is on.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetImageSampleDistanceMinValue ()</computeroutput> - Sampling distance in the XY image dimensions. Default value of 1 meaning 1 ray cast per pixel. If set to 0.5, 4 rays will be cast per pixel. If set to 2.0, 1 ray will be cast for every 4 (2 by 2) pixels. This value will be adjusted to meet a desired frame rate when AutoAdjustSampleDistances is on.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetImageSampleDistanceMaxValue ()</computeroutput> - Sampling distance in the XY image dimensions. Default value of 1 meaning 1 ray cast per pixel. If set to 0.5, 4 rays will be cast per pixel. If set to 2.0, 1 ray will be cast for every 4 (2 by 2) pixels. This value will be adjusted to meet a desired frame rate when AutoAdjustSampleDistances is on.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetImageSampleDistance ()</computeroutput> - Sampling distance in the XY image dimensions. Default value of 1 meaning 1 ray cast per pixel. If set to 0.5, 4 rays will be cast per pixel. If set to 2.0, 1 ray will be cast for every 4 (2 by 2) pixels. This value will be adjusted to meet a desired frame rate when AutoAdjustSampleDistances is on.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMinimumImageSampleDistance (float )</computeroutput> - This is the minimum image sample distance allow when the image sample distance is being automatically adjusted.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetMinimumImageSampleDistanceMinValue ()</computeroutput> - This is the minimum image sample distance allow when the image sample distance is being automatically adjusted.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetMinimumImageSampleDistanceMaxValue ()</computeroutput> - This is the minimum image sample distance allow when the image sample distance is being automatically adjusted.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetMinimumImageSampleDistance ()</computeroutput> - This is the minimum image sample distance allow when the image sample distance is being automatically adjusted.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMaximumImageSampleDistance (float )</computeroutput> - This is the maximum image sample distance allow when the image sample distance is being automatically adjusted.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetMaximumImageSampleDistanceMinValue ()</computeroutput> - This is the maximum image sample distance allow when the image sample distance is being automatically adjusted.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetMaximumImageSampleDistanceMaxValue ()</computeroutput> - This is the maximum image sample distance allow when the image sample distance is being automatically adjusted.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetMaximumImageSampleDistance ()</computeroutput> - This is the maximum image sample distance allow when the image sample distance is being automatically adjusted.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFinalColorWindow (float )</computeroutput> - Set/Get the window / level applied to the final color. This allows brightness / contrast adjustments on the final image. window is the width of the window. level is the center of the window. Initial window value is 1.0 Initial level value is 0.5 window cannot be null but can be negative, this way values will be reversed. |window| can be larger than 1.0 level can be any real value.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetFinalColorWindow ()</computeroutput> - Set/Get the window / level applied to the final color. This allows brightness / contrast adjustments on the final image. window is the width of the window. level is the center of the window. Initial window value is 1.0 Initial level value is 0.5 window cannot be null but can be negative, this way values will be reversed. |window| can be larger than 1.0 level can be any real value.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFinalColorLevel (float )</computeroutput> - Set/Get the window / level applied to the final color. This allows brightness / contrast adjustments on the final image. window is the width of the window. level is the center of the window. Initial window value is 1.0 Initial level value is 0.5 window cannot be null but can be negative, this way values will be reversed. |window| can be larger than 1.0 level can be any real value.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetFinalColorLevel ()</computeroutput> - Set/Get the window / level applied to the final color. This allows brightness / contrast adjustments on the final image. window is the width of the window. level is the center of the window. Initial window value is 1.0 Initial level value is 0.5 window cannot be null but can be negative, this way values will be reversed. |window| can be larger than 1.0 level can be any real value.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMaxMemoryInBytes (vtkIdType )</computeroutput> - Maximum size of the 3D texture in GPU memory. Will default to the size computed from the graphics card. Can be adjusted by the user.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetMaxMemoryInBytes ()</computeroutput> - Maximum size of the 3D texture in GPU memory. Will default to the size computed from the graphics card. Can be adjusted by the user.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMaxMemoryFraction (float )</computeroutput> - Maximum fraction of the MaxMemoryInBytes that should be used to hold the texture. Valid values are 0.1 to 1.0.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetMaxMemoryFractionMinValue ()</computeroutput> - Maximum fraction of the MaxMemoryInBytes that should be used to hold the texture. Valid values are 0.1 to 1.0.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetMaxMemoryFractionMaxValue ()</computeroutput> - Maximum fraction of the MaxMemoryInBytes that should be used to hold the texture. Valid values are 0.1 to 1.0.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetMaxMemoryFraction ()</computeroutput> - Maximum fraction of the MaxMemoryInBytes that should be used to hold the texture. Valid values are 0.1 to 1.0.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetReportProgress (bool )</computeroutput> - Tells if the mapper will report intermediate progress. Initial value is true. As the progress works with a GL blocking call (glFinish()), this can be useful for huge dataset but can slow down rendering of small dataset. It should be set to true for big dataset or complex shading and streaming but to false for small datasets.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetReportProgress ()</computeroutput> - Tells if the mapper will report intermediate progress. Initial value is true. As the progress works with a GL blocking call (glFinish()), this can be useful for huge dataset but can slow down rendering of small dataset. It should be set to true for big dataset or complex shading and streaming but to false for small datasets.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsRenderSupported (vtkRenderWindow , vtkVolumeProperty )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.CreateCanonicalView (vtkRenderer ren, vtkVolume volume, vtkImageData image, int blend_mode, double viewDirection[3], double viewUp[3])</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMaskInput (vtkImageData mask)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImageData = obj.GetMaskInput ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMaskBlendFactor (float )</computeroutput> - Tells how much mask color transfer function is used compared to the standard color transfer function when the mask is true. 0.0 means only standard color transfer function. 1.0 means only mask color tranfer function. Initial value is 1.0.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetMaskBlendFactorMinValue ()</computeroutput> - Tells how much mask color transfer function is used compared to the standard color transfer function when the mask is true. 0.0 means only standard color transfer function. 1.0 means only mask color tranfer function. Initial value is 1.0.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetMaskBlendFactorMaxValue ()</computeroutput> - Tells how much mask color transfer function is used compared to the standard color transfer function when the mask is true. 0.0 means only standard color transfer function. 1.0 means only mask color tranfer function. Initial value is 1.0.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetMaskBlendFactor ()</computeroutput> - Tells how much mask color transfer function is used compared to the standard color transfer function when the mask is true. 0.0 means only standard color transfer function. 1.0 means only mask color tranfer function. Initial value is 1.0.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
