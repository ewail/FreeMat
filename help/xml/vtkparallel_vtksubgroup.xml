<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkparallel_vtksubgroup" kind="page">
    <compoundname>vtkparallel_vtksubgroup</compoundname>
    <title>vtkSubGroup</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkparallel_1sec_vtkparallel" kindref="member">Visualization Toolkit Parallel Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>This class provides scalable broadcast, reduce, etc. using only a vtkMultiProcessController. It does not require MPI. Users are vtkPKdTree and vtkDistributedDataFilter.</para><para>.SECTION Note This class will be deprecated soon. Instead of using this class, use the collective and subgrouping operations now built into vtkMultiProcessController. The only reason this class is not deprecated already is because vtkPKdTree relies heavily on this class in ways that are not easy to work around. Since vtkPKdTree is due for a major overhaul anyway, we are leaving things the way they are for now.</para><para>To create an instance of class vtkSubGroup, simply invoke its constructor as follows <verbatim>  obj = vtkSubGroup
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkSubGroup has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkSubGroup class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkSubGroup = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkSubGroup = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.Initialize (int p0, int p1, int me, int tag, vtkCommunicator c)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.Gather (int data, int to, int length, int root)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.Gather (string data, string to, int length, int root)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.Gather (float data, float to, int length, int root)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.Broadcast (float data, int length, int root)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.Broadcast (double data, int length, int root)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.Broadcast (int data, int length, int root)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.Broadcast (string data, int length, int root)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.ReduceSum (int data, int to, int length, int root)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.ReduceMax (float data, float to, int length, int root)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.ReduceMax (double data, double to, int length, int root)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.ReduceMax (int data, int to, int length, int root)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.ReduceMin (float data, float to, int length, int root)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.ReduceMin (double data, double to, int length, int root)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.ReduceMin (int data, int to, int length, int root)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.setGatherPattern (int root, int length)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.getLocalRank (int processID)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.Barrier ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.PrintSubGroup () const</computeroutput>  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
