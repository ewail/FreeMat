<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkparallel_vtkpcosmohalofinder" kind="page">
    <compoundname>vtkparallel_vtkpcosmohalofinder</compoundname>
    <title>vtkPCosmoHaloFinder</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkparallel_1sec_vtkparallel" kindref="member">Visualization Toolkit Parallel Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkPCosmoHaloFinder is a filter object that operates on the unstructured grid of all particles and assigns each particle a halo id.</para><para>To create an instance of class vtkPCosmoHaloFinder, simply invoke its constructor as follows <verbatim>  obj = vtkPCosmoHaloFinder
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkPCosmoHaloFinder has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkPCosmoHaloFinder class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkPCosmoHaloFinder = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkPCosmoHaloFinder = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkMultiProcessController = obj.GetController ()</computeroutput> - Set the communicator object for interprocess communication  </para></listitem>
<listitem>
<para><computeroutput>obj.SetController (vtkMultiProcessController )</computeroutput> - Set the communicator object for interprocess communication  </para></listitem>
<listitem>
<para><computeroutput>obj.SetNP (int )</computeroutput> - Specify the number of seeded particles in one dimension (total = np^3)  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNP ()</computeroutput> - Specify the number of seeded particles in one dimension (total = np^3)  </para></listitem>
<listitem>
<para><computeroutput>obj.SetRL (float )</computeroutput> - Specify the physical box dimensions size (rL) (default 91)  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetRL ()</computeroutput> - Specify the physical box dimensions size (rL) (default 91)  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOverlap (float )</computeroutput> - Specify the ghost cell spacing (edge boundary of box) (default 5)  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetOverlap ()</computeroutput> - Specify the ghost cell spacing (edge boundary of box) (default 5)  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPMin (int )</computeroutput> - Specify the minimum number of particles for a halo (pmin)  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetPMin ()</computeroutput> - Specify the minimum number of particles for a halo (pmin)  </para></listitem>
<listitem>
<para><computeroutput>obj.SetBB (float )</computeroutput> - Specify the linking length (bb)  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetBB ()</computeroutput> - Specify the linking length (bb)  </para></listitem>
<listitem>
<para><computeroutput>obj.SetParticleMass (float )</computeroutput> - Specify the particle mass  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetParticleMass ()</computeroutput> - Specify the particle mass  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCopyHaloDataToParticles (int )</computeroutput> - Copy the halo information to the original particles (Default on)  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCopyHaloDataToParticles ()</computeroutput> - Copy the halo information to the original particles (Default on)  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
