<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkinfovis_vtkgenerateindexarray" kind="page">
    <compoundname>vtkinfovis_vtkgenerateindexarray</compoundname>
    <title>vtkGenerateIndexArray</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkinfovis_1sec_vtkinfovis" kindref="member">Visualization Toolkit Infovis Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Generates a new vtkIdTypeArray containing zero-base indices.</para><para>vtkGenerateIndexArray operates in one of two distinct &quot;modes&quot;. By default, it simply generates an index array containing monotonically-increasing integers in the range [0, N), where N is appropriately sized for the field type that will store the results. This mode is useful for generating a unique ID field for datasets that have none.</para><para>The second &quot;mode&quot; uses an existing array from the input data object as a &quot;reference&quot;. Distinct values from the reference array are sorted in ascending order, and an integer index in the range [0, N) is assigned to each. The resulting map is used to populate the output index array, mapping each value in the reference array to its corresponding index and storing the result in the output array. This mode is especially useful when generating tensors, since it allows us to &quot;map&quot; from an array with arbitrary contents to an index that can be used as tensor coordinates.</para><para>To create an instance of class vtkGenerateIndexArray, simply invoke its constructor as follows <verbatim>  obj = vtkGenerateIndexArray
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkGenerateIndexArray has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkGenerateIndexArray class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkGenerateIndexArray = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkGenerateIndexArray = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetArrayName (string )</computeroutput> - Control the output index array name. Default: &quot;index&quot;.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetArrayName ()</computeroutput> - Control the output index array name. Default: &quot;index&quot;.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFieldType (int )</computeroutput> - Control the location where the index array will be stored.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetFieldType ()</computeroutput> - Control the location where the index array will be stored.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetReferenceArrayName (string )</computeroutput> - Specifies an optional reference array for index-generation.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetReferenceArrayName ()</computeroutput> - Specifies an optional reference array for index-generation.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPedigreeID (int )</computeroutput> - Specifies whether the index array should be marked as pedigree ids. Default: false.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetPedigreeID ()</computeroutput> - Specifies whether the index array should be marked as pedigree ids. Default: false.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
