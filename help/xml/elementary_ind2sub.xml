<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="elementary_ind2sub" kind="page">
    <compoundname>elementary_ind2sub</compoundname>
    <title>IND2SUB Convert Linear Indexing To Multiple Indexing</title>
    <detaileddescription>
<para>Section: <ref refid="sec_elementary_1sec_elementary" kindref="member">Elementary Functions</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The <computeroutput>ind2sub</computeroutput> function converts linear indexing expression into a multi-dimensional indexing expressionl The syntax for its use is <verbatim>   [d1, d2, ..., dn] = ind2sub(sizevec,index)
</verbatim> where <computeroutput>sizevec</computeroutput> is the size of the array being indexed into, index is the index value. Each <computeroutput>di</computeroutput> is a vector of the same length, containing index values. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>Suppose we have a simple <computeroutput>3 x 4</computeroutput> matrix <computeroutput>A</computeroutput> containing some random integer elements</para><para><verbatim>--&gt; A = randi(ones(3,4),10*ones(3,4))

A = 
  6  6  9  6 
 10  1  8  6 
  9  1  6  2 
</verbatim></para><para><verbatim>--&gt; [d1 d2] = ind2sub(size(A),7)
d1 = 
 1 

d2 = 
 3 

--&gt; A(d1,d2)

ans = 
 9 
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
