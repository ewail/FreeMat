<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtkoutedgeiterator" kind="page">
    <compoundname>vtkfiltering_vtkoutedgeiterator</compoundname>
    <title>vtkOutEdgeIterator</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkOutEdgeIterator iterates through all edges whose source is a particular vertex. Instantiate this class directly and call Initialize() to traverse the vertex of a graph. Alternately, use GetInEdges() on the graph to initialize the iterator. it-&gt;Next() returns a vtkOutEdgeType structure, which contains Id, the edge&apos;s id, and Target, the edge&apos;s target vertex.</para><para>To create an instance of class vtkOutEdgeIterator, simply invoke its constructor as follows <verbatim>  obj = vtkOutEdgeIterator
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkOutEdgeIterator has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkOutEdgeIterator class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkOutEdgeIterator = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkOutEdgeIterator = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Initialize (vtkGraph g, vtkIdType v)</computeroutput> - Initialize the iterator with a graph and vertex.  </para></listitem>
<listitem>
<para><computeroutput>vtkGraph = obj.GetGraph ()</computeroutput> - Get the graph and vertex associated with this iterator.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetVertex ()</computeroutput> - Get the graph and vertex associated with this iterator.  </para></listitem>
<listitem>
<para><computeroutput>vtkGraphEdge = obj.NextGraphEdge ()</computeroutput> - Just like Next(), but returns heavy-weight vtkGraphEdge object instead of the vtkEdgeType struct, for use with wrappers. The graph edge is owned by this iterator, and changes after each call to NextGraphEdge().  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.HasNext ()</computeroutput>  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
