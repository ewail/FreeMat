<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkio_vtkxmlmaterial" kind="page">
    <compoundname>vtkio_vtkxmlmaterial</compoundname>
    <title>vtkXMLMaterial</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkio_1sec_vtkio" kindref="member">Visualization Toolkit IO Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkXMLMaterial encapsulates VTK Material description. It keeps a pointer to vtkXMLDataElement that defines the material and provides access to Shaders/Properties defined in it. .SECTION Thanks Shader support in VTK includes key contributions by Gary Templet at Sandia National Labs.</para><para>To create an instance of class vtkXMLMaterial, simply invoke its constructor as follows <verbatim>  obj = vtkXMLMaterial
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkXMLMaterial has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkXMLMaterial class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkXMLMaterial = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkXMLMaterial = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfProperties ()</computeroutput> - Get number of elements of type Property.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfTextures ()</computeroutput> - Get number of elements of type Texture.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfVertexShaders ()</computeroutput> - Get number of Vertex shaders.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfFragmentShaders ()</computeroutput> - Get number of fragment shaders.  </para></listitem>
<listitem>
<para><computeroutput>vtkXMLDataElement = obj.GetProperty (int id)</computeroutput> - Get the ith vtkXMLDataElement of type &lt;Property&gt;.  </para></listitem>
<listitem>
<para><computeroutput>vtkXMLDataElement = obj.GetTexture (int id)</computeroutput> - Get the ith vtkXMLDataElement of type &lt;Texture&gt;.  </para></listitem>
<listitem>
<para><computeroutput>vtkXMLShader = obj.GetVertexShader (int id)</computeroutput> - Get the ith vtkXMLDataElement of type &lt;VertexShader&gt;.  </para></listitem>
<listitem>
<para><computeroutput>vtkXMLShader = obj.GetFragmentShader (int id)</computeroutput> - Get the ith vtkXMLDataElement of type &lt;FragmentShader&gt;.  </para></listitem>
<listitem>
<para><computeroutput>vtkXMLDataElement = obj.GetRootElement ()</computeroutput> - Get/Set the XML root element that describes this material.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetRootElement (vtkXMLDataElement )</computeroutput> - Get/Set the XML root element that describes this material.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetShaderLanguage ()</computeroutput> - Get the Language used by the shaders in this Material. The Language of a vtkXMLMaterial is based on the Language of it&apos;s shaders.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetShaderStyle ()</computeroutput> - Get the style the shaders. <simplesect kind="post"><para>valid_result: result==1 || result==2  </para></simplesect>
</para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
