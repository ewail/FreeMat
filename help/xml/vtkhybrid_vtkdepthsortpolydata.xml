<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkhybrid_vtkdepthsortpolydata" kind="page">
    <compoundname>vtkhybrid_vtkdepthsortpolydata</compoundname>
    <title>vtkDepthSortPolyData</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkhybrid_1sec_vtkhybrid" kindref="member">Visualization Toolkit Hybrid Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkDepthSortPolyData rearranges the order of cells so that certain rendering operations (e.g., transparency or Painter&apos;s algorithms) generate correct results. To use this filter you must specify the direction vector along which to sort the cells. You can do this by specifying a camera and/or prop to define a view direction; or explicitly set a view direction.</para><para>To create an instance of class vtkDepthSortPolyData, simply invoke its constructor as follows <verbatim>  obj = vtkDepthSortPolyData
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkDepthSortPolyData has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkDepthSortPolyData class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkDepthSortPolyData = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkDepthSortPolyData = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDirection (int )</computeroutput> - Specify the sort method for the polygonal primitives. By default, the poly data is sorted from back to front.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetDirection ()</computeroutput> - Specify the sort method for the polygonal primitives. By default, the poly data is sorted from back to front.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDirectionToFrontToBack ()</computeroutput> - Specify the sort method for the polygonal primitives. By default, the poly data is sorted from back to front.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDirectionToBackToFront ()</computeroutput> - Specify the sort method for the polygonal primitives. By default, the poly data is sorted from back to front.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDirectionToSpecifiedVector ()</computeroutput> - Specify the point to use when sorting. The fastest is to just take the first cell point. Other options are to take the bounding box center or the parametric center of the cell. By default, the first cell point is used.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDepthSortMode (int )</computeroutput> - Specify the point to use when sorting. The fastest is to just take the first cell point. Other options are to take the bounding box center or the parametric center of the cell. By default, the first cell point is used.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetDepthSortMode ()</computeroutput> - Specify the point to use when sorting. The fastest is to just take the first cell point. Other options are to take the bounding box center or the parametric center of the cell. By default, the first cell point is used.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDepthSortModeToFirstPoint ()</computeroutput> - Specify the point to use when sorting. The fastest is to just take the first cell point. Other options are to take the bounding box center or the parametric center of the cell. By default, the first cell point is used.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDepthSortModeToBoundsCenter ()</computeroutput> - Specify the point to use when sorting. The fastest is to just take the first cell point. Other options are to take the bounding box center or the parametric center of the cell. By default, the first cell point is used.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDepthSortModeToParametricCenter ()</computeroutput> - Specify a camera that is used to define a view direction along which the cells are sorted. This ivar only has effect if the direction is set to front-to-back or back-to-front, and a camera is specified.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCamera (vtkCamera )</computeroutput> - Specify a camera that is used to define a view direction along which the cells are sorted. This ivar only has effect if the direction is set to front-to-back or back-to-front, and a camera is specified.  </para></listitem>
<listitem>
<para><computeroutput>vtkCamera = obj.GetCamera ()</computeroutput> - Specify a camera that is used to define a view direction along which the cells are sorted. This ivar only has effect if the direction is set to front-to-back or back-to-front, and a camera is specified.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetProp3D (vtkProp3D )</computeroutput> - Specify a transformation matrix (via the vtkProp3D::GetMatrix() method) that is used to include the effects of transformation. This ivar only has effect if the direction is set to front-to-back or back-to-front, and a camera is specified. Specifying the vtkProp3D is optional.  </para></listitem>
<listitem>
<para><computeroutput>vtkProp3D = obj.GetProp3D ()</computeroutput> - Specify a transformation matrix (via the vtkProp3D::GetMatrix() method) that is used to include the effects of transformation. This ivar only has effect if the direction is set to front-to-back or back-to-front, and a camera is specified. Specifying the vtkProp3D is optional.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetVector (double , double , double )</computeroutput> - Set/Get the sort direction. This ivar only has effect if the sort direction is set to SetDirectionToSpecifiedVector(). The sort occurs in the direction of the vector.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetVector (double a[3])</computeroutput> - Set/Get the sort direction. This ivar only has effect if the sort direction is set to SetDirectionToSpecifiedVector(). The sort occurs in the direction of the vector.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetVector ()</computeroutput> - Set/Get the sort direction. This ivar only has effect if the sort direction is set to SetDirectionToSpecifiedVector(). The sort occurs in the direction of the vector.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOrigin (double , double , double )</computeroutput> - Set/Get the sort origin. This ivar only has effect if the sort direction is set to SetDirectionToSpecifiedVector(). The sort occurs in the direction of the vector, with this point specifying the origin.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOrigin (double a[3])</computeroutput> - Set/Get the sort origin. This ivar only has effect if the sort direction is set to SetDirectionToSpecifiedVector(). The sort occurs in the direction of the vector, with this point specifying the origin.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetOrigin ()</computeroutput> - Set/Get the sort origin. This ivar only has effect if the sort direction is set to SetDirectionToSpecifiedVector(). The sort occurs in the direction of the vector, with this point specifying the origin.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSortScalars (int )</computeroutput> - Set/Get a flag that controls the generation of scalar values corresponding to the sort order. If enabled, the output of this filter will include scalar values that range from 0 to (ncells-1), where 0 is closest to the sort direction.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetSortScalars ()</computeroutput> - Set/Get a flag that controls the generation of scalar values corresponding to the sort order. If enabled, the output of this filter will include scalar values that range from 0 to (ncells-1), where 0 is closest to the sort direction.  </para></listitem>
<listitem>
<para><computeroutput>obj.SortScalarsOn ()</computeroutput> - Set/Get a flag that controls the generation of scalar values corresponding to the sort order. If enabled, the output of this filter will include scalar values that range from 0 to (ncells-1), where 0 is closest to the sort direction.  </para></listitem>
<listitem>
<para><computeroutput>obj.SortScalarsOff ()</computeroutput> - Set/Get a flag that controls the generation of scalar values corresponding to the sort order. If enabled, the output of this filter will include scalar values that range from 0 to (ncells-1), where 0 is closest to the sort direction.  </para></listitem>
<listitem>
<para><computeroutput>long = obj.GetMTime ()</computeroutput> - Return MTime also considering the dependent objects: the camera and/or the prop3D.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
