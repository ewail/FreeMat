<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkhybrid_vtkpiechartactor" kind="page">
    <compoundname>vtkhybrid_vtkpiechartactor</compoundname>
    <title>vtkPieChartActor</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkhybrid_1sec_vtkhybrid" kindref="member">Visualization Toolkit Hybrid Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkPieChartActor generates a pie chart from an array of numbers defined in field data (a vtkDataObject). To use this class, you must specify an input data object. You&apos;ll probably also want to specify the position of the plot be setting the Position and Position2 instance variables, which define a rectangle in which the plot lies. There are also many other instance variables that control the look of the plot includes its title, and legend.</para><para>Set the text property/attributes of the title and the labels through the vtkTextProperty objects associated with these components.</para><para>To create an instance of class vtkPieChartActor, simply invoke its constructor as follows <verbatim>  obj = vtkPieChartActor
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkPieChartActor has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkPieChartActor class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput> - Standard methods for type information and printing.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput> - Standard methods for type information and printing.  </para></listitem>
<listitem>
<para><computeroutput>vtkPieChartActor = obj.NewInstance ()</computeroutput> - Standard methods for type information and printing.  </para></listitem>
<listitem>
<para><computeroutput>vtkPieChartActor = obj.SafeDownCast (vtkObject o)</computeroutput> - Standard methods for type information and printing.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInput (vtkDataObject )</computeroutput> - Set the input to the pie chart actor.  </para></listitem>
<listitem>
<para><computeroutput>vtkDataObject = obj.GetInput ()</computeroutput> - Get the input data object to this actor.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTitleVisibility (int )</computeroutput> - Enable/Disable the display of a plot title.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTitleVisibility ()</computeroutput> - Enable/Disable the display of a plot title.  </para></listitem>
<listitem>
<para><computeroutput>obj.TitleVisibilityOn ()</computeroutput> - Enable/Disable the display of a plot title.  </para></listitem>
<listitem>
<para><computeroutput>obj.TitleVisibilityOff ()</computeroutput> - Enable/Disable the display of a plot title.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTitle (string )</computeroutput> - Set/Get the title of the pie chart.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetTitle ()</computeroutput> - Set/Get the title of the pie chart.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTitleTextProperty (vtkTextProperty p)</computeroutput> - Set/Get the title text property. The property controls the appearance of the plot title.  </para></listitem>
<listitem>
<para><computeroutput>vtkTextProperty = obj.GetTitleTextProperty ()</computeroutput> - Set/Get the title text property. The property controls the appearance of the plot title.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLabelVisibility (int )</computeroutput> - Enable/Disable the display of pie piece labels.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetLabelVisibility ()</computeroutput> - Enable/Disable the display of pie piece labels.  </para></listitem>
<listitem>
<para><computeroutput>obj.LabelVisibilityOn ()</computeroutput> - Enable/Disable the display of pie piece labels.  </para></listitem>
<listitem>
<para><computeroutput>obj.LabelVisibilityOff ()</computeroutput> - Enable/Disable the display of pie piece labels.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLabelTextProperty (vtkTextProperty p)</computeroutput> - Set/Get the labels text property. This controls the appearance of all pie piece labels.  </para></listitem>
<listitem>
<para><computeroutput>vtkTextProperty = obj.GetLabelTextProperty ()</computeroutput> - Set/Get the labels text property. This controls the appearance of all pie piece labels.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPieceColor (int i, double r, double g, double b)</computeroutput> - Specify colors for each piece of pie. If not specified, they are automatically generated.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPieceColor (int i, double color[3])</computeroutput> - Specify colors for each piece of pie. If not specified, they are automatically generated.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPieceLabel (int i, string )</computeroutput> - Specify the names for each piece of pie. not specified, then an integer number is automatically generated.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetPieceLabel (int i)</computeroutput> - Specify the names for each piece of pie. not specified, then an integer number is automatically generated.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLegendVisibility (int )</computeroutput> - Enable/Disable the creation of a legend. If on, the legend labels will be created automatically unless the per plot legend symbol has been set.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetLegendVisibility ()</computeroutput> - Enable/Disable the creation of a legend. If on, the legend labels will be created automatically unless the per plot legend symbol has been set.  </para></listitem>
<listitem>
<para><computeroutput>obj.LegendVisibilityOn ()</computeroutput> - Enable/Disable the creation of a legend. If on, the legend labels will be created automatically unless the per plot legend symbol has been set.  </para></listitem>
<listitem>
<para><computeroutput>obj.LegendVisibilityOff ()</computeroutput> - Enable/Disable the creation of a legend. If on, the legend labels will be created automatically unless the per plot legend symbol has been set.  </para></listitem>
<listitem>
<para><computeroutput>vtkLegendBoxActor = obj.GetLegendActor ()</computeroutput> - Retrieve handles to the legend box. This is useful if you would like to manually control the legend appearance.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOverlay (vtkViewport )</computeroutput> - Draw the pie plot.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOpaqueGeometry (vtkViewport )</computeroutput> - Draw the pie plot.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderTranslucentPolygonalGeometry (vtkViewport )</computeroutput> - Does this prop have some translucent polygonal geometry?  </para></listitem>
<listitem>
<para><computeroutput>int = obj.HasTranslucentPolygonalGeometry ()</computeroutput> - Does this prop have some translucent polygonal geometry?  </para></listitem>
<listitem>
<para><computeroutput>obj.ReleaseGraphicsResources (vtkWindow )</computeroutput> - Release any graphics resources that are being consumed by this actor. The parameter window could be used to determine which graphic resources to release.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
