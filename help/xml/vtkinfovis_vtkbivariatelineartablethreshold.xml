<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkinfovis_vtkbivariatelineartablethreshold" kind="page">
    <compoundname>vtkinfovis_vtkbivariatelineartablethreshold</compoundname>
    <title>vtkBivariateLinearTableThreshold</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkinfovis_1sec_vtkinfovis" kindref="member">Visualization Toolkit Infovis Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Class for filtering the rows of a two numeric columns of a vtkTable. The columns are treated as the two variables of a line. This filter will then iterate through the rows of the table determining if X,Y values pairs are above/below/between/near one or more lines.</para><para>The &quot;between&quot; mode checks to see if a row is contained within the convex hull of all of the specified lines. The &quot;near&quot; mode checks if a row is within a distance threshold two one of the specified lines. This class is used in conjunction with various plotting classes, so it is useful to rescale the X,Y axes to a particular range of values. Distance comparisons can be performed in the scaled space by setting the CustomRanges ivar and enabling UseNormalizedDistance.</para><para>To create an instance of class vtkBivariateLinearTableThreshold, simply invoke its constructor as follows <verbatim>  obj = vtkBivariateLinearTableThreshold
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkBivariateLinearTableThreshold has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkBivariateLinearTableThreshold class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkBivariateLinearTableThreshold = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkBivariateLinearTableThreshold = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInclusive (int )</computeroutput> - Include the line in the threshold. Essentially whether the threshold operation uses &gt; versus &gt;=.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetInclusive ()</computeroutput> - Include the line in the threshold. Essentially whether the threshold operation uses &gt; versus &gt;=.  </para></listitem>
<listitem>
<para><computeroutput>obj.AddColumnToThreshold (vtkIdType column, vtkIdType component)</computeroutput> - Add a numeric column to the pair of columns to be thresholded. Call twice.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfColumnsToThreshold ()</computeroutput> - Return how many columns have been added. Hopefully 2.  </para></listitem>
<listitem>
<para><computeroutput>obj.ClearColumnsToThreshold ()</computeroutput> - Reset the columns to be thresholded.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdTypeArray = obj.GetSelectedRowIds (int selection)</computeroutput> - Get the output as a table of row ids.  </para></listitem>
<listitem>
<para><computeroutput>obj.Initialize ()</computeroutput> - Reset the columns to threshold, column ranges, etc.  </para></listitem>
<listitem>
<para><computeroutput>obj.AddLineEquation (double p1, double p2)</computeroutput> - Add a line for thresholding from two x,y points.  </para></listitem>
<listitem>
<para><computeroutput>obj.AddLineEquation (double p, double slope)</computeroutput> - Add a line for thresholding in point-slope form.  </para></listitem>
<listitem>
<para><computeroutput>obj.AddLineEquation (double a, double b, double c)</computeroutput> - Add a line for thresholding in implicit form (ax + by + c = 0)  </para></listitem>
<listitem>
<para><computeroutput>obj.ClearLineEquations ()</computeroutput> - Reset the list of line equations.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetLinearThresholdType ()</computeroutput> - Set the threshold type. Above: find all rows that are above the specified lines. Below: find all rows that are below the specified lines. Near: find all rows that are near the specified lines. Between: find all rows that are between the specified lines.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLinearThresholdType (int )</computeroutput> - Set the threshold type. Above: find all rows that are above the specified lines. Below: find all rows that are below the specified lines. Near: find all rows that are near the specified lines. Between: find all rows that are between the specified lines.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLinearThresholdTypeToAbove ()</computeroutput> - Set the threshold type. Above: find all rows that are above the specified lines. Below: find all rows that are below the specified lines. Near: find all rows that are near the specified lines. Between: find all rows that are between the specified lines.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLinearThresholdTypeToBelow ()</computeroutput> - Set the threshold type. Above: find all rows that are above the specified lines. Below: find all rows that are below the specified lines. Near: find all rows that are near the specified lines. Between: find all rows that are between the specified lines.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLinearThresholdTypeToNear ()</computeroutput> - Set the threshold type. Above: find all rows that are above the specified lines. Below: find all rows that are below the specified lines. Near: find all rows that are near the specified lines. Between: find all rows that are between the specified lines.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLinearThresholdTypeToBetween ()</computeroutput> - Manually access the maximum/minimum x,y values. This is used in conjunction with UseNormalizedDistance when determining if a row passes the threshold.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetColumnRanges (double , double )</computeroutput> - Manually access the maximum/minimum x,y values. This is used in conjunction with UseNormalizedDistance when determining if a row passes the threshold.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetColumnRanges (double a[2])</computeroutput> - Manually access the maximum/minimum x,y values. This is used in conjunction with UseNormalizedDistance when determining if a row passes the threshold.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetColumnRanges ()</computeroutput> - Manually access the maximum/minimum x,y values. This is used in conjunction with UseNormalizedDistance when determining if a row passes the threshold.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDistanceThreshold (double )</computeroutput> - The Cartesian distance within which a point will pass the near threshold.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetDistanceThreshold ()</computeroutput> - The Cartesian distance within which a point will pass the near threshold.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetUseNormalizedDistance (int )</computeroutput> - Renormalize the space of the data such that the X and Y axes are &quot;square&quot; over the specified ColumnRanges. This essentially scales the data space so that ColumnRanges[1]-ColumnRanges[0] = 1.0 and ColumnRanges[3]-ColumnRanges[2] = 1.0. Used for scatter plot distance calculations. Be sure to set DistanceThreshold accordingly, when used.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetUseNormalizedDistance ()</computeroutput> - Renormalize the space of the data such that the X and Y axes are &quot;square&quot; over the specified ColumnRanges. This essentially scales the data space so that ColumnRanges[1]-ColumnRanges[0] = 1.0 and ColumnRanges[3]-ColumnRanges[2] = 1.0. Used for scatter plot distance calculations. Be sure to set DistanceThreshold accordingly, when used.  </para></listitem>
<listitem>
<para><computeroutput>obj.UseNormalizedDistanceOn ()</computeroutput> - Renormalize the space of the data such that the X and Y axes are &quot;square&quot; over the specified ColumnRanges. This essentially scales the data space so that ColumnRanges[1]-ColumnRanges[0] = 1.0 and ColumnRanges[3]-ColumnRanges[2] = 1.0. Used for scatter plot distance calculations. Be sure to set DistanceThreshold accordingly, when used.  </para></listitem>
<listitem>
<para><computeroutput>obj.UseNormalizedDistanceOff ()</computeroutput> - Renormalize the space of the data such that the X and Y axes are &quot;square&quot; over the specified ColumnRanges. This essentially scales the data space so that ColumnRanges[1]-ColumnRanges[0] = 1.0 and ColumnRanges[3]-ColumnRanges[2] = 1.0. Used for scatter plot distance calculations. Be sure to set DistanceThreshold accordingly, when used.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
