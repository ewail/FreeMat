<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkrendering_vtkobjexporter" kind="page">
    <compoundname>vtkrendering_vtkobjexporter</compoundname>
    <title>vtkOBJExporter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkrendering_1sec_vtkrendering" kindref="member">Visualization Toolkit Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkOBJExporter is a concrete subclass of vtkExporter that writes wavefront .OBJ files in ASCII form. It also writes out a mtl file that contains the material properties. The filenames are derived by appending the .obj and .mtl suffix onto the user specified FilePrefix.</para><para>To create an instance of class vtkOBJExporter, simply invoke its constructor as follows <verbatim>  obj = vtkOBJExporter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkOBJExporter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkOBJExporter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkOBJExporter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkOBJExporter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFilePrefix (string )</computeroutput> - Specify the prefix of the files to write out. The resulting filenames will have .obj and .mtl appended to them.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetFilePrefix ()</computeroutput> - Specify the prefix of the files to write out. The resulting filenames will have .obj and .mtl appended to them.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
