<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkcommon_vtkcollection" kind="page">
    <compoundname>vtkcommon_vtkcollection</compoundname>
    <title>vtkCollection</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkcommon_1sec_vtkcommon" kindref="member">Visualization Toolkit Common Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkCollection is a general object for creating and manipulating lists of objects. The lists are unsorted and allow duplicate entries. vtkCollection also serves as a base class for lists of specific types of objects.</para><para>To create an instance of class vtkCollection, simply invoke its constructor as follows <verbatim>  obj = vtkCollection
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkCollection has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkCollection class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCollection = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCollection = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.AddItem (vtkObject )</computeroutput> - Add an object to the list. Does not prevent duplicate entries.  </para></listitem>
<listitem>
<para><computeroutput>obj.InsertItem (int i, vtkObject )</computeroutput> - Insert item into the list after the i&apos;th item. Does not prevent duplicate entries. If i &lt; 0 the item is placed at the top of the list.  </para></listitem>
<listitem>
<para><computeroutput>obj.ReplaceItem (int i, vtkObject )</computeroutput> - Replace the i&apos;th item in the collection with a  </para></listitem>
<listitem>
<para><computeroutput>obj.RemoveItem (int i)</computeroutput> - Remove the i&apos;th item in the list. Be careful if using this function during traversal of the list using GetNextItemAsObject (or GetNextItem in derived class). The list WILL be shortened if a valid index is given! If this-&gt;Current is equal to the element being removed, have it point to then next element in the list.  </para></listitem>
<listitem>
<para><computeroutput>obj.RemoveItem (vtkObject )</computeroutput> - Remove an object from the list. Removes the first object found, not all occurrences. If no object found, list is unaffected. See warning in description of RemoveItem(int).  </para></listitem>
<listitem>
<para><computeroutput>obj.RemoveAllItems ()</computeroutput> - Remove all objects from the list.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsItemPresent (vtkObject a)</computeroutput> - Search for an object and return location in list. If the return value is 0, the object was not found. If the object was found, the location is the return value-1.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfItems ()</computeroutput> - Return the number of objects in the list.  </para></listitem>
<listitem>
<para><computeroutput>obj.InitTraversal ()</computeroutput> - Initialize the traversal of the collection. This means the data pointer is set at the beginning of the list.  </para></listitem>
<listitem>
<para><computeroutput>vtkObject = obj.GetNextItemAsObject ()</computeroutput> - Get the next item in the collection. NULL is returned if the collection is exhausted.  </para></listitem>
<listitem>
<para><computeroutput>vtkObject = obj.GetItemAsObject (int i)</computeroutput> - Get the i&apos;th item in the collection. NULL is returned if i is out of range  </para></listitem>
<listitem>
<para><computeroutput>vtkCollectionIterator = obj.NewIterator ()</computeroutput> - Get an iterator to traverse the objects in this collection.  </para></listitem>
<listitem>
<para><computeroutput>obj.Register (vtkObjectBase o)</computeroutput> - Participate in garbage collection.  </para></listitem>
<listitem>
<para><computeroutput>obj.UnRegister (vtkObjectBase o)</computeroutput> - Participate in garbage collection.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
