<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkwidgets_vtkcaptionwidget" kind="page">
    <compoundname>vtkwidgets_vtkcaptionwidget</compoundname>
    <title>vtkCaptionWidget</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkwidgets_1sec_vtkwidgets" kindref="member">Visualization Toolkit Widget Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>This class provides support for interactively placing a caption on the 2D overlay plane. A caption is defined by some text with a leader (e.g., arrow) that points from the text to a point in the scene. The caption is represented by a vtkCaptionRepresentation. It uses the event bindings of its superclass (vtkBorderWidget) to control the placement of the text, and adds the ability to move the attachment point around. In addition, when the caption text is selected, the widget emits a ActivateEvent that observers can watch for. This is useful for opening GUI dialogoues to adjust font characteristics, etc. (Please see the superclass for a description of event bindings.)</para><para>Note that this widget extends the behavior of its superclass vtkBorderWidget. The end point of the leader can be selected and moved around with an internal vtkHandleWidget.</para><para>To create an instance of class vtkCaptionWidget, simply invoke its constructor as follows <verbatim>  obj = vtkCaptionWidget
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkCaptionWidget has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkCaptionWidget class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput> - Standard VTK class methods.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput> - Standard VTK class methods.  </para></listitem>
<listitem>
<para><computeroutput>vtkCaptionWidget = obj.NewInstance ()</computeroutput> - Standard VTK class methods.  </para></listitem>
<listitem>
<para><computeroutput>vtkCaptionWidget = obj.SafeDownCast (vtkObject o)</computeroutput> - Standard VTK class methods.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetEnabled (int enabling)</computeroutput> - Override superclasses&apos; SetEnabled() method because the caption leader has its own dedicated widget.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetRepresentation (vtkCaptionRepresentation r)</computeroutput> - Specify a vtkCaptionActor2D to manage. This is convenient, alternative method to SetRepresentation(). It internally create a vtkCaptionRepresentation and then invokes vtkCaptionRepresentation::SetCaptionActor2D().  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCaptionActor2D (vtkCaptionActor2D capActor)</computeroutput> - Specify a vtkCaptionActor2D to manage. This is convenient, alternative method to SetRepresentation(). It internally create a vtkCaptionRepresentation and then invokes vtkCaptionRepresentation::SetCaptionActor2D().  </para></listitem>
<listitem>
<para><computeroutput>vtkCaptionActor2D = obj.GetCaptionActor2D ()</computeroutput> - Specify a vtkCaptionActor2D to manage. This is convenient, alternative method to SetRepresentation(). It internally create a vtkCaptionRepresentation and then invokes vtkCaptionRepresentation::SetCaptionActor2D().  </para></listitem>
<listitem>
<para><computeroutput>obj.CreateDefaultRepresentation ()</computeroutput> - Create the default widget representation if one is not set.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
