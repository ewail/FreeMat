<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="elementary_abs" kind="page">
    <compoundname>elementary_abs</compoundname>
    <title>ABS Absolute Value Function</title>
    <detaileddescription>
<para>Section: <ref refid="sec_elementary_1sec_elementary" kindref="member">Elementary Functions</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Returns the absolute value of the input array for all elements. The general syntax for its use is <verbatim>   y = abs(x)
</verbatim> where <computeroutput>x</computeroutput> is an <computeroutput>n</computeroutput>-dimensional array of numerical type. The output is the same numerical type as the input, unless the input is <computeroutput>complex</computeroutput> or <computeroutput>dcomplex</computeroutput>. For <computeroutput>complex</computeroutput> inputs, the absolute value is a floating point array, so that the return type is <computeroutput>float</computeroutput>. For <computeroutput>dcomplex</computeroutput> inputs, the absolute value is a double precision floating point array, so that the return type is <computeroutput>double</computeroutput>. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>The following demonstrates the <computeroutput>abs</computeroutput> applied to a complex scalar.</para><para><verbatim>--&gt; abs(3+4*i)

ans = 
 5 
</verbatim></para><para>The <computeroutput>abs</computeroutput> function applied to integer and real values:</para><para><verbatim>--&gt; abs([-2,3,-4,5])

ans = 
 2 3 4 5 
</verbatim></para><para>For a double-precision complex array,</para><para><verbatim>--&gt; abs([2.0+3.0*i,i])

ans = 
    3.6056    1.0000 
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
