<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkrectangularbuttonsource" kind="page">
    <compoundname>vtkgraphics_vtkrectangularbuttonsource</compoundname>
    <title>vtkRectangularButtonSource</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkRectangularButtonSource creates a rectangular shaped button with texture coordinates suitable for application of a texture map. This provides a way to make nice looking 3D buttons. The buttons are represented as vtkPolyData that includes texture coordinates and normals. The button lies in the x-y plane.</para><para>To use this class you must define its width, height and length. These measurements are all taken with respect to the shoulder of the button. The shoulder is defined as follows. Imagine a box sitting on the floor. The distance from the floor to the top of the box is the depth; the other directions are the length (x-direction) and height (y-direction). In this particular widget the box can have a smaller bottom than top. The ratio in size between bottom and top is called the box ratio (by default=1.0). The ratio of the texture region to the shoulder region is the texture ratio. And finally the texture region may be out of plane compared to the shoulder. The texture height ratio controls this.</para><para>To create an instance of class vtkRectangularButtonSource, simply invoke its constructor as follows <verbatim>  obj = vtkRectangularButtonSource
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkRectangularButtonSource has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkRectangularButtonSource class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkRectangularButtonSource = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkRectangularButtonSource = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetWidth (double )</computeroutput> - Set/Get the width of the button.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetWidthMinValue ()</computeroutput> - Set/Get the width of the button.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetWidthMaxValue ()</computeroutput> - Set/Get the width of the button.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetWidth ()</computeroutput> - Set/Get the width of the button.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetHeight (double )</computeroutput> - Set/Get the height of the button.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetHeightMinValue ()</computeroutput> - Set/Get the height of the button.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetHeightMaxValue ()</computeroutput> - Set/Get the height of the button.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetHeight ()</computeroutput> - Set/Get the height of the button.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDepth (double )</computeroutput> - Set/Get the depth of the button (the z-eliipsoid axis length).  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetDepthMinValue ()</computeroutput> - Set/Get the depth of the button (the z-eliipsoid axis length).  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetDepthMaxValue ()</computeroutput> - Set/Get the depth of the button (the z-eliipsoid axis length).  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetDepth ()</computeroutput> - Set/Get the depth of the button (the z-eliipsoid axis length).  </para></listitem>
<listitem>
<para><computeroutput>obj.SetBoxRatio (double )</computeroutput> - Set/Get the ratio of the bottom of the button with the shoulder region. Numbers greater than one produce buttons with a wider bottom than shoulder; ratios less than one produce buttons that have a wider shoulder than bottom.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetBoxRatioMinValue ()</computeroutput> - Set/Get the ratio of the bottom of the button with the shoulder region. Numbers greater than one produce buttons with a wider bottom than shoulder; ratios less than one produce buttons that have a wider shoulder than bottom.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetBoxRatioMaxValue ()</computeroutput> - Set/Get the ratio of the bottom of the button with the shoulder region. Numbers greater than one produce buttons with a wider bottom than shoulder; ratios less than one produce buttons that have a wider shoulder than bottom.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetBoxRatio ()</computeroutput> - Set/Get the ratio of the bottom of the button with the shoulder region. Numbers greater than one produce buttons with a wider bottom than shoulder; ratios less than one produce buttons that have a wider shoulder than bottom.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTextureRatio (double )</computeroutput> - Set/Get the ratio of the texture region to the shoulder region. This number must be 0&lt;=tr&lt;=1. If the texture style is to fit the image, then satisfying the texture ratio may only be possible in one of the two directions (length or width) depending on the dimensions of the texture.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetTextureRatioMinValue ()</computeroutput> - Set/Get the ratio of the texture region to the shoulder region. This number must be 0&lt;=tr&lt;=1. If the texture style is to fit the image, then satisfying the texture ratio may only be possible in one of the two directions (length or width) depending on the dimensions of the texture.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetTextureRatioMaxValue ()</computeroutput> - Set/Get the ratio of the texture region to the shoulder region. This number must be 0&lt;=tr&lt;=1. If the texture style is to fit the image, then satisfying the texture ratio may only be possible in one of the two directions (length or width) depending on the dimensions of the texture.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetTextureRatio ()</computeroutput> - Set/Get the ratio of the texture region to the shoulder region. This number must be 0&lt;=tr&lt;=1. If the texture style is to fit the image, then satisfying the texture ratio may only be possible in one of the two directions (length or width) depending on the dimensions of the texture.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTextureHeightRatio (double )</computeroutput> - Set/Get the ratio of the height of the texture region to the shoulder height. Values greater than 1.0 yield convex buttons with the texture region raised above the shoulder. Values less than 1.0 yield concave buttons with the texture region below the shoulder.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetTextureHeightRatioMinValue ()</computeroutput> - Set/Get the ratio of the height of the texture region to the shoulder height. Values greater than 1.0 yield convex buttons with the texture region raised above the shoulder. Values less than 1.0 yield concave buttons with the texture region below the shoulder.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetTextureHeightRatioMaxValue ()</computeroutput> - Set/Get the ratio of the height of the texture region to the shoulder height. Values greater than 1.0 yield convex buttons with the texture region raised above the shoulder. Values less than 1.0 yield concave buttons with the texture region below the shoulder.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetTextureHeightRatio ()</computeroutput> - Set/Get the ratio of the height of the texture region to the shoulder height. Values greater than 1.0 yield convex buttons with the texture region raised above the shoulder. Values less than 1.0 yield concave buttons with the texture region below the shoulder.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
