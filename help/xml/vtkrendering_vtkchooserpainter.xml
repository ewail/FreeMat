<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkrendering_vtkchooserpainter" kind="page">
    <compoundname>vtkrendering_vtkchooserpainter</compoundname>
    <title>vtkChooserPainter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkrendering_1sec_vtkrendering" kindref="member">Visualization Toolkit Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>This painter does not actually do any painting. Instead, it picks other painters based on the current state of itself and its poly data. It then delegates the work to these other painters.</para><para>To create an instance of class vtkChooserPainter, simply invoke its constructor as follows <verbatim>  obj = vtkChooserPainter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkChooserPainter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkChooserPainter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkChooserPainter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkChooserPainter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetVertPainter (vtkPolyDataPainter )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLinePainter (vtkPolyDataPainter )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPolyPainter (vtkPolyDataPainter )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetStripPainter (vtkPolyDataPainter )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetUseLinesPainterForWireframes (int )</computeroutput> - When set, the lines painter is used for drawing wireframes (off by default, except on Mac, where it&apos;s on by default).  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetUseLinesPainterForWireframes ()</computeroutput> - When set, the lines painter is used for drawing wireframes (off by default, except on Mac, where it&apos;s on by default).  </para></listitem>
<listitem>
<para><computeroutput>obj.UseLinesPainterForWireframesOn ()</computeroutput> - When set, the lines painter is used for drawing wireframes (off by default, except on Mac, where it&apos;s on by default).  </para></listitem>
<listitem>
<para><computeroutput>obj.UseLinesPainterForWireframesOff ()</computeroutput> - When set, the lines painter is used for drawing wireframes (off by default, except on Mac, where it&apos;s on by default).  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
