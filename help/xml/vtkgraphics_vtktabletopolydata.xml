<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtktabletopolydata" kind="page">
    <compoundname>vtkgraphics_vtktabletopolydata</compoundname>
    <title>vtkTableToPolyData</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkTableToPolyData is a filter used to convert a vtkTable to a vtkPolyData consisting of vertices.</para><para>To create an instance of class vtkTableToPolyData, simply invoke its constructor as follows <verbatim>  obj = vtkTableToPolyData
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkTableToPolyData has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkTableToPolyData class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkTableToPolyData = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkTableToPolyData = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetXColumn (string )</computeroutput> - Set the name of the column to use as the X coordinate for the points.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetXColumn ()</computeroutput> - Set the name of the column to use as the X coordinate for the points.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetXColumnIndex (int )</computeroutput> - Set the index of the column to use as the X coordinate for the points.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetXColumnIndexMinValue ()</computeroutput> - Set the index of the column to use as the X coordinate for the points.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetXColumnIndexMaxValue ()</computeroutput> - Set the index of the column to use as the X coordinate for the points.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetXColumnIndex ()</computeroutput> - Set the index of the column to use as the X coordinate for the points.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetXComponent (int )</computeroutput> - Specify the component for the column specified using SetXColumn() to use as the xcoordinate in case the column is a multi-component array. Default is 0.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetXComponentMinValue ()</computeroutput> - Specify the component for the column specified using SetXColumn() to use as the xcoordinate in case the column is a multi-component array. Default is 0.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetXComponentMaxValue ()</computeroutput> - Specify the component for the column specified using SetXColumn() to use as the xcoordinate in case the column is a multi-component array. Default is 0.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetXComponent ()</computeroutput> - Specify the component for the column specified using SetXColumn() to use as the xcoordinate in case the column is a multi-component array. Default is 0.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetYColumn (string )</computeroutput> - Set the name of the column to use as the Y coordinate for the points. Default is 0.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetYColumn ()</computeroutput> - Set the name of the column to use as the Y coordinate for the points. Default is 0.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetYColumnIndex (int )</computeroutput> - Set the index of the column to use as the Y coordinate for the points.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetYColumnIndexMinValue ()</computeroutput> - Set the index of the column to use as the Y coordinate for the points.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetYColumnIndexMaxValue ()</computeroutput> - Set the index of the column to use as the Y coordinate for the points.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetYColumnIndex ()</computeroutput> - Set the index of the column to use as the Y coordinate for the points.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetYComponent (int )</computeroutput> - Specify the component for the column specified using SetYColumn() to use as the Ycoordinate in case the column is a multi-component array.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetYComponentMinValue ()</computeroutput> - Specify the component for the column specified using SetYColumn() to use as the Ycoordinate in case the column is a multi-component array.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetYComponentMaxValue ()</computeroutput> - Specify the component for the column specified using SetYColumn() to use as the Ycoordinate in case the column is a multi-component array.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetYComponent ()</computeroutput> - Specify the component for the column specified using SetYColumn() to use as the Ycoordinate in case the column is a multi-component array.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetZColumn (string )</computeroutput> - Set the name of the column to use as the Z coordinate for the points. Default is 0.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetZColumn ()</computeroutput> - Set the name of the column to use as the Z coordinate for the points. Default is 0.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetZColumnIndex (int )</computeroutput> - Set the index of the column to use as the Z coordinate for the points.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetZColumnIndexMinValue ()</computeroutput> - Set the index of the column to use as the Z coordinate for the points.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetZColumnIndexMaxValue ()</computeroutput> - Set the index of the column to use as the Z coordinate for the points.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetZColumnIndex ()</computeroutput> - Set the index of the column to use as the Z coordinate for the points.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetZComponent (int )</computeroutput> - Specify the component for the column specified using SetZColumn() to use as the Zcoordinate in case the column is a multi-component array.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetZComponentMinValue ()</computeroutput> - Specify the component for the column specified using SetZColumn() to use as the Zcoordinate in case the column is a multi-component array.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetZComponentMaxValue ()</computeroutput> - Specify the component for the column specified using SetZColumn() to use as the Zcoordinate in case the column is a multi-component array.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetZComponent ()</computeroutput> - Specify the component for the column specified using SetZColumn() to use as the Zcoordinate in case the column is a multi-component array.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCreate2DPoints (bool )</computeroutput> - Specify whether the points of the polydata are 3D or 2D. If this is set to true then the Z Column will be ignored and the z value of each point on the polydata will be set to 0. By default this will be off.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetCreate2DPoints ()</computeroutput> - Specify whether the points of the polydata are 3D or 2D. If this is set to true then the Z Column will be ignored and the z value of each point on the polydata will be set to 0. By default this will be off.  </para></listitem>
<listitem>
<para><computeroutput>obj.Create2DPointsOn ()</computeroutput> - Specify whether the points of the polydata are 3D or 2D. If this is set to true then the Z Column will be ignored and the z value of each point on the polydata will be set to 0. By default this will be off.  </para></listitem>
<listitem>
<para><computeroutput>obj.Create2DPointsOff ()</computeroutput> - Specify whether the points of the polydata are 3D or 2D. If this is set to true then the Z Column will be ignored and the z value of each point on the polydata will be set to 0. By default this will be off.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
