<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="array_reshape" kind="page">
    <compoundname>array_reshape</compoundname>
    <title>RESHAPE Reshape An Array</title>
    <detaileddescription>
<para>Section: <ref refid="sec_array_1sec_array" kindref="member">Array Generation and Manipulations</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Reshapes an array from one size to another. Two seperate syntaxes are possible. The first syntax specifies the array dimensions as a sequence of scalar dimensions: <verbatim>   y = reshape(x,d1,d2,...,dn).
</verbatim> The resulting array has the given dimensions, and is filled with the contents of <computeroutput>x</computeroutput>. The type of <computeroutput>y</computeroutput> is the same as <computeroutput>x</computeroutput>.</para><para>As a special case, you can specify exactly one of the dimensions as an empty matrix <computeroutput>[]</computeroutput>, in which case FreeMat will compute the size required in that dimension to make the reshape work. The syntax for this version is <verbatim>   y = reshape(x,d1,...,da,[],db,...,dn)
</verbatim></para><para>The second syntax specifies the array dimensions as a vector, where each element in the vector specifies a dimension length: <verbatim>   y = reshape(x,[d1,d2,...,dn]).
</verbatim> This syntax is more convenient for calling <computeroutput>reshape</computeroutput> using a variable for the argument. The <computeroutput>reshape</computeroutput> function requires that the length of <computeroutput>x</computeroutput> equal the product of the <computeroutput>di</computeroutput> values. Note that arrays are stored in column format, which means that elements in <computeroutput>x</computeroutput> are transferred to the new array <computeroutput>y</computeroutput> starting with the first column first element, then proceeding to the last element of the first column, then the first element of the second column, etc. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>Here are several examples of the use of <computeroutput>reshape</computeroutput> applied to various arrays. The first example reshapes a row vector into a matrix.</para><para><verbatim>--&gt; a = uint8(1:6)

a = 
 1 2 3 4 5 6 

--&gt; reshape(a,2,3)

ans = 
 1 3 5 
 2 4 6 
</verbatim></para><para>The second example reshapes a longer row vector into a volume with two planes.</para><para><verbatim>--&gt; a = uint8(1:12)

a = 
  1  2  3  4  5  6  7  8  9 10 11 12 

--&gt; reshape(a,[2,3,2])

ans = 

(:,:,1) = 
  1  3  5 
  2  4  6 

(:,:,2) = 
  7  9 11 
  8 10 12 
</verbatim></para><para>The third example reshapes a matrix into another matrix.</para><para><verbatim>--&gt; a = [1,6,7;3,4,2]

a = 
 1 6 7 
 3 4 2 

--&gt; reshape(a,3,2)

ans = 
 1 4 
 3 7 
 6 2 
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
