<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="io_fwrite" kind="page">
    <compoundname>io_fwrite</compoundname>
    <title>FWRITE File Write Function</title>
    <detaileddescription>
<para>Section: <ref refid="sec_io_1sec_io" kindref="member">Input/Ouput Functions</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Writes an array to a given file handle as a block of binary (raw) data. The general use of the function is <verbatim>  n = fwrite(handle,A)
</verbatim> The <computeroutput>handle</computeroutput> argument must be a valid value returned by the fopen function, and accessable for writing. The array <computeroutput>A</computeroutput> is written to the file a column at a time. The form of the output data depends on (and is inferred from) the precision of the array <computeroutput>A</computeroutput>. If the write fails (because we ran out of disk space, etc.) then an error is returned. The output <computeroutput>n</computeroutput> indicates the number of elements successfully written.</para><para>Note that unlike MATLAB, FreeMat 4 does not default to <computeroutput>uint8</computeroutput> for writing arrays to files. Alternately, the type of the data to be written to the file can be specified with the syntax <verbatim>  n = fwrite(handle,A,type)
</verbatim> where <computeroutput>type</computeroutput> is one of the following legal values: <itemizedlist>
<listitem>
<para>&apos;uint8&apos;,&apos;uchar&apos;,&apos;unsigned char&apos; for an unsigned, 8-bit integer.  </para></listitem>
<listitem>
<para>&apos;int8&apos;,&apos;char&apos;,&apos;integer*1&apos; for a signed, 8-bit integer.  </para></listitem>
<listitem>
<para>&apos;uint16&apos;,&apos;unsigned short&apos; for an unsigned, 16-bit integer.  </para></listitem>
<listitem>
<para>&apos;int16&apos;,&apos;short&apos;,&apos;integer*2&apos; for a signed, 16-bit integer.  </para></listitem>
<listitem>
<para>&apos;uint32&apos;,&apos;unsigned int&apos; for an unsigned, 32-bit integer.  </para></listitem>
<listitem>
<para>&apos;int32&apos;,&apos;int&apos;,&apos;integer*4&apos; for a signed, 32-bit integer.  </para></listitem>
<listitem>
<para>&apos;single&apos;,&apos;float32&apos;,&apos;float&apos;,&apos;real*4&apos; for a 32-bit floating point.  </para></listitem>
<listitem>
<para>&apos;double&apos;,&apos;float64&apos;,&apos;real*8&apos; for a 64-bit floating point.  </para></listitem>
</itemizedlist>
</para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>Heres an example of writing an array of <computeroutput>512 x 512</computeroutput> Gaussian-distributed <computeroutput>float</computeroutput> random variables, and then writing them to a file called <computeroutput>test.dat</computeroutput>.</para><para><verbatim>--&gt; A = float(randn(512));
--&gt; fp = fopen(&apos;test.dat&apos;,&apos;w&apos;);
--&gt; fwrite(fp,A,&apos;single&apos;);
--&gt; fclose(fp);
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
