<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkrearrangefields" kind="page">
    <compoundname>vtkgraphics_vtkrearrangefields</compoundname>
    <title>vtkRearrangeFields</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkRearrangeFields is used to copy/move fields (vtkDataArrays) between data object&apos;s field data, point data and cell data. To specify which fields are copied/moved, the user adds operations. There are two types of operations: 1. the type which copies/moves an attribute&apos;s data (i.e. the field will be copied but will not be an attribute in the target), 2. the type which copies/moves fields by name. For example: <verbatim> rf-&gt;AddOperation(vtkRearrangeFields::COPY, &quot;foo&quot;, 
                  vtkRearrangeFields::DATA_OBJECT, 
                  vtkRearrangeFields::POINT_DATA);</verbatim> adds an operation which copies a field (data array) called foo from the data object&apos;s field data to point data. From Tcl, the same operation can be added as follows: <verbatim> rf AddOperation COPY foo DATA_OBJECT POINT_DATA</verbatim> The same can be done using Python and Java bindings by passing strings as arguments. <verbatim> Operation types: COPY, MOVE
 AttributeTypes: SCALARS, VECTORS, NORMALS, TCOORDS, TENSORS
 Field data locations: DATA_OBJECT, POINT_DATA, CELL_DATA</verbatim></para><para>To create an instance of class vtkRearrangeFields, simply invoke its constructor as follows <verbatim>  obj = vtkRearrangeFields
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkRearrangeFields has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkRearrangeFields class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkRearrangeFields = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkRearrangeFields = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.AddOperation (int operationType, int attributeType, int fromFieldLoc, int toFieldLoc)</computeroutput> - Add an operation which copies an attribute&apos;s field (data array) from one field data to another. Returns an operation id which can later be used to remove the operation.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.AddOperation (int operationType, string name, int fromFieldLoc, int toFieldLoc)</computeroutput> - Add an operation which copies a field (data array) from one field data to another. Returns an operation id which can later be used to remove the operation.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.AddOperation (string operationType, string attributeType, string fromFieldLoc, string toFieldLoc)</computeroutput> - Helper method used by other language bindings. Allows the caller to specify arguments as strings instead of enums.Returns an operation id which can later be used to remove the operation.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RemoveOperation (int operationId)</computeroutput> - Remove an operation with the given id.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RemoveOperation (int operationType, int attributeType, int fromFieldLoc, int toFieldLoc)</computeroutput> - Remove an operation with the given signature. See AddOperation for details.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RemoveOperation (int operationType, string name, int fromFieldLoc, int toFieldLoc)</computeroutput> - Remove an operation with the given signature. See AddOperation for details.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RemoveOperation (string operationType, string attributeType, string fromFieldLoc, string toFieldLoc)</computeroutput> - Remove an operation with the given signature. See AddOperation for details.  </para></listitem>
<listitem>
<para><computeroutput>obj.RemoveAllOperations ()</computeroutput>  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
