<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="sparse_spy" kind="page">
    <compoundname>sparse_spy</compoundname>
    <title>SPY Visualize Sparsity Pattern of a Sparse Matrix</title>
    <detaileddescription>
<para>Section: <ref refid="sec_sparse_1sec_sparse" kindref="member">Sparse Matrix Support</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Plots the sparsity pattern of a sparse matrix. The syntax for its use is <verbatim>   spy(x)
</verbatim> which uses a default color and symbol. Alternately, you can use <verbatim>   spy(x,colspec)
</verbatim> where <computeroutput>colspec</computeroutput> is any valid color and symbol spec accepted by <computeroutput>plot</computeroutput>. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>First, an example of a random sparse matrix.</para><para><verbatim>--&gt; y = sprand(1000,1000,.001);
--&gt; spy(y,&apos;ro&apos;)
</verbatim></para><para>which is shown here <image type="html" name="spy1.png"></image>
 <image type="latex" name="spy1" width="12cm">spy1</image>
 Here is a sparse matrix with a little more structure. First we build a sparse matrix with block diagonal structure, and then use <computeroutput>spy</computeroutput> to visualize the structure.</para><para><verbatim>--&gt; A = sparse(1000,1000);
--&gt; for i=1:25; A((1:40) + 40*(i-1),(1:40) + 40*(i-1)) = 1; end;
--&gt; spy(A,&apos;gx&apos;)
</verbatim></para><para>with the result shown here <image type="html" name="spy2.png"></image>
 <image type="latex" name="spy2" width="12cm">spy2</image>
 </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
