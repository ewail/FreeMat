<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkwidgets_vtkparallelopipedrepresentation" kind="page">
    <compoundname>vtkwidgets_vtkparallelopipedrepresentation</compoundname>
    <title>vtkParallelopipedRepresentation</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkwidgets_1sec_vtkwidgets" kindref="member">Visualization Toolkit Widget Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>This class provides the default geometrical representation for vtkParallelopipedWidget. As a result of interactions of the widget, this representation can take on of the following shapes: </para><para>1) A parallelopiped. (8 handles, 6 faces) </para><para>2) Paralleopiped with a chair depression on any one handle. (A chair is a depression on one of the handles that carves inwards so as to allow the user to visualize cuts in the volume). (14 handles, 9 faces).</para><para>To create an instance of class vtkParallelopipedRepresentation, simply invoke its constructor as follows <verbatim>  obj = vtkParallelopipedRepresentation
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkParallelopipedRepresentation has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkParallelopipedRepresentation class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>vtkParallelopipedRepresentation = obj.NewInstance ()</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>vtkParallelopipedRepresentation = obj.SafeDownCast (vtkObject o)</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetActors (vtkPropCollection pc)</computeroutput> - Methods to satisfy the superclass.  </para></listitem>
<listitem>
<para><computeroutput>obj.PlaceWidget (double bounds[6])</computeroutput> - Place the widget in the scene. You can use either of the two APIs : 1) PlaceWidget( double bounds[6] ) Creates a cuboid conforming to the said bounds. 2) PlaceWidget( double corners[8][3] ) Creates a parallelopiped with corners specified. The order in which corners are specified must obey the following rule: Corner 0 - 1 - 2 - 3 - 0 forms a face Corner 4 - 5 - 6 - 7 - 4 forms a face Corner 0 - 4 - 5 - 1 - 0 forms a face Corner 1 - 5 - 6 - 2 - 1 forms a face Corner 2 - 6 - 7 - 3 - 2 forms a face Corner 3 - 7 - 4 - 0 - 3 forms a face  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInteractionState (int )</computeroutput> - The interaction state may be set from a widget (e.g., PointWidget) or other object. This controls how the interaction with the widget proceeds.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetBoundingPlanes (vtkPlaneCollection pc)</computeroutput> - Get the bounding planes of the object. The first 6 planes will be bounding planes of the parallelopiped. If in chair mode, three additional planes will be present. The last three planes will be those of the chair. The normals of all the planes will point into the object.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetPolyData (vtkPolyData pd)</computeroutput> - The parallelopiped polydata.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetBounds ()</computeroutput> - The parallelopiped polydata.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetHandleProperty (vtkProperty )</computeroutput> - Set/Get the handle properties.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetHoveredHandleProperty (vtkProperty )</computeroutput> - Set/Get the handle properties.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSelectedHandleProperty (vtkProperty )</computeroutput> - Set/Get the handle properties.  </para></listitem>
<listitem>
<para><computeroutput>vtkProperty = obj.GetHandleProperty ()</computeroutput> - Set/Get the handle properties.  </para></listitem>
<listitem>
<para><computeroutput>vtkProperty = obj.GetHoveredHandleProperty ()</computeroutput> - Set/Get the handle properties.  </para></listitem>
<listitem>
<para><computeroutput>vtkProperty = obj.GetSelectedHandleProperty ()</computeroutput> - Set/Get the handle properties.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetHandleRepresentation (vtkHandleRepresentation handle)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkHandleRepresentation = obj.GetHandleRepresentation (int index)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.HandlesOn ()</computeroutput> - Turns the visibility of the handles on/off. Sometimes they may get in the way of visualization.  </para></listitem>
<listitem>
<para><computeroutput>obj.HandlesOff ()</computeroutput> - Turns the visibility of the handles on/off. Sometimes they may get in the way of visualization.  </para></listitem>
<listitem>
<para><computeroutput>vtkProperty = obj.GetFaceProperty ()</computeroutput> - Get the face properties. When a face is being translated, the face gets highlighted with the SelectedFaceProperty.  </para></listitem>
<listitem>
<para><computeroutput>vtkProperty = obj.GetSelectedFaceProperty ()</computeroutput> - Get the face properties. When a face is being translated, the face gets highlighted with the SelectedFaceProperty.  </para></listitem>
<listitem>
<para><computeroutput>vtkProperty = obj.GetOutlineProperty ()</computeroutput> - Get the outline properties. These are the properties with which the parallelopiped wireframe is rendered.  </para></listitem>
<listitem>
<para><computeroutput>vtkProperty = obj.GetSelectedOutlineProperty ()</computeroutput> - Get the outline properties. These are the properties with which the parallelopiped wireframe is rendered.  </para></listitem>
<listitem>
<para><computeroutput>obj.BuildRepresentation ()</computeroutput> - This actually constructs the geometry of the widget from the various data parameters.  </para></listitem>
<listitem>
<para><computeroutput>obj.ReleaseGraphicsResources (vtkWindow w)</computeroutput> - Methods required by vtkProp superclass.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOverlay (vtkViewport viewport)</computeroutput> - Methods required by vtkProp superclass.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOpaqueGeometry (vtkViewport viewport)</computeroutput> - Methods required by vtkProp superclass.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.ComputeInteractionState (int X, int Y, int modify)</computeroutput> - Given and x-y display coordinate, compute the interaction state of the widget.  </para></listitem>
<listitem>
<para><computeroutput>obj.Translate (double translation[3])</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Translate (int X, int Y)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Scale (int X, int Y)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.PositionHandles ()</computeroutput> - Synchronize the parallelopiped handle positions with the Polygonal datastructure.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMinimumThickness (double )</computeroutput> - Minimum thickness for the parallelopiped. User interactions cannot make any individual axis of the parallopiped thinner than this value. Default is 0.05 expressed as a fraction of the diagonal of the bounding box used in the PlaceWidget() invocation.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetMinimumThickness ()</computeroutput> - Minimum thickness for the parallelopiped. User interactions cannot make any individual axis of the parallopiped thinner than this value. Default is 0.05 expressed as a fraction of the diagonal of the bounding box used in the PlaceWidget() invocation.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
