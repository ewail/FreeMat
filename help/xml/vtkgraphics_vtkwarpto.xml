<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkwarpto" kind="page">
    <compoundname>vtkgraphics_vtkwarpto</compoundname>
    <title>vtkWarpTo</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkWarpTo is a filter that modifies point coordinates by moving the points towards a user specified position.</para><para>To create an instance of class vtkWarpTo, simply invoke its constructor as follows <verbatim>  obj = vtkWarpTo
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkWarpTo has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkWarpTo class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkWarpTo = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkWarpTo = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetScaleFactor (double )</computeroutput> - Set/Get the value to scale displacement.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetScaleFactor ()</computeroutput> - Set/Get the value to scale displacement.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetPosition ()</computeroutput> - Set/Get the position to warp towards.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPosition (double , double , double )</computeroutput> - Set/Get the position to warp towards.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPosition (double a[3])</computeroutput> - Set/Get the position to warp towards.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetAbsolute (int )</computeroutput> - Set/Get the Absolute ivar. Turning Absolute on causes scale factor of the new position to be one unit away from Position.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetAbsolute ()</computeroutput> - Set/Get the Absolute ivar. Turning Absolute on causes scale factor of the new position to be one unit away from Position.  </para></listitem>
<listitem>
<para><computeroutput>obj.AbsoluteOn ()</computeroutput> - Set/Get the Absolute ivar. Turning Absolute on causes scale factor of the new position to be one unit away from Position.  </para></listitem>
<listitem>
<para><computeroutput>obj.AbsoluteOff ()</computeroutput> - Set/Get the Absolute ivar. Turning Absolute on causes scale factor of the new position to be one unit away from Position.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
