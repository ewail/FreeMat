<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkrendering_vtkgl2psexporter" kind="page">
    <compoundname>vtkrendering_vtkgl2psexporter</compoundname>
    <title>vtkGL2PSExporter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkrendering_1sec_vtkrendering" kindref="member">Visualization Toolkit Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkGL2PSExporter is a concrete subclass of vtkExporter that writes high quality vector PostScript (PS/EPS), PDF or SVG files by using GL2PS. GL2PS can be obtained at: <ulink url="http://www.geuz.org/gl2ps/">http://www.geuz.org/gl2ps/</ulink>. This can be very useful when one requires publication quality pictures. This class works best with simple 3D scenes and most 2D plots. Please note that GL2PS has its limitations since PostScript is not an ideal language to represent complex 3D scenes. However, this class does allow one to write mixed vector/raster files by using the Write3DPropsAsRasterImage ivar. Please do read the caveats section of this documentation.</para><para>By default vtkGL2PSExporter generates Encapsulated PostScript (EPS) output along with the text in portrait orientation with the background color of the window being drawn. The generated output is also compressed using zlib. The various other options are set to sensible defaults.</para><para>The output file format (FileFormat) can be either PostScript (PS), Encapsulated PostScript (EPS), PDF, SVG or TeX. The file extension is generated automatically depending on the FileFormat. The default is EPS. When TeX output is chosen, only the text strings in the plot are generated and put into a picture environment. One can turn on and off the text when generating PS/EPS/PDF/SVG files by using the Text boolean variable. By default the text is drawn. The background color of the renderwindow is drawn by default. To make the background white instead use the DrawBackgroundOff function. Landscape figures can be generated by using the LandscapeOn function. Portrait orientation is used by default. Several of the GL2PS options can be set. The names of the ivars for these options are similar to the ones that GL2PS provides. Compress, SimpleLineOffset, Silent, BestRoot, PS3Shading and OcclusionCull are similar to the options provided by GL2PS. Please read the function documentation or the GL2PS documentation for more details. The ivar Write3DPropsAsRasterImage allows one to generate mixed vector/raster images. All the 3D props in the scene will be written as a raster image and all 2D actors will be written as vector graphic primitives. This makes it possible to handle transparency and complex 3D scenes. This ivar is set to Off by default. When drawing lines and points the OpenGL point size and line width are multiplied by a factor in order to generate PostScript lines and points of the right size. The Get/SetGlobalPointSizeFactor and Get/SetGlobalLineWidthFactor let one customize this ratio. The default value is such that the PostScript output looks close to what is seen on screen.</para><para>To use this class you need to turn on VTK_USE_GL2PS when configuring VTK.</para><para>To create an instance of class vtkGL2PSExporter, simply invoke its constructor as follows <verbatim>  obj = vtkGL2PSExporter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkGL2PSExporter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkGL2PSExporter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkGL2PSExporter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkGL2PSExporter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFilePrefix (string )</computeroutput> - Specify the prefix of the files to write out. The resulting filenames will have .ps or .eps or .tex appended to them depending on the other options chosen.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetFilePrefix ()</computeroutput> - Specify the prefix of the files to write out. The resulting filenames will have .ps or .eps or .tex appended to them depending on the other options chosen.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFileFormat (int )</computeroutput> - Specify the format of file to write out. This can be one of: PS_FILE, EPS_FILE, PDF_FILE, TEX_FILE. Defaults to EPS_FILE. Depending on the option chosen it generates the appropriate file (with correct extension) when the Write function is called.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetFileFormatMinValue ()</computeroutput> - Specify the format of file to write out. This can be one of: PS_FILE, EPS_FILE, PDF_FILE, TEX_FILE. Defaults to EPS_FILE. Depending on the option chosen it generates the appropriate file (with correct extension) when the Write function is called.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetFileFormatMaxValue ()</computeroutput> - Specify the format of file to write out. This can be one of: PS_FILE, EPS_FILE, PDF_FILE, TEX_FILE. Defaults to EPS_FILE. Depending on the option chosen it generates the appropriate file (with correct extension) when the Write function is called.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetFileFormat ()</computeroutput> - Specify the format of file to write out. This can be one of: PS_FILE, EPS_FILE, PDF_FILE, TEX_FILE. Defaults to EPS_FILE. Depending on the option chosen it generates the appropriate file (with correct extension) when the Write function is called.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFileFormatToPS ()</computeroutput> - Specify the format of file to write out. This can be one of: PS_FILE, EPS_FILE, PDF_FILE, TEX_FILE. Defaults to EPS_FILE. Depending on the option chosen it generates the appropriate file (with correct extension) when the Write function is called.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFileFormatToEPS ()</computeroutput> - Specify the format of file to write out. This can be one of: PS_FILE, EPS_FILE, PDF_FILE, TEX_FILE. Defaults to EPS_FILE. Depending on the option chosen it generates the appropriate file (with correct extension) when the Write function is called.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFileFormatToPDF ()</computeroutput> - Specify the format of file to write out. This can be one of: PS_FILE, EPS_FILE, PDF_FILE, TEX_FILE. Defaults to EPS_FILE. Depending on the option chosen it generates the appropriate file (with correct extension) when the Write function is called.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFileFormatToTeX ()</computeroutput> - Specify the format of file to write out. This can be one of: PS_FILE, EPS_FILE, PDF_FILE, TEX_FILE. Defaults to EPS_FILE. Depending on the option chosen it generates the appropriate file (with correct extension) when the Write function is called.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFileFormatToSVG ()</computeroutput> - Specify the format of file to write out. This can be one of: PS_FILE, EPS_FILE, PDF_FILE, TEX_FILE. Defaults to EPS_FILE. Depending on the option chosen it generates the appropriate file (with correct extension) when the Write function is called.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetFileFormatAsString ()</computeroutput> - Specify the format of file to write out. This can be one of: PS_FILE, EPS_FILE, PDF_FILE, TEX_FILE. Defaults to EPS_FILE. Depending on the option chosen it generates the appropriate file (with correct extension) when the Write function is called.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSort (int )</computeroutput> - Set the the type of sorting algorithm to order primitives from back to front. Successive algorithms are more memory intensive. Simple is the default but BSP is perhaps the best.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetSortMinValue ()</computeroutput> - Set the the type of sorting algorithm to order primitives from back to front. Successive algorithms are more memory intensive. Simple is the default but BSP is perhaps the best.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetSortMaxValue ()</computeroutput> - Set the the type of sorting algorithm to order primitives from back to front. Successive algorithms are more memory intensive. Simple is the default but BSP is perhaps the best.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetSort ()</computeroutput> - Set the the type of sorting algorithm to order primitives from back to front. Successive algorithms are more memory intensive. Simple is the default but BSP is perhaps the best.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSortToOff ()</computeroutput> - Set the the type of sorting algorithm to order primitives from back to front. Successive algorithms are more memory intensive. Simple is the default but BSP is perhaps the best.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSortToSimple ()</computeroutput> - Set the the type of sorting algorithm to order primitives from back to front. Successive algorithms are more memory intensive. Simple is the default but BSP is perhaps the best.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSortToBSP ()</computeroutput> - Set the the type of sorting algorithm to order primitives from back to front. Successive algorithms are more memory intensive. Simple is the default but BSP is perhaps the best.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetSortAsString ()</computeroutput> - Set the the type of sorting algorithm to order primitives from back to front. Successive algorithms are more memory intensive. Simple is the default but BSP is perhaps the best.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCompress (int )</computeroutput> - Turn on/off compression when generating PostScript or PDF output. By default compression is on.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCompress ()</computeroutput> - Turn on/off compression when generating PostScript or PDF output. By default compression is on.  </para></listitem>
<listitem>
<para><computeroutput>obj.CompressOn ()</computeroutput> - Turn on/off compression when generating PostScript or PDF output. By default compression is on.  </para></listitem>
<listitem>
<para><computeroutput>obj.CompressOff ()</computeroutput> - Turn on/off compression when generating PostScript or PDF output. By default compression is on.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDrawBackground (int )</computeroutput> - Turn on/off drawing the background frame. If off the background is treated as white. By default the background is drawn.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetDrawBackground ()</computeroutput> - Turn on/off drawing the background frame. If off the background is treated as white. By default the background is drawn.  </para></listitem>
<listitem>
<para><computeroutput>obj.DrawBackgroundOn ()</computeroutput> - Turn on/off drawing the background frame. If off the background is treated as white. By default the background is drawn.  </para></listitem>
<listitem>
<para><computeroutput>obj.DrawBackgroundOff ()</computeroutput> - Turn on/off drawing the background frame. If off the background is treated as white. By default the background is drawn.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSimpleLineOffset (int )</computeroutput> - Turn on/off the GL2PS_SIMPLE_LINE_OFFSET option. When enabled a small offset is added in the z-buffer to all the lines in the plot. This results in an anti-aliasing like solution. Defaults to on.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetSimpleLineOffset ()</computeroutput> - Turn on/off the GL2PS_SIMPLE_LINE_OFFSET option. When enabled a small offset is added in the z-buffer to all the lines in the plot. This results in an anti-aliasing like solution. Defaults to on.  </para></listitem>
<listitem>
<para><computeroutput>obj.SimpleLineOffsetOn ()</computeroutput> - Turn on/off the GL2PS_SIMPLE_LINE_OFFSET option. When enabled a small offset is added in the z-buffer to all the lines in the plot. This results in an anti-aliasing like solution. Defaults to on.  </para></listitem>
<listitem>
<para><computeroutput>obj.SimpleLineOffsetOff ()</computeroutput> - Turn on/off the GL2PS_SIMPLE_LINE_OFFSET option. When enabled a small offset is added in the z-buffer to all the lines in the plot. This results in an anti-aliasing like solution. Defaults to on.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSilent (int )</computeroutput> - Turn on/off GL2PS messages sent to stderr (GL2PS_SILENT). When enabled GL2PS messages are suppressed. Defaults to off.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetSilent ()</computeroutput> - Turn on/off GL2PS messages sent to stderr (GL2PS_SILENT). When enabled GL2PS messages are suppressed. Defaults to off.  </para></listitem>
<listitem>
<para><computeroutput>obj.SilentOn ()</computeroutput> - Turn on/off GL2PS messages sent to stderr (GL2PS_SILENT). When enabled GL2PS messages are suppressed. Defaults to off.  </para></listitem>
<listitem>
<para><computeroutput>obj.SilentOff ()</computeroutput> - Turn on/off GL2PS messages sent to stderr (GL2PS_SILENT). When enabled GL2PS messages are suppressed. Defaults to off.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetBestRoot (int )</computeroutput> - Turn on/off the GL2PS_BEST_ROOT option. When enabled the construction of the BSP tree is optimized by choosing the root primitives leading to the minimum number of splits. Defaults to on.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetBestRoot ()</computeroutput> - Turn on/off the GL2PS_BEST_ROOT option. When enabled the construction of the BSP tree is optimized by choosing the root primitives leading to the minimum number of splits. Defaults to on.  </para></listitem>
<listitem>
<para><computeroutput>obj.BestRootOn ()</computeroutput> - Turn on/off the GL2PS_BEST_ROOT option. When enabled the construction of the BSP tree is optimized by choosing the root primitives leading to the minimum number of splits. Defaults to on.  </para></listitem>
<listitem>
<para><computeroutput>obj.BestRootOff ()</computeroutput> - Turn on/off the GL2PS_BEST_ROOT option. When enabled the construction of the BSP tree is optimized by choosing the root primitives leading to the minimum number of splits. Defaults to on.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetText (int )</computeroutput> - Turn on/off drawing the text. If on (default) the text is drawn. If the FileFormat is set to TeX output then a LaTeX picture is generated with the text strings. If off text output is suppressed.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetText ()</computeroutput> - Turn on/off drawing the text. If on (default) the text is drawn. If the FileFormat is set to TeX output then a LaTeX picture is generated with the text strings. If off text output is suppressed.  </para></listitem>
<listitem>
<para><computeroutput>obj.TextOn ()</computeroutput> - Turn on/off drawing the text. If on (default) the text is drawn. If the FileFormat is set to TeX output then a LaTeX picture is generated with the text strings. If off text output is suppressed.  </para></listitem>
<listitem>
<para><computeroutput>obj.TextOff ()</computeroutput> - Turn on/off drawing the text. If on (default) the text is drawn. If the FileFormat is set to TeX output then a LaTeX picture is generated with the text strings. If off text output is suppressed.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLandscape (int )</computeroutput> - Turn on/off landscape orientation. If off (default) the orientation is set to portrait.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetLandscape ()</computeroutput> - Turn on/off landscape orientation. If off (default) the orientation is set to portrait.  </para></listitem>
<listitem>
<para><computeroutput>obj.LandscapeOn ()</computeroutput> - Turn on/off landscape orientation. If off (default) the orientation is set to portrait.  </para></listitem>
<listitem>
<para><computeroutput>obj.LandscapeOff ()</computeroutput> - Turn on/off landscape orientation. If off (default) the orientation is set to portrait.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPS3Shading (int )</computeroutput> - Turn on/off the GL2PS_PS3_SHADING option. When enabled the shfill PostScript level 3 operator is used. Read the GL2PS documentation for more details. Defaults to on.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetPS3Shading ()</computeroutput> - Turn on/off the GL2PS_PS3_SHADING option. When enabled the shfill PostScript level 3 operator is used. Read the GL2PS documentation for more details. Defaults to on.  </para></listitem>
<listitem>
<para><computeroutput>obj.PS3ShadingOn ()</computeroutput> - Turn on/off the GL2PS_PS3_SHADING option. When enabled the shfill PostScript level 3 operator is used. Read the GL2PS documentation for more details. Defaults to on.  </para></listitem>
<listitem>
<para><computeroutput>obj.PS3ShadingOff ()</computeroutput> - Turn on/off the GL2PS_PS3_SHADING option. When enabled the shfill PostScript level 3 operator is used. Read the GL2PS documentation for more details. Defaults to on.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOcclusionCull (int )</computeroutput> - Turn on/off culling of occluded polygons (GL2PS_OCCLUSION_CULL). When enabled hidden polygons are removed. This reduces file size considerably. Defaults to on.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetOcclusionCull ()</computeroutput> - Turn on/off culling of occluded polygons (GL2PS_OCCLUSION_CULL). When enabled hidden polygons are removed. This reduces file size considerably. Defaults to on.  </para></listitem>
<listitem>
<para><computeroutput>obj.OcclusionCullOn ()</computeroutput> - Turn on/off culling of occluded polygons (GL2PS_OCCLUSION_CULL). When enabled hidden polygons are removed. This reduces file size considerably. Defaults to on.  </para></listitem>
<listitem>
<para><computeroutput>obj.OcclusionCullOff ()</computeroutput> - Turn on/off culling of occluded polygons (GL2PS_OCCLUSION_CULL). When enabled hidden polygons are removed. This reduces file size considerably. Defaults to on.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetWrite3DPropsAsRasterImage (int )</computeroutput> - Turn on/off writing 3D props as raster images. 2D props are rendered using vector graphics primitives. If you have hi-res actors and are using transparency you probably need to turn this on. Defaults to Off.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetWrite3DPropsAsRasterImage ()</computeroutput> - Turn on/off writing 3D props as raster images. 2D props are rendered using vector graphics primitives. If you have hi-res actors and are using transparency you probably need to turn this on. Defaults to Off.  </para></listitem>
<listitem>
<para><computeroutput>obj.Write3DPropsAsRasterImageOn ()</computeroutput> - Turn on/off writing 3D props as raster images. 2D props are rendered using vector graphics primitives. If you have hi-res actors and are using transparency you probably need to turn this on. Defaults to Off.  </para></listitem>
<listitem>
<para><computeroutput>obj.Write3DPropsAsRasterImageOff ()</computeroutput> - Turn on/off writing 3D props as raster images. 2D props are rendered using vector graphics primitives. If you have hi-res actors and are using transparency you probably need to turn this on. Defaults to Off.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
