<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkviews_vtkrenderedhierarchyrepresentation" kind="page">
    <compoundname>vtkviews_vtkrenderedhierarchyrepresentation</compoundname>
    <title>vtkRenderedHierarchyRepresentation</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkviews_1sec_vtkviews" kindref="member">Visualization Toolkit View Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>To create an instance of class vtkRenderedHierarchyRepresentation, simply invoke its constructor as follows <verbatim>  obj = vtkRenderedHierarchyRepresentation
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkRenderedHierarchyRepresentation has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkRenderedHierarchyRepresentation class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkRenderedHierarchyRepresentation = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkRenderedHierarchyRepresentation = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGraphEdgeLabelArrayName (string name)</computeroutput> -  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGraphEdgeLabelArrayName (string name, int idx)</computeroutput> -  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetGraphEdgeLabelArrayName ()</computeroutput> -  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetGraphEdgeLabelArrayName (int idx)</computeroutput> -  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGraphEdgeLabelVisibility (bool vis)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGraphEdgeLabelVisibility (bool vis, int idx)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetGraphEdgeLabelVisibility ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetGraphEdgeLabelVisibility (int idx)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GraphEdgeLabelVisibilityOn ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GraphEdgeLabelVisibilityOff ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGraphEdgeColorArrayName (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGraphEdgeColorArrayName (string name, int idx)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetGraphEdgeColorArrayName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetGraphEdgeColorArrayName (int idx)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetColorGraphEdgesByArray (bool vis)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetColorGraphEdgesByArray (bool vis, int idx)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetColorGraphEdgesByArray ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetColorGraphEdgesByArray (int idx)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.ColorGraphEdgesByArrayOn ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.ColorGraphEdgesByArrayOff ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGraphEdgeColorToSplineFraction ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGraphEdgeColorToSplineFraction (int idx)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGraphVisibility (bool vis)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGraphVisibility (bool vis, int idx)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetGraphVisibility ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetGraphVisibility (int idx)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GraphVisibilityOn ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GraphVisibilityOff ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetBundlingStrength (double strength)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetBundlingStrength (double strength, int idx)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetBundlingStrength ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetBundlingStrength (int idx)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGraphEdgeLabelFontSize (int size)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGraphEdgeLabelFontSize (int size, int idx)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetGraphEdgeLabelFontSize ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetGraphEdgeLabelFontSize (int idx)</computeroutput>  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
