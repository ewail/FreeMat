<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkspherepuzzle" kind="page">
    <compoundname>vtkgraphics_vtkspherepuzzle</compoundname>
    <title>vtkSpherePuzzle</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkSpherePuzzle creates</para><para>To create an instance of class vtkSpherePuzzle, simply invoke its constructor as follows <verbatim>  obj = vtkSpherePuzzle
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkSpherePuzzle has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkSpherePuzzle class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkSpherePuzzle = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkSpherePuzzle = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Reset ()</computeroutput> - Reset the state of this puzzle back to its original state.  </para></listitem>
<listitem>
<para><computeroutput>obj.MoveHorizontal (int section, int percentage, int rightFlag)</computeroutput> - Move the top/bottom half one segment either direction.  </para></listitem>
<listitem>
<para><computeroutput>obj.MoveVertical (int section, int percentage, int rightFlag)</computeroutput> - Rotate vertical half of sphere along one of the longitude lines.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetPoint (double x, double y, double z)</computeroutput> - SetPoint will be called as the mouse moves over the screen. The output will change to indicate the pending move. SetPoint returns zero if move is not activated by point. Otherwise it encodes the move into a unique integer so that the caller can determine if the move state has changed. This will answer the question, &quot;Should I render.&quot;  </para></listitem>
<listitem>
<para><computeroutput>obj.MovePoint (int percentage)</computeroutput> - Move actually implements the pending move. When percentage is 100, the pending move becomes inactive, and SetPoint will have to be called again to setup another move.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
