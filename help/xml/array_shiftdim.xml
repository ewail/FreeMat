<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="array_shiftdim" kind="page">
    <compoundname>array_shiftdim</compoundname>
    <title>SHIFTDIM Shift Array Dimensions Function</title>
    <detaileddescription>
<para>Section: <ref refid="sec_array_1sec_array" kindref="member">Array Generation and Manipulations</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The <computeroutput>shiftdim</computeroutput> function is used to shift the dimensions of an array. The general syntax for the <computeroutput>shiftdim</computeroutput> function is <verbatim>   y = shiftdim(x,n)
</verbatim> where <computeroutput>x</computeroutput> is a multidimensional array, and <computeroutput>n</computeroutput> is an integer. If <computeroutput>n</computeroutput> is a positive integer, then <computeroutput>shiftdim</computeroutput> circularly shifts the dimensions of <computeroutput>x</computeroutput> to the left, wrapping the dimensions around as necessary. If <computeroutput>n</computeroutput> is a negative integer, then <computeroutput>shiftdim</computeroutput> shifts the dimensions of <computeroutput>x</computeroutput> to the right, introducing singleton dimensions as necessary. In its second form: <verbatim>  [y,n] = shiftdim(x)
</verbatim> the <computeroutput>shiftdim</computeroutput> function will shift away (to the left) the leading singleton dimensions of <computeroutput>x</computeroutput> until the leading dimension is not a singleton dimension (recall that a singleton dimension <computeroutput>p</computeroutput> is one for which <computeroutput>size(x,p) == 1</computeroutput>). </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>Here are some simple examples of using <computeroutput>shiftdim</computeroutput> to remove the singleton dimensions of an array, and then restore them:</para><para><verbatim>--&gt; x = uint8(10*randn(1,1,1,3,2));
--&gt; [y,n] = shiftdim(x);
--&gt; n

ans = 
 3 

--&gt; size(y)

ans = 
 3 2 

--&gt; c = shiftdim(y,-n);
--&gt; size(c)

ans = 
 1 1 1 3 2 

--&gt; any(c~=x)

ans = 

(:,:,1,1,1) = 
 0 

(:,:,1,1,2) = 
 0 
</verbatim></para><para>Note that these operations (where shifting involves only singleton dimensions) do not actually cause data to be resorted, only the size of the arrays change. This is not true for the following example, which triggers a call to <computeroutput>permute</computeroutput>:</para><para><verbatim>--&gt; z = shiftdim(x,4);
</verbatim></para><para>Note that <computeroutput>z</computeroutput> is now the transpose of <computeroutput>x</computeroutput></para><para><verbatim>--&gt; squeeze(x)

ans = 
 11  1 
  0  0 
  0  8 

--&gt; squeeze(z)

ans = 
 11  0  0 
  1  0  8 
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
