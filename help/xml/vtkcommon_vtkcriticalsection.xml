<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkcommon_vtkcriticalsection" kind="page">
    <compoundname>vtkcommon_vtkcriticalsection</compoundname>
    <title>vtkCriticalSection</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkcommon_1sec_vtkcommon" kindref="member">Visualization Toolkit Common Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkCriticalSection allows the locking of variables which are accessed through different threads. This header file also defines vtkSimpleCriticalSection which is not a subclass of vtkObject. The API is identical to that of vtkMutexLock, and the behavior is identical as well, except on Windows 9x/NT platforms. The only difference on these platforms is that vtkMutexLock is more flexible, in that it works across processes as well as across threads, but also costs more, in that it evokes a 600-cycle x86 ring transition. The vtkCriticalSection provides a higher-performance equivalent (on Windows) but won&apos;t work across processes. Since it is unclear how, in vtk, an object at the vtk level can be shared across processes in the first place, one should use vtkCriticalSection unless one has a very good reason to use vtkMutexLock. If higher-performance equivalents for non-Windows platforms (Irix, SunOS, etc) are discovered, they should replace the implementations in this class</para><para>To create an instance of class vtkCriticalSection, simply invoke its constructor as follows <verbatim>  obj = vtkCriticalSection
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkCriticalSection has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkCriticalSection class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCriticalSection = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCriticalSection = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Lock ()</computeroutput> - Lock the vtkCriticalSection  </para></listitem>
<listitem>
<para><computeroutput>obj.Unlock ()</computeroutput> - Unlock the vtkCriticalSection  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
