<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtkunstructuredgrid" kind="page">
    <compoundname>vtkfiltering_vtkunstructuredgrid</compoundname>
    <title>vtkUnstructuredGrid</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkUnstructuredGrid is a data object that is a concrete implementation of vtkDataSet. vtkUnstructuredGrid represents any combinations of any cell types. This includes 0D (e.g., points), 1D (e.g., lines, polylines), 2D (e.g., triangles, polygons), and 3D (e.g., hexahedron, tetrahedron).</para><para>To create an instance of class vtkUnstructuredGrid, simply invoke its constructor as follows <verbatim>  obj = vtkUnstructuredGrid
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkUnstructuredGrid has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkUnstructuredGrid class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkUnstructuredGrid = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkUnstructuredGrid = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetDataObjectType ()</computeroutput> - Standard vtkDataSet API methods. See vtkDataSet for more information.  </para></listitem>
<listitem>
<para><computeroutput>obj.Allocate (vtkIdType numCells, int extSize)</computeroutput> - Standard vtkDataSet API methods. See vtkDataSet for more information.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.InsertNextCell (int type, vtkIdList ptIds)</computeroutput> - Insert/create cell in object by type and list of point ids defining cell topology.  </para></listitem>
<listitem>
<para><computeroutput>obj.Reset ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.CopyStructure (vtkDataSet ds)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetNumberOfCells ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCell = obj.GetCell (vtkIdType cellId)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GetCell (vtkIdType cellId, vtkGenericCell cell)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GetCellBounds (vtkIdType cellId, double bounds[6])</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GetCellPoints (vtkIdType cellId, vtkIdList ptIds)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GetPointCells (vtkIdType ptId, vtkIdList cellIds)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCellType (vtkIdType cellId)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkUnsignedCharArray = obj.GetCellTypesArray ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkIdTypeArray = obj.GetCellLocationsArray ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Squeeze ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Initialize ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetMaxCellSize ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.BuildLinks ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCellLinks = obj.GetCellLinks ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCells (int type, vtkCellArray cells)</computeroutput> - Special methods specific to vtkUnstructuredGrid for defining the cells composing the dataset.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCells (int types, vtkCellArray cells)</computeroutput> - Special methods specific to vtkUnstructuredGrid for defining the cells composing the dataset.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCells (vtkUnsignedCharArray cellTypes, vtkIdTypeArray cellLocations, vtkCellArray cells)</computeroutput> - Special methods specific to vtkUnstructuredGrid for defining the cells composing the dataset.  </para></listitem>
<listitem>
<para><computeroutput>vtkCellArray = obj.GetCells ()</computeroutput> - Special methods specific to vtkUnstructuredGrid for defining the cells composing the dataset.  </para></listitem>
<listitem>
<para><computeroutput>obj.RemoveReferenceToCell (vtkIdType ptId, vtkIdType cellId)</computeroutput> - Special methods specific to vtkUnstructuredGrid for defining the cells composing the dataset.  </para></listitem>
<listitem>
<para><computeroutput>obj.AddReferenceToCell (vtkIdType ptId, vtkIdType cellId)</computeroutput> - Special methods specific to vtkUnstructuredGrid for defining the cells composing the dataset.  </para></listitem>
<listitem>
<para><computeroutput>obj.ResizeCellList (vtkIdType ptId, int size)</computeroutput> - Special methods specific to vtkUnstructuredGrid for defining the cells composing the dataset.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetCellNeighbors (vtkIdType cellId, vtkIdList ptIds, vtkIdList cellIds)</computeroutput> - Topological inquiry to get all cells using list of points exclusive of cell specified (e.g., cellId). THIS METHOD IS THREAD SAFE IF FIRST CALLED FROM A SINGLE THREAD AND THE DATASET IS NOT MODIFIED  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetUpdateExtent ()</computeroutput> - We need this here to avoid hiding superclass method  </para></listitem>
<listitem>
<para><computeroutput>obj.GetUpdateExtent (int extent[6])</computeroutput> - We need this here to avoid hiding superclass method  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetPiece ()</computeroutput> - Set / Get the piece and the number of pieces. Similar to extent in 3D.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfPieces ()</computeroutput> - Set / Get the piece and the number of pieces. Similar to extent in 3D.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetGhostLevel ()</computeroutput> - Get the ghost level.  </para></listitem>
<listitem>
<para><computeroutput>long = obj.GetActualMemorySize ()</computeroutput> - Return the actual size of the data in kilobytes. This number is valid only after the pipeline has updated. The memory size returned is guaranteed to be greater than or equal to the memory required to represent the data (e.g., extra space in arrays, etc. are not included in the return value). THIS METHOD IS THREAD SAFE.  </para></listitem>
<listitem>
<para><computeroutput>obj.ShallowCopy (vtkDataObject src)</computeroutput> - Shallow and Deep copy.  </para></listitem>
<listitem>
<para><computeroutput>obj.DeepCopy (vtkDataObject src)</computeroutput> - Shallow and Deep copy.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetIdsOfCellsOfType (int type, vtkIdTypeArray array)</computeroutput> - Fill vtkIdTypeArray container with list of cell Ids. This method traverses all cells and, for a particular cell type, inserts the cell Id into the container.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsHomogeneous ()</computeroutput> - Traverse cells and determine if cells are all of the same type.  </para></listitem>
<listitem>
<para><computeroutput>obj.RemoveGhostCells (int level)</computeroutput> - This method will remove any cell that has a ghost level array value greater or equal to level.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
