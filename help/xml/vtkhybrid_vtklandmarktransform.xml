<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkhybrid_vtklandmarktransform" kind="page">
    <compoundname>vtkhybrid_vtklandmarktransform</compoundname>
    <title>vtkLandmarkTransform</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkhybrid_1sec_vtkhybrid" kindref="member">Visualization Toolkit Hybrid Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>A vtkLandmarkTransform is defined by two sets of landmarks, the transform computed gives the best fit mapping one onto the other, in a least squares sense. The indices are taken to correspond, so point 1 in the first set will get mapped close to point 1 in the second set, etc. Call SetSourceLandmarks and SetTargetLandmarks to specify the two sets of landmarks, ensure they have the same number of points.</para><para>To create an instance of class vtkLandmarkTransform, simply invoke its constructor as follows <verbatim>  obj = vtkLandmarkTransform
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkLandmarkTransform has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkLandmarkTransform class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkLandmarkTransform = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkLandmarkTransform = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSourceLandmarks (vtkPoints points)</computeroutput> - Specify the source and target landmark sets. The two sets must have the same number of points. If you add or change points in these objects, you must call Modified() on them or the transformation might not update.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTargetLandmarks (vtkPoints points)</computeroutput> - Specify the source and target landmark sets. The two sets must have the same number of points. If you add or change points in these objects, you must call Modified() on them or the transformation might not update.  </para></listitem>
<listitem>
<para><computeroutput>vtkPoints = obj.GetSourceLandmarks ()</computeroutput> - Specify the source and target landmark sets. The two sets must have the same number of points. If you add or change points in these objects, you must call Modified() on them or the transformation might not update.  </para></listitem>
<listitem>
<para><computeroutput>vtkPoints = obj.GetTargetLandmarks ()</computeroutput> - Specify the source and target landmark sets. The two sets must have the same number of points. If you add or change points in these objects, you must call Modified() on them or the transformation might not update.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMode (int )</computeroutput> - Set the number of degrees of freedom to constrain the solution to. Rigidbody (VTK_LANDMARK_RIGIDBODY): rotation and translation only. Similarity (VTK_LANDMARK_SIMILARITY): rotation, translation and isotropic scaling. Affine (VTK_LANDMARK_AFFINE): collinearity is preserved. Ratios of distances along a line are preserved. The default is similarity.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetModeToRigidBody ()</computeroutput> - Set the number of degrees of freedom to constrain the solution to. Rigidbody (VTK_LANDMARK_RIGIDBODY): rotation and translation only. Similarity (VTK_LANDMARK_SIMILARITY): rotation, translation and isotropic scaling. Affine (VTK_LANDMARK_AFFINE): collinearity is preserved. Ratios of distances along a line are preserved. The default is similarity.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetModeToSimilarity ()</computeroutput> - Set the number of degrees of freedom to constrain the solution to. Rigidbody (VTK_LANDMARK_RIGIDBODY): rotation and translation only. Similarity (VTK_LANDMARK_SIMILARITY): rotation, translation and isotropic scaling. Affine (VTK_LANDMARK_AFFINE): collinearity is preserved. Ratios of distances along a line are preserved. The default is similarity.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetModeToAffine ()</computeroutput> - Set the number of degrees of freedom to constrain the solution to. Rigidbody (VTK_LANDMARK_RIGIDBODY): rotation and translation only. Similarity (VTK_LANDMARK_SIMILARITY): rotation, translation and isotropic scaling. Affine (VTK_LANDMARK_AFFINE): collinearity is preserved. Ratios of distances along a line are preserved. The default is similarity.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetMode ()</computeroutput> - Get the current transformation mode.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetModeAsString ()</computeroutput> - Get the current transformation mode.  </para></listitem>
<listitem>
<para><computeroutput>obj.Inverse ()</computeroutput> - Invert the transformation. This is done by switching the source and target landmarks.  </para></listitem>
<listitem>
<para><computeroutput>long = obj.GetMTime ()</computeroutput> - Get the MTime.  </para></listitem>
<listitem>
<para><computeroutput>vtkAbstractTransform = obj.MakeTransform ()</computeroutput> - Make another transform of the same type.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
