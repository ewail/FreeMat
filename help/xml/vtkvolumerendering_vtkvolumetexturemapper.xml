<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkvolumerendering_vtkvolumetexturemapper" kind="page">
    <compoundname>vtkvolumerendering_vtkvolumetexturemapper</compoundname>
    <title>vtkVolumeTextureMapper</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkvolumerendering_1sec_vtkvolumerendering" kindref="member">Visualization Toolkit Volume Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkVolumeTextureMapper is the abstract definition of a volume mapper that uses a texture mapping approach.</para><para>To create an instance of class vtkVolumeTextureMapper, simply invoke its constructor as follows <verbatim>  obj = vtkVolumeTextureMapper
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkVolumeTextureMapper has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkVolumeTextureMapper class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkVolumeTextureMapper = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkVolumeTextureMapper = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Update ()</computeroutput> - Update the volume rendering pipeline by updating the scalar input  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGradientEstimator (vtkEncodedGradientEstimator gradest)</computeroutput> - Set / Get the gradient estimator used to estimate normals  </para></listitem>
<listitem>
<para><computeroutput>vtkEncodedGradientEstimator = obj.GetGradientEstimator ()</computeroutput> - Set / Get the gradient estimator used to estimate normals  </para></listitem>
<listitem>
<para><computeroutput>vtkEncodedGradientShader = obj.GetGradientShader ()</computeroutput> - Get the gradient shader.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
