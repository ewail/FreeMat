<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="flow_return" kind="page">
    <compoundname>flow_return</compoundname>
    <title>RETURN Return From Function</title>
    <detaileddescription>
<para>Section: <ref refid="sec_flow_1sec_flow" kindref="member">Flow Control</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The <computeroutput>return</computeroutput> statement is used to immediately return from a function, or to return from a <computeroutput>keyboard</computeroutput> session. The syntax for its use is <verbatim>  return
</verbatim> Inside a function, a <computeroutput>return</computeroutput> statement causes FreeMat to exit the function immediately. When a <computeroutput>keyboard</computeroutput> session is active, the <computeroutput>return</computeroutput> statement causes execution to resume where the <computeroutput>keyboard</computeroutput> session started. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>In the first example, we define a function that uses a <computeroutput>return</computeroutput> to exit the function if a certain test condition is satisfied.</para><para><verbatim>     return_func.m
</verbatim></para><para><verbatim>function ret = return_func(a,b)
  ret = &apos;a is greater&apos;;
  if (a &gt; b)
    return;
  end
  ret = &apos;b is greater&apos;;
  printf(&apos;finishing up...\n&apos;);
</verbatim></para><para>Next we exercise the function with a few simple test cases:</para><para><verbatim>--&gt; return_func(1,3)
finishing up...

ans = 
b is greater
--&gt; return_func(5,2)

ans = 
a is greater
</verbatim></para><para>In the second example, we take the function and rewrite it to use a <computeroutput>keyboard</computeroutput> statement inside the <computeroutput>if</computeroutput> statement.</para><para><verbatim>     return_func2.m
</verbatim></para><para><verbatim>function ret = return_func2(a,b)
  if (a &gt; b)
     ret = &apos;a is greater&apos;;
     keyboard;
  else
     ret = &apos;b is greater&apos;;
  end
  printf(&apos;finishing up...\n&apos;);
</verbatim></para><para>Now, we call the function with a larger first argument, which triggers the <computeroutput>keyboard</computeroutput> session. After verifying a few values inside the <computeroutput>keyboard</computeroutput> session, we issue a <computeroutput>return</computeroutput> statement to resume execution.</para><para><verbatim>--&gt; return_func2(2,4)
finishing up...

ans = 
b is greater
--&gt; return_func2(5,1)
[return_func2,4]--&gt; ret

ans = 
a is greater
[return_func2,4]--&gt; a

ans = 
 5 

[return_func2,4]--&gt; b

ans = 
 1 

[return_func2,4]--&gt; return
finishing up...

ans = 
a is greater
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
