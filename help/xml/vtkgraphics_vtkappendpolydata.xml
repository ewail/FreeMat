<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkappendpolydata" kind="page">
    <compoundname>vtkgraphics_vtkappendpolydata</compoundname>
    <title>vtkAppendPolyData</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkAppendPolyData is a filter that appends one of more polygonal datasets into a single polygonal dataset. All geometry is extracted and appended, but point and cell attributes (i.e., scalars, vectors, normals) are extracted and appended only if all datasets have the point and/or cell attributes available. (For example, if one dataset has point scalars but another does not, point scalars will not be appended.)</para><para>To create an instance of class vtkAppendPolyData, simply invoke its constructor as follows <verbatim>  obj = vtkAppendPolyData
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkAppendPolyData has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkAppendPolyData class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkAppendPolyData = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkAppendPolyData = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetUserManagedInputs (int )</computeroutput> - UserManagedInputs allows the user to set inputs by number instead of using the AddInput/RemoveInput functions. Calls to SetNumberOfInputs/SetInputByNumber should not be mixed with calls to AddInput/RemoveInput. By default, UserManagedInputs is false.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetUserManagedInputs ()</computeroutput> - UserManagedInputs allows the user to set inputs by number instead of using the AddInput/RemoveInput functions. Calls to SetNumberOfInputs/SetInputByNumber should not be mixed with calls to AddInput/RemoveInput. By default, UserManagedInputs is false.  </para></listitem>
<listitem>
<para><computeroutput>obj.UserManagedInputsOn ()</computeroutput> - UserManagedInputs allows the user to set inputs by number instead of using the AddInput/RemoveInput functions. Calls to SetNumberOfInputs/SetInputByNumber should not be mixed with calls to AddInput/RemoveInput. By default, UserManagedInputs is false.  </para></listitem>
<listitem>
<para><computeroutput>obj.UserManagedInputsOff ()</computeroutput> - UserManagedInputs allows the user to set inputs by number instead of using the AddInput/RemoveInput functions. Calls to SetNumberOfInputs/SetInputByNumber should not be mixed with calls to AddInput/RemoveInput. By default, UserManagedInputs is false.  </para></listitem>
<listitem>
<para><computeroutput>obj.AddInput (vtkPolyData )</computeroutput> - Add a dataset to the list of data to append. Should not be used when UserManagedInputs is true, use SetInputByNumber instead.  </para></listitem>
<listitem>
<para><computeroutput>obj.RemoveInput (vtkPolyData )</computeroutput> - Remove a dataset from the list of data to append. Should not be used when UserManagedInputs is true, use SetInputByNumber (NULL) instead.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetNumberOfInputs (int num)</computeroutput> - Directly set(allocate) number of inputs, should only be used when UserManagedInputs is true.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInputByNumber (int num, vtkPolyData input)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetParallelStreaming (int )</computeroutput> - ParallelStreaming is for a particular application. It causes this filter to ask for a different piece from each of its inputs. If all the inputs are the same, then the output of this append filter is the whole dataset pieced back together. Duplicate points are create along the seams. The purpose of this feature is to get data parallelism at a course scale. Each of the inputs can be generated in a different process at the same time.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetParallelStreaming ()</computeroutput> - ParallelStreaming is for a particular application. It causes this filter to ask for a different piece from each of its inputs. If all the inputs are the same, then the output of this append filter is the whole dataset pieced back together. Duplicate points are create along the seams. The purpose of this feature is to get data parallelism at a course scale. Each of the inputs can be generated in a different process at the same time.  </para></listitem>
<listitem>
<para><computeroutput>obj.ParallelStreamingOn ()</computeroutput> - ParallelStreaming is for a particular application. It causes this filter to ask for a different piece from each of its inputs. If all the inputs are the same, then the output of this append filter is the whole dataset pieced back together. Duplicate points are create along the seams. The purpose of this feature is to get data parallelism at a course scale. Each of the inputs can be generated in a different process at the same time.  </para></listitem>
<listitem>
<para><computeroutput>obj.ParallelStreamingOff ()</computeroutput> - ParallelStreaming is for a particular application. It causes this filter to ask for a different piece from each of its inputs. If all the inputs are the same, then the output of this append filter is the whole dataset pieced back together. Duplicate points are create along the seams. The purpose of this feature is to get data parallelism at a course scale. Each of the inputs can be generated in a different process at the same time.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
