<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkwidgets_vtkrectilinearwiperepresentation" kind="page">
    <compoundname>vtkwidgets_vtkrectilinearwiperepresentation</compoundname>
    <title>vtkRectilinearWipeRepresentation</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkwidgets_1sec_vtkwidgets" kindref="member">Visualization Toolkit Widget Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>This class is used to represent and render a vtkRectilinearWipeWidget. To use this class, you need to specify an instance of a vtkImageRectilinearWipe and vtkImageActor. This provides the information for this representation to construct and place itself.</para><para>The class may be subclassed so that alternative representations can be created. The class defines an API and a default implementation that the vtkRectilinearWipeWidget interacts with to render itself in the scene.</para><para>To create an instance of class vtkRectilinearWipeRepresentation, simply invoke its constructor as follows <verbatim>  obj = vtkRectilinearWipeRepresentation
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkRectilinearWipeRepresentation has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkRectilinearWipeRepresentation class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>vtkRectilinearWipeRepresentation = obj.NewInstance ()</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>vtkRectilinearWipeRepresentation = obj.SafeDownCast (vtkObject o)</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetRectilinearWipe (vtkImageRectilinearWipe wipe)</computeroutput> - Specify an instance of vtkImageRectilinearWipe to manipulate.  </para></listitem>
<listitem>
<para><computeroutput>vtkImageRectilinearWipe = obj.GetRectilinearWipe ()</computeroutput> - Specify an instance of vtkImageRectilinearWipe to manipulate.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetImageActor (vtkImageActor imageActor)</computeroutput> - Specify an instance of vtkImageActor to decorate.  </para></listitem>
<listitem>
<para><computeroutput>vtkImageActor = obj.GetImageActor ()</computeroutput> - Specify an instance of vtkImageActor to decorate.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTolerance (int )</computeroutput> - The tolerance representing the distance to the widget (in pixels) in which the cursor is considered to be on the widget, or on a widget feature (e.g., a corner point or edge).  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetToleranceMinValue ()</computeroutput> - The tolerance representing the distance to the widget (in pixels) in which the cursor is considered to be on the widget, or on a widget feature (e.g., a corner point or edge).  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetToleranceMaxValue ()</computeroutput> - The tolerance representing the distance to the widget (in pixels) in which the cursor is considered to be on the widget, or on a widget feature (e.g., a corner point or edge).  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTolerance ()</computeroutput> - The tolerance representing the distance to the widget (in pixels) in which the cursor is considered to be on the widget, or on a widget feature (e.g., a corner point or edge).  </para></listitem>
<listitem>
<para><computeroutput>vtkProperty2D = obj.GetProperty ()</computeroutput> - Get the properties for the widget. This can be manipulated to set different colors, line widths, etc.  </para></listitem>
<listitem>
<para><computeroutput>obj.BuildRepresentation ()</computeroutput> - Subclasses of vtkRectilinearWipeRepresentation must implement these methods. These are the methods that the widget and its representation use to communicate with each other.  </para></listitem>
<listitem>
<para><computeroutput>obj.StartWidgetInteraction (double eventPos[2])</computeroutput> - Subclasses of vtkRectilinearWipeRepresentation must implement these methods. These are the methods that the widget and its representation use to communicate with each other.  </para></listitem>
<listitem>
<para><computeroutput>obj.WidgetInteraction (double eventPos[2])</computeroutput> - Subclasses of vtkRectilinearWipeRepresentation must implement these methods. These are the methods that the widget and its representation use to communicate with each other.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.ComputeInteractionState (int X, int Y, int modify)</computeroutput> - Subclasses of vtkRectilinearWipeRepresentation must implement these methods. These are the methods that the widget and its representation use to communicate with each other.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetActors2D (vtkPropCollection )</computeroutput> - Methods to make this class behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>obj.ReleaseGraphicsResources (vtkWindow )</computeroutput> - Methods to make this class behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOverlay (vtkViewport viewport)</computeroutput> - Methods to make this class behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOpaqueGeometry (vtkViewport viewport)</computeroutput> - Methods to make this class behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderTranslucentPolygonalGeometry (vtkViewport viewport)</computeroutput> - Methods to make this class behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.HasTranslucentPolygonalGeometry ()</computeroutput> - Methods to make this class behave as a vtkProp.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
