<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkwidgets_vtkplaybackrepresentation" kind="page">
    <compoundname>vtkwidgets_vtkplaybackrepresentation</compoundname>
    <title>vtkPlaybackRepresentation</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkwidgets_1sec_vtkwidgets" kindref="member">Visualization Toolkit Widget Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>This class is used to represent the vtkPlaybackWidget. Besides defining geometry, this class defines a series of virtual method stubs that are meant to be subclassed by applications for controlling playback.</para><para>To create an instance of class vtkPlaybackRepresentation, simply invoke its constructor as follows <verbatim>  obj = vtkPlaybackRepresentation
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkPlaybackRepresentation has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkPlaybackRepresentation class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput> - Standard VTK class methods.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput> - Standard VTK class methods.  </para></listitem>
<listitem>
<para><computeroutput>vtkPlaybackRepresentation = obj.NewInstance ()</computeroutput> - Standard VTK class methods.  </para></listitem>
<listitem>
<para><computeroutput>vtkPlaybackRepresentation = obj.SafeDownCast (vtkObject o)</computeroutput> - Standard VTK class methods.  </para></listitem>
<listitem>
<para><computeroutput>vtkProperty2D = obj.GetProperty ()</computeroutput> - By obtaining this property you can specify the properties of the representation.  </para></listitem>
<listitem>
<para><computeroutput>obj.Play ()</computeroutput> - Virtual callbacks that subclasses should implement.  </para></listitem>
<listitem>
<para><computeroutput>obj.Stop ()</computeroutput> - Virtual callbacks that subclasses should implement.  </para></listitem>
<listitem>
<para><computeroutput>obj.ForwardOneFrame ()</computeroutput> - Virtual callbacks that subclasses should implement.  </para></listitem>
<listitem>
<para><computeroutput>obj.BackwardOneFrame ()</computeroutput> - Virtual callbacks that subclasses should implement.  </para></listitem>
<listitem>
<para><computeroutput>obj.JumpToBeginning ()</computeroutput> - Virtual callbacks that subclasses should implement.  </para></listitem>
<listitem>
<para><computeroutput>obj.JumpToEnd ()</computeroutput> - Satisfy the superclasses&apos; API.  </para></listitem>
<listitem>
<para><computeroutput>obj.BuildRepresentation ()</computeroutput> - Satisfy the superclasses&apos; API.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetSize (double size[2])</computeroutput> - These methods are necessary to make this representation behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetActors2D (vtkPropCollection )</computeroutput> - These methods are necessary to make this representation behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>obj.ReleaseGraphicsResources (vtkWindow )</computeroutput> - These methods are necessary to make this representation behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOverlay (vtkViewport )</computeroutput> - These methods are necessary to make this representation behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOpaqueGeometry (vtkViewport )</computeroutput> - These methods are necessary to make this representation behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderTranslucentPolygonalGeometry (vtkViewport )</computeroutput> - These methods are necessary to make this representation behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.HasTranslucentPolygonalGeometry ()</computeroutput> - These methods are necessary to make this representation behave as a vtkProp.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
