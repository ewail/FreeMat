<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtkpointset" kind="page">
    <compoundname>vtkfiltering_vtkpointset</compoundname>
    <title>vtkPointSet</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkPointSet is an abstract class that specifies the interface for datasets that explicitly use &quot;point&quot; arrays to represent geometry. For example, vtkPolyData and vtkUnstructuredGrid require point arrays to specify point position, while vtkStructuredPoints generates point positions implicitly.</para><para>To create an instance of class vtkPointSet, simply invoke its constructor as follows <verbatim>  obj = vtkPointSet
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkPointSet has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkPointSet class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkPointSet = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkPointSet = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Initialize ()</computeroutput> - Reset to an empty state and free any memory.  </para></listitem>
<listitem>
<para><computeroutput>obj.CopyStructure (vtkDataSet pd)</computeroutput> - Copy the geometric structure of an input point set object.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetNumberOfPoints ()</computeroutput> - See vtkDataSet for additional information.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetPoint (vtkIdType ptId)</computeroutput> - See vtkDataSet for additional information.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetPoint (vtkIdType ptId, double x[3])</computeroutput> - See vtkDataSet for additional information.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.FindPoint (double x[3])</computeroutput> - See vtkDataSet for additional information.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.FindPoint (double x, double y, double z)</computeroutput> - See vtkDataSet for additional information.  </para></listitem>
<listitem>
<para><computeroutput>long = obj.GetMTime ()</computeroutput> - Get MTime which also considers its vtkPoints MTime.  </para></listitem>
<listitem>
<para><computeroutput>obj.ComputeBounds ()</computeroutput> - Compute the (X, Y, Z) bounds of the data.  </para></listitem>
<listitem>
<para><computeroutput>obj.Squeeze ()</computeroutput> - Reclaim any unused memory.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPoints (vtkPoints )</computeroutput> - Specify point array to define point coordinates.  </para></listitem>
<listitem>
<para><computeroutput>vtkPoints = obj.GetPoints ()</computeroutput> - Specify point array to define point coordinates.  </para></listitem>
<listitem>
<para><computeroutput>long = obj.GetActualMemorySize ()</computeroutput> - Return the actual size of the data in kilobytes. This number is valid only after the pipeline has updated. The memory size returned is guaranteed to be greater than or equal to the memory required to represent the data (e.g., extra space in arrays, etc. are not included in the return value). THIS METHOD IS THREAD SAFE.  </para></listitem>
<listitem>
<para><computeroutput>obj.ShallowCopy (vtkDataObject src)</computeroutput> - Shallow and Deep copy.  </para></listitem>
<listitem>
<para><computeroutput>obj.DeepCopy (vtkDataObject src)</computeroutput> - Shallow and Deep copy.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
