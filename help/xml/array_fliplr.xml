<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="array_fliplr" kind="page">
    <compoundname>array_fliplr</compoundname>
    <title>FLIPLR Reverse the Columns of a Matrix</title>
    <detaileddescription>
<para>Section: <ref refid="sec_array_1sec_array" kindref="member">Array Generation and Manipulations</ref> </para><sect1 id="typecast_dec2bin_1USAGE">
<title>USAGE</title>
<para>Reverses the columns of a matrix. The syntax for its use is <verbatim>   y = fliplr(x)
</verbatim> where <computeroutput>x</computeroutput> is matrix. If <computeroutput>x</computeroutput> is an N-dimensional array then the second dimension is reversed. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>The following example shows <computeroutput>fliplr</computeroutput> applied to a 2D matrix.</para><para><verbatim>--&gt; x = int32(rand(4)*10)

x = 
  6  4  7  4 
  8  5  4  1 
  5  8  7  9 
  1 10  9  9 

--&gt; fliplr(x)

ans = 
  4  7  4  6 
  1  4  5  8 
  9  7  8  5 
  9  9 10  1 
</verbatim></para><para>For a 3D array, note how the columns in each slice are flipped.</para><para><verbatim>--&gt; x = int32(rand(4,4,3)*10)

x = 

(:,:,1) = 
  4  8  1  8 
  1  5  5  2 
  2 10  5  8 
  4  8  2  1 

(:,:,2) = 
  0  3  4  1 
  6  6 10  8 
  4  3  3  6 
  2  9  7  3 

(:,:,3) = 
  6  5  1  1 
  6  8 10  3 
  4  3  7  9 
  9  4  4  3 

--&gt; fliplr(x)

ans = 

(:,:,1) = 
  8  1  8  4 
  2  5  5  1 
  8  5 10  2 
  1  2  8  4 

(:,:,2) = 
  1  4  3  0 
  8 10  6  6 
  6  3  3  4 
  3  7  9  2 

(:,:,3) = 
  1  1  5  6 
  3 10  8  6 
  9  7  3  4 
  3  4  4  9 
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
