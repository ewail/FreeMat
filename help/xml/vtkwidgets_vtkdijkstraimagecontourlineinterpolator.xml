<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkwidgets_vtkdijkstraimagecontourlineinterpolator" kind="page">
    <compoundname>vtkwidgets_vtkdijkstraimagecontourlineinterpolator</compoundname>
    <title>vtkDijkstraImageContourLineInterpolator</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkwidgets_1sec_vtkwidgets" kindref="member">Visualization Toolkit Widget Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkDijkstraImageContourLineInterpolator interpolates and places contour points on images. The class interpolates nodes by computing a graph lying on the image data. By graph, we mean that the line interpolating the two end points traverses along pixels so as to form a shortest path. A Dijkstra algorithm is used to compute the path.</para><para>The class is meant to be used in conjunction with vtkImageActorPointPlacer. One reason for this coupling is a performance issue: both classes need to perform a cell pick, and coupling avoids multiple cell picks (cell picks are slow). Another issue is that the interpolator may need to set the image input to its vtkDijkstraImageGeodesicPath ivar.</para><para>To create an instance of class vtkDijkstraImageContourLineInterpolator, simply invoke its constructor as follows <verbatim>  obj = vtkDijkstraImageContourLineInterpolator
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkDijkstraImageContourLineInterpolator has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkDijkstraImageContourLineInterpolator class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>vtkDijkstraImageContourLineInterpolator = obj.NewInstance ()</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>vtkDijkstraImageContourLineInterpolator = obj.SafeDownCast (vtkObject o)</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.InterpolateLine (vtkRenderer ren, vtkContourRepresentation rep, int idx1, int idx2)</computeroutput> - Subclasses that wish to interpolate a line segment must implement this. For instance vtkBezierContourLineInterpolator adds nodes between idx1 and idx2, that allow the contour to adhere to a bezier curve.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCostImage (vtkImageData )</computeroutput> - Set the image data for the vtkDijkstraImageGeodesicPath. If not set, the interpolator uses the image data input to the image actor. The image actor is obtained from the expected vtkImageActorPointPlacer.  </para></listitem>
<listitem>
<para><computeroutput>vtkImageData = obj.GetCostImage ()</computeroutput> - Set the image data for the vtkDijkstraImageGeodesicPath. If not set, the interpolator uses the image data input to the image actor. The image actor is obtained from the expected vtkImageActorPointPlacer.  </para></listitem>
<listitem>
<para><computeroutput>vtkDijkstraImageGeodesicPath = obj.GetDijkstraImageGeodesicPath ()</computeroutput> - access to the internal dijkstra path  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
