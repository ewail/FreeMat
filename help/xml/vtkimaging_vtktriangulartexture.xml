<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkimaging_vtktriangulartexture" kind="page">
    <compoundname>vtkimaging_vtktriangulartexture</compoundname>
    <title>vtkTriangularTexture</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkimaging_1sec_vtkimaging" kindref="member">Visualization Toolkit Imaging Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkTriangularTexture is a filter that generates a 2D texture map based on the paper &quot;Opacity-modulating Triangular Textures for Irregular Surfaces,&quot; by Penny Rheingans, IEEE Visualization &apos;96, pp. 219-225. The textures assume texture coordinates of (0,0), (1.0) and (.5, sqrt(3)/2). The sequence of texture values is the same along each edge of the triangular texture map. So, the assignment order of texture coordinates is arbitrary.</para><para>To create an instance of class vtkTriangularTexture, simply invoke its constructor as follows <verbatim>  obj = vtkTriangularTexture
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkTriangularTexture has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkTriangularTexture class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkTriangularTexture = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkTriangularTexture = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetScaleFactor (double )</computeroutput> - Set a Scale Factor.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetScaleFactor ()</computeroutput> - Set a Scale Factor.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetXSize (int )</computeroutput> - Set the X texture map dimension. Default is 64.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetXSize ()</computeroutput> - Set the X texture map dimension. Default is 64.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetYSize (int )</computeroutput> - Set the Y texture map dimension. Default is 64.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetYSize ()</computeroutput> - Set the Y texture map dimension. Default is 64.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTexturePattern (int )</computeroutput> - Set the texture pattern. 1 = opaque at centroid (default) 2 = opaque at vertices 3 = opaque in rings around vertices  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTexturePatternMinValue ()</computeroutput> - Set the texture pattern. 1 = opaque at centroid (default) 2 = opaque at vertices 3 = opaque in rings around vertices  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTexturePatternMaxValue ()</computeroutput> - Set the texture pattern. 1 = opaque at centroid (default) 2 = opaque at vertices 3 = opaque in rings around vertices  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetTexturePattern ()</computeroutput> - Set the texture pattern. 1 = opaque at centroid (default) 2 = opaque at vertices 3 = opaque in rings around vertices  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
