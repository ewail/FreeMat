<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkimaging_vtkimagemagnify" kind="page">
    <compoundname>vtkimaging_vtkimagemagnify</compoundname>
    <title>vtkImageMagnify</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkimaging_1sec_vtkimaging" kindref="member">Visualization Toolkit Imaging Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkImageMagnify maps each pixel of the input onto a nxmx... region of the output. Location (0,0,...) remains in the same place. The magnification occurs via pixel replication, or if Interpolate is on, by bilinear interpolation. Initially, interpolation is off and magnification factors are set to 1 in all directions.</para><para>To create an instance of class vtkImageMagnify, simply invoke its constructor as follows <verbatim>  obj = vtkImageMagnify
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkImageMagnify has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkImageMagnify class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImageMagnify = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImageMagnify = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMagnificationFactors (int , int , int )</computeroutput> - Set/Get the integer magnification factors in the i-j-k directions. Initially, factors are set to 1 in all directions.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMagnificationFactors (int a[3])</computeroutput> - Set/Get the integer magnification factors in the i-j-k directions. Initially, factors are set to 1 in all directions.  </para></listitem>
<listitem>
<para><computeroutput>int = obj. GetMagnificationFactors ()</computeroutput> - Set/Get the integer magnification factors in the i-j-k directions. Initially, factors are set to 1 in all directions.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInterpolate (int )</computeroutput> - Turn interpolation on and off (pixel replication is used when off). Initially, interpolation is off.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetInterpolate ()</computeroutput> - Turn interpolation on and off (pixel replication is used when off). Initially, interpolation is off.  </para></listitem>
<listitem>
<para><computeroutput>obj.InterpolateOn ()</computeroutput> - Turn interpolation on and off (pixel replication is used when off). Initially, interpolation is off.  </para></listitem>
<listitem>
<para><computeroutput>obj.InterpolateOff ()</computeroutput> - Turn interpolation on and off (pixel replication is used when off). Initially, interpolation is off.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
