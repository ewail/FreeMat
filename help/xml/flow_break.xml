<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="flow_break" kind="page">
    <compoundname>flow_break</compoundname>
    <title>BREAK Exit Execution In Loop</title>
    <detaileddescription>
<para>Section: <ref refid="sec_flow_1sec_flow" kindref="member">Flow Control</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The <computeroutput>break</computeroutput> statement is used to exit a loop prematurely. It can be used inside a <computeroutput>for</computeroutput> loop or a <computeroutput>while</computeroutput> loop. The syntax for its use is <verbatim>   break
</verbatim> inside the body of the loop. The <computeroutput>break</computeroutput> statement forces execution to exit the loop immediately. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>Here is a simple example of how <computeroutput>break</computeroutput> exits the loop. We have a loop that sums integers from <computeroutput>1</computeroutput> to <computeroutput>10</computeroutput>, but that stops prematurely at <computeroutput>5</computeroutput> using a <computeroutput>break</computeroutput>. We will use a <computeroutput>while</computeroutput> loop.</para><para><verbatim>     break_ex.m
</verbatim></para><para><verbatim>function accum = break_ex
  accum = 0;
  i = 1;
  while (i&lt;=10)
    accum = accum + i;
    if (i == 5)
      break;
    end
    i = i + 1;
  end
</verbatim></para><para>The function is exercised here:</para><para><verbatim>--&gt; break_ex

ans = 
 15 

--&gt; sum(1:5)

ans = 
 15 
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
