<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkcommon_vtktableextenttranslator" kind="page">
    <compoundname>vtkcommon_vtktableextenttranslator</compoundname>
    <title>vtkTableExtentTranslator</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkcommon_1sec_vtkcommon" kindref="member">Visualization Toolkit Common Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkTableExtentTranslator provides a vtkExtentTranslator that is programmed with a specific extent corresponding to each piece number. Readers can provide this to an application to allow the pipeline to execute using the same piece breakdown that is provided in the input file.</para><para>To create an instance of class vtkTableExtentTranslator, simply invoke its constructor as follows <verbatim>  obj = vtkTableExtentTranslator
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkTableExtentTranslator has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkTableExtentTranslator class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkTableExtentTranslator = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkTableExtentTranslator = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetNumberOfPieces (int pieces)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetNumberOfPiecesInTable (int pieces)</computeroutput> - Set the real number of pieces in the extent table.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfPiecesInTable ()</computeroutput> - Set the real number of pieces in the extent table.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.PieceToExtent ()</computeroutput> - Called to translate the current piece into an extent. This is not thread safe.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.PieceToExtentByPoints ()</computeroutput> - Not supported by this subclass of vtkExtentTranslator.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.PieceToExtentThreadSafe (int piece, int numPieces, int ghostLevel, int wholeExtent, int resultExtent, int splitMode, int byPoints)</computeroutput> - Not supported by this subclass of vtkExtentTranslator.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtentForPiece (int piece, int extent)</computeroutput> - Set the extent to be used for a piece. This sets the extent table entry for the piece.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetExtentForPiece (int piece, int extent)</computeroutput> - Get the extent table entry for the given piece. This is only for code that is setting up the table. Extent translation should always be done through the PieceToExtent method.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMaximumGhostLevel (int )</computeroutput> - Set the maximum ghost level that can be requested. This can be used by a reader to make sure an extent request does not go outside the boundaries of the piece&apos;s file.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetMaximumGhostLevel ()</computeroutput> - Set the maximum ghost level that can be requested. This can be used by a reader to make sure an extent request does not go outside the boundaries of the piece&apos;s file.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPieceAvailable (int piece, int available)</computeroutput> - Get/Set whether the given piece is available. Requesting a piece that is not available will produce errors in the pipeline.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetPieceAvailable (int piece)</computeroutput> - Get/Set whether the given piece is available. Requesting a piece that is not available will produce errors in the pipeline.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
