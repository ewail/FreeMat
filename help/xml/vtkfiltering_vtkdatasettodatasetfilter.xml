<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtkdatasettodatasetfilter" kind="page">
    <compoundname>vtkfiltering_vtkdatasettodatasetfilter</compoundname>
    <title>vtkDataSetToDataSetFilter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkDataSetToDataSetFilter is an abstract filter class. Subclasses of vtkDataSetToDataSetFilter take a dataset as input and create a dataset as output. The form of the input geometry is not changed in these filters, only the point attributes (e.g. scalars, vectors, etc.).</para><para>This is an abstract filter type. What that means is that the output of the filter is an abstract type (i.e., vtkDataSet), no matter what the input of the filter is. This can cause problems connecting together filters due to the change in dataset type. (For example, in a series of filters processing vtkPolyData, when a vtkDataSetToDataSetFilter or subclass is introduced into the pipeline, if the filter downstream of it takes vtkPolyData as input, the pipeline connection cannot be made.) To get around this problem, use one of the convenience methods to return a concrete type (e.g., vtkGetPolyDataOutput(), GetStructuredPointsOutput(), etc.).</para><para>To create an instance of class vtkDataSetToDataSetFilter, simply invoke its constructor as follows <verbatim>  obj = vtkDataSetToDataSetFilter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkDataSetToDataSetFilter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkDataSetToDataSetFilter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkDataSetToDataSetFilter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkDataSetToDataSetFilter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInput (vtkDataSet input)</computeroutput> - Specify the input data or filter.  </para></listitem>
<listitem>
<para><computeroutput>vtkDataSet = obj.GetOutput ()</computeroutput> - Get the output of this filter. If output is NULL then input hasn&apos;t been set which is necessary for abstract objects.  </para></listitem>
<listitem>
<para><computeroutput>vtkDataSet = obj.GetOutput (int idx)</computeroutput> - Get the output of this filter. If output is NULL then input hasn&apos;t been set which is necessary for abstract objects.  </para></listitem>
<listitem>
<para><computeroutput>vtkPolyData = obj.GetPolyDataOutput ()</computeroutput> - Get the output as vtkPolyData.  </para></listitem>
<listitem>
<para><computeroutput>vtkStructuredPoints = obj.GetStructuredPointsOutput ()</computeroutput> - Get the output as vtkStructuredPoints.  </para></listitem>
<listitem>
<para><computeroutput>vtkStructuredGrid = obj.GetStructuredGridOutput ()</computeroutput> - Get the output as vtkStructuredGrid.  </para></listitem>
<listitem>
<para><computeroutput>vtkUnstructuredGrid = obj.GetUnstructuredGridOutput ()</computeroutput> - Get the output as vtkUnstructuredGrid.  </para></listitem>
<listitem>
<para><computeroutput>vtkRectilinearGrid = obj.GetRectilinearGridOutput ()</computeroutput> - Get the output as vtkRectilinearGrid.  </para></listitem>
<listitem>
<para><computeroutput>vtkDataSet = obj.GetInput ()</computeroutput> - Get the input data or filter.  </para></listitem>
<listitem>
<para><computeroutput>obj.ComputeInputUpdateExtents (vtkDataObject output)</computeroutput> - By default copy the output update extent to the input  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
