<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="array_permute" kind="page">
    <compoundname>array_permute</compoundname>
    <title>PERMUTE Array Permutation Function</title>
    <detaileddescription>
<para>Section: <ref refid="sec_array_1sec_array" kindref="member">Array Generation and Manipulations</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The <computeroutput>permute</computeroutput> function rearranges the contents of an array according to the specified permutation vector. The syntax for its use is <verbatim>    y = permute(x,p)
</verbatim> where <computeroutput>p</computeroutput> is a permutation vector - i.e., a vector containing the integers <computeroutput>1...ndims(x)</computeroutput> each occuring exactly once. The resulting array <computeroutput>y</computeroutput> contains the same data as the array <computeroutput>x</computeroutput>, but ordered according to the permutation. This function is a generalization of the matrix transpose operation. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>Here we use <computeroutput>permute</computeroutput> to transpose a simple matrix (note that permute also works for sparse matrices):</para><para><verbatim>--&gt; A = [1,2;4,5]

A = 
 1 2 
 4 5 

--&gt; permute(A,[2,1])

ans = 
 1 4 
 2 5 

--&gt; A&apos;

ans = 
 1 4 
 2 5 
</verbatim></para><para>Now we permute a larger n-dimensional array:</para><para><verbatim>--&gt; A = randn(13,5,7,2);
--&gt; size(A)

ans = 
 13  5  7  2 

--&gt; B = permute(A,[3,4,2,1]);
--&gt; size(B)

ans = 
  7  2  5 13 
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
