<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkio_vtkavsucdreader" kind="page">
    <compoundname>vtkio_vtkavsucdreader</compoundname>
    <title>vtkAVSucdReader</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkio_1sec_vtkio" kindref="member">Visualization Toolkit IO Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkAVSucdReader creates an unstructured grid dataset. It reads binary or ASCII files stored in UCD format, with optional data stored at the nodes or at the cells of the model. A cell-based fielddata stores the material id. The class can automatically detect the endian-ness of the binary files.</para><para>To create an instance of class vtkAVSucdReader, simply invoke its constructor as follows <verbatim>  obj = vtkAVSucdReader
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkAVSucdReader has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkAVSucdReader class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkAVSucdReader = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkAVSucdReader = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFileName (string )</computeroutput> - Specify file name of AVS UCD datafile to read  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetFileName ()</computeroutput> - Specify file name of AVS UCD datafile to read  </para></listitem>
<listitem>
<para><computeroutput>obj.SetBinaryFile (int )</computeroutput> - Is the file to be read written in binary format (as opposed to ascii).  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetBinaryFile ()</computeroutput> - Is the file to be read written in binary format (as opposed to ascii).  </para></listitem>
<listitem>
<para><computeroutput>obj.BinaryFileOn ()</computeroutput> - Is the file to be read written in binary format (as opposed to ascii).  </para></listitem>
<listitem>
<para><computeroutput>obj.BinaryFileOff ()</computeroutput> - Is the file to be read written in binary format (as opposed to ascii).  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfCells ()</computeroutput> - Get the total number of cells.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfNodes ()</computeroutput> - Get the total number of nodes.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfNodeFields ()</computeroutput> - Get the number of data fields at the nodes.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfCellFields ()</computeroutput> - Get the number of data fields at the cell centers.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfFields ()</computeroutput> - Get the number of data fields for the model. Unused because VTK has no methods for it.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfNodeComponents ()</computeroutput> - Get the number of data components at the nodes and cells.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfCellComponents ()</computeroutput> - Get the number of data components at the nodes and cells.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetByteOrderToBigEndian ()</computeroutput> - Set/Get the endian-ness of the binary file.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetByteOrderToLittleEndian ()</computeroutput> - Set/Get the endian-ness of the binary file.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetByteOrderAsString ()</computeroutput> - Set/Get the endian-ness of the binary file.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetByteOrder (int )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetByteOrder ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfPointArrays ()</computeroutput> - The following methods allow selective reading of solutions fields. by default, ALL data fields are the nodes and cells are read, but this can be modified.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfCellArrays ()</computeroutput> - The following methods allow selective reading of solutions fields. by default, ALL data fields are the nodes and cells are read, but this can be modified.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetPointArrayName (int index)</computeroutput> - The following methods allow selective reading of solutions fields. by default, ALL data fields are the nodes and cells are read, but this can be modified.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetCellArrayName (int index)</computeroutput> - The following methods allow selective reading of solutions fields. by default, ALL data fields are the nodes and cells are read, but this can be modified.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetPointArrayStatus (string name)</computeroutput> - The following methods allow selective reading of solutions fields. by default, ALL data fields are the nodes and cells are read, but this can be modified.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCellArrayStatus (string name)</computeroutput> - The following methods allow selective reading of solutions fields. by default, ALL data fields are the nodes and cells are read, but this can be modified.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPointArrayStatus (string name, int status)</computeroutput> - The following methods allow selective reading of solutions fields. by default, ALL data fields are the nodes and cells are read, but this can be modified.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCellArrayStatus (string name, int status)</computeroutput> - The following methods allow selective reading of solutions fields. by default, ALL data fields are the nodes and cells are read, but this can be modified.  </para></listitem>
<listitem>
<para><computeroutput>obj.DisableAllCellArrays ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.EnableAllCellArrays ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.DisableAllPointArrays ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.EnableAllPointArrays ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GetCellDataRange (int cellComp, int index, float min, float max)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GetNodeDataRange (int nodeComp, int index, float min, float max)</computeroutput>  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
