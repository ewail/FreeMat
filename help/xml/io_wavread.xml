<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="io_wavread" kind="page">
    <compoundname>io_wavread</compoundname>
    <title>WAVREAD Read a WAV Audio File</title>
    <detaileddescription>
<para>Section: <ref refid="sec_io_1sec_io" kindref="member">Input/Ouput Functions</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The <computeroutput>wavread</computeroutput> function (attempts) to read the contents of a linear PCM audio WAV file. This function could definitely use improvements - it is based on a very simplistic notion of a WAV file. The simplest form for its use is <verbatim>   y = wavread(filename)
</verbatim> where <computeroutput>filename</computeroutput> is the name of the WAV file to read. If no extension is provided, FreeMat will add a &apos;.wav&apos; extension. This loads the data from the WAV file into <computeroutput>y</computeroutput>, and returns it in <computeroutput>double</computeroutput> precision, normalized format. If you want additional information on, for example, the WAV sampling rate or bit depth, you can request it via <verbatim>  [y, SamplingRate, BitDepth] = wavread(filename)
</verbatim> where <computeroutput>SamplingRate</computeroutput> and <computeroutput>BitDepth</computeroutput> are the sampling rate (in Hz) and the bit depth of the original data in the WAV file. If you only want to load part of the WAV file, you can use <verbatim>  [...] = wavread(filename, N)
</verbatim> where <computeroutput>N</computeroutput> indicates the number of samples to read from the file. Alternately, you can indicate a range of samples to load via <verbatim>  [...] = wavread(filename, [N1 N2])
</verbatim> which returns only the indicated samples from each channel in the file. By default, the output format is <computeroutput>double</computeroutput> precision. You can cntrol the format of the output by indicating <verbatim>  [...] = wavread(filename, format)
</verbatim> where <computeroutput>format</computeroutput> is either <computeroutput>&apos;double&apos;</computeroutput> for double precision output, or <computeroutput>&apos;native&apos;</computeroutput> for native precision output (meaning whatever bitdepth that was present in the original file). Finally, you can use the <computeroutput>&apos;size&apos;</computeroutput> flag <verbatim>  y_siz = wavread(filename,&apos;size&apos;)
</verbatim> which returns a vector <computeroutput>[samples channels]</computeroutput> indicating the size of the data present in the WAV file. </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
