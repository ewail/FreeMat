<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="inspection_numel" kind="page">
    <compoundname>inspection_numel</compoundname>
    <title>NUMEL Number of Elements in an Array</title>
    <detaileddescription>
<para>Section: <ref refid="sec_inspection_1sec_inspection" kindref="member">Inspection Functions</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Returns the number of elements in an array <computeroutput>x</computeroutput>, or in a subindex expression. The syntax for its use is either <verbatim>   y = numel(x)
</verbatim> or <verbatim>   y = numel(x,varargin)
</verbatim> Generally, <computeroutput>numel</computeroutput> returns <computeroutput>prod(size(x))</computeroutput>, the number of total elements in <computeroutput>x</computeroutput>. However, you can specify a number of indexing expressions for <computeroutput>varagin</computeroutput> such as <computeroutput>index1, index2, ..., indexm</computeroutput>. In that case, the output of <computeroutput>numel</computeroutput> is <computeroutput>prod(size(x(index1,...,indexm)))</computeroutput>. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>For a <computeroutput>4 x 4 x 3</computeroutput> matrix, the length is <computeroutput>4</computeroutput>, not <computeroutput>48</computeroutput>, as you might expect, but <computeroutput>numel</computeroutput> is <computeroutput>48</computeroutput>.</para><para><verbatim>--&gt; x = rand(4,4,3);
--&gt; length(x)

ans = 
 4 

--&gt; numel(x)

ans = 
 48 
</verbatim></para><para>Here is an example of using <computeroutput>numel</computeroutput> with indexing expressions.</para><para><verbatim>--&gt; numel(x,1:3,1:2,2)

ans = 
 6 
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
