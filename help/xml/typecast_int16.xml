<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="typecast_int16" kind="page">
    <compoundname>typecast_int16</compoundname>
    <title>INT16 Convert to Signed 16-bit Integer</title>
    <detaileddescription>
<para>Section: <ref refid="sec_typecast_1sec_typecast" kindref="member">Type Conversion Functions</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Converts the argument to an signed 16-bit Integer. The syntax for its use is <verbatim>   y = int16(x)
</verbatim> where <computeroutput>x</computeroutput> is an <computeroutput>n</computeroutput>-dimensional numerical array. Conversion follows the saturation rules (e.g., if <computeroutput>x</computeroutput> is outside the normal range for a signed 16-bit integer of <computeroutput>[-32767,32767]</computeroutput>, it is truncated to that range). Note that both <computeroutput>NaN</computeroutput> and <computeroutput>Inf</computeroutput> both map to 0. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>The following piece of code demonstrates several uses of <computeroutput>int16</computeroutput>. First, the routine uses</para><para><verbatim>--&gt; int16(100)

ans = 
 100 

--&gt; int16(-100)

ans = 
 -100 
</verbatim></para><para>In the next example, an integer outside the range of the type is passed in. The result is truncated to the range of the data type.</para><para><verbatim>--&gt; int16(40000)

ans = 
 32767 
</verbatim></para><para>In the next example, a positive double precision argument is passed in. The result is the signed integer that is closest to the argument.</para><para><verbatim>--&gt; int16(pi)

ans = 
 3 
</verbatim></para><para>In the next example, a complex argument is passed in. The result is the signed complex integer that is closest to the argument.</para><para><verbatim>--&gt; int16(5+2*i)

ans = 
   5.0000 +  2.0000i 
</verbatim></para><para>In the next example, a string argument is passed in. The string argument is converted into an integer array corresponding to the ASCII values of each character.</para><para><verbatim>--&gt; int16(&apos;helo&apos;)

ans = 
 104 101 108 111 
</verbatim></para><para>In the last example, a cell-array is passed in. For cell-arrays and structure arrays, the result is an error.</para><para><verbatim>--&gt; int16({4})
Error: Cannot perform type conversions with this type
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
