<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgeovis_vtkgeoimagenode" kind="page">
    <compoundname>vtkgeovis_vtkgeoimagenode</compoundname>
    <title>vtkGeoImageNode</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgeovis_1sec_vtkgeovis" kindref="member">Visualization Toolkit Geo Vis Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkGeoImageNode contains an image tile in a multi-resolution image tree, along with metadata about that image&apos;s extents.</para><para>To create an instance of class vtkGeoImageNode, simply invoke its constructor as follows <verbatim>  obj = vtkGeoImageNode
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkGeoImageNode has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkGeoImageNode class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkGeoImageNode = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkGeoImageNode = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkGeoImageNode = obj.GetChild (int idx)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkGeoImageNode = obj.GetParent ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImageData = obj.GetImage ()</computeroutput> - Get the image tile.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetImage (vtkImageData image)</computeroutput> - Get the image tile.  </para></listitem>
<listitem>
<para><computeroutput>vtkTexture = obj.GetTexture ()</computeroutput> - Get the image tile.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTexture (vtkTexture texture)</computeroutput> - Get the image tile.  </para></listitem>
<listitem>
<para><computeroutput>obj.CropImageForTile (vtkImageData image, double imageLonLatExt, string prefix)</computeroutput> - This crops the image as small as possible while still covering the patch. The Longitude Latitude range may get bigger to reflect the actual size of the image. If prefix is specified, writes the tile to that location.  </para></listitem>
<listitem>
<para><computeroutput>obj.LoadAnImage (string prefix)</computeroutput> - This loads the image from a tile database at the specified location.  </para></listitem>
<listitem>
<para><computeroutput>obj.ShallowCopy (vtkGeoTreeNode src)</computeroutput> - Shallow and Deep copy.  </para></listitem>
<listitem>
<para><computeroutput>obj.DeepCopy (vtkGeoTreeNode src)</computeroutput> - Shallow and Deep copy.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.HasData ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.DeleteData ()</computeroutput> - Deletes the data associated with the node to make this an &quot;empty&quot; node. This is performed when the node has been unused for a certain amount of time.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
