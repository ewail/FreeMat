<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkmergefields" kind="page">
    <compoundname>vtkgraphics_vtkmergefields</compoundname>
    <title>vtkMergeFields</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkMergeFields is used to merge mutliple field into one. The new field is put in the same field data as the original field. For example <verbatim> mf-&gt;SetOutputField(&quot;foo&quot;, vtkMergeFields::POINT_DATA);
 mf-&gt;SetNumberOfComponents(2);
 mf-&gt;Merge(0, &quot;array1&quot;, 1);
 mf-&gt;Merge(1, &quot;array2&quot;, 0);</verbatim> will tell vtkMergeFields to use the 2nd component of array1 and the 1st component of array2 to create a 2 component field called foo. The same can be done using Tcl: <verbatim> mf SetOutputField foo POINT_DATA
 mf Merge 0 array1 1
 mf Merge 1 array2 0

 Field locations: DATA_OBJECT, POINT_DATA, CELL_DATA</verbatim></para><para>To create an instance of class vtkMergeFields, simply invoke its constructor as follows <verbatim>  obj = vtkMergeFields
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkMergeFields has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkMergeFields class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkMergeFields = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkMergeFields = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutputField (string name, int fieldLoc)</computeroutput> - The output field will have the given name and it will be in fieldLoc (the input fields also have to be in fieldLoc).  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutputField (string name, string fieldLoc)</computeroutput> - Helper method used by the other language bindings. Allows the caller to specify arguments as strings instead of enums.Returns an operation id which can later be used to remove the operation.  </para></listitem>
<listitem>
<para><computeroutput>obj.Merge (int component, string arrayName, int sourceComp)</computeroutput> - Add a component (arrayName,sourceComp) to the output field.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetNumberOfComponents (int )</computeroutput> - Set the number of the components in the output field. This has to be set before execution. Default value is 0.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfComponents ()</computeroutput> - Set the number of the components in the output field. This has to be set before execution. Default value is 0.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
