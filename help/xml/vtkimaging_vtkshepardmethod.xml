<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkimaging_vtkshepardmethod" kind="page">
    <compoundname>vtkimaging_vtkshepardmethod</compoundname>
    <title>vtkShepardMethod</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkimaging_1sec_vtkimaging" kindref="member">Visualization Toolkit Imaging Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkShepardMethod is a filter used to visualize unstructured point data using Shepard&apos;s method. The method works by resampling the unstructured points onto a structured points set. The influence functions are described as &quot;inverse distance weighted&quot;. Once the structured points are computed, the usual visualization techniques (e.g., iso-contouring or volume rendering) can be used visualize the structured points.</para><para>To create an instance of class vtkShepardMethod, simply invoke its constructor as follows <verbatim>  obj = vtkShepardMethod
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkShepardMethod has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkShepardMethod class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkShepardMethod = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkShepardMethod = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>double = obj.ComputeModelBounds (double origin[3], double ar[3])</computeroutput> - Compute ModelBounds from input geometry.  </para></listitem>
<listitem>
<para><computeroutput>int = obj. GetSampleDimensions ()</computeroutput> - Specify i-j-k dimensions on which to sample input points.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSampleDimensions (int i, int j, int k)</computeroutput> - Set the i-j-k dimensions on which to sample the distance function.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSampleDimensions (int dim[3])</computeroutput> - Set the i-j-k dimensions on which to sample the distance function.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMaximumDistance (double )</computeroutput> - Specify influence distance of each input point. This distance is a fraction of the length of the diagonal of the sample space. Thus, values of 1.0 will cause each input point to influence all points in the structured point dataset. Values less than 1.0 can improve performance significantly.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetMaximumDistanceMinValue ()</computeroutput> - Specify influence distance of each input point. This distance is a fraction of the length of the diagonal of the sample space. Thus, values of 1.0 will cause each input point to influence all points in the structured point dataset. Values less than 1.0 can improve performance significantly.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetMaximumDistanceMaxValue ()</computeroutput> - Specify influence distance of each input point. This distance is a fraction of the length of the diagonal of the sample space. Thus, values of 1.0 will cause each input point to influence all points in the structured point dataset. Values less than 1.0 can improve performance significantly.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetMaximumDistance ()</computeroutput> - Specify influence distance of each input point. This distance is a fraction of the length of the diagonal of the sample space. Thus, values of 1.0 will cause each input point to influence all points in the structured point dataset. Values less than 1.0 can improve performance significantly.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetModelBounds (double , double , double , double , double , double )</computeroutput> - Specify the position in space to perform the sampling.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetModelBounds (double a[6])</computeroutput> - Specify the position in space to perform the sampling.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetModelBounds ()</computeroutput> - Specify the position in space to perform the sampling.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetNullValue (double )</computeroutput> - Set the Null value for output points not receiving a contribution from the input points.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetNullValue ()</computeroutput> - Set the Null value for output points not receiving a contribution from the input points.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
