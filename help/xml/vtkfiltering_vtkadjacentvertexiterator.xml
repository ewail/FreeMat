<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtkadjacentvertexiterator" kind="page">
    <compoundname>vtkfiltering_vtkadjacentvertexiterator</compoundname>
    <title>vtkAdjacentVertexIterator</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkAdjacentVertexIterator iterates through all vertices adjacent to a vertex, i.e. the vertices which may be reached by traversing an out edge of the source vertex. Use graph-&gt;GetAdjacentVertices(v, it) to initialize the iterator.</para><para>To create an instance of class vtkAdjacentVertexIterator, simply invoke its constructor as follows <verbatim>  obj = vtkAdjacentVertexIterator
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkAdjacentVertexIterator has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkAdjacentVertexIterator class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkAdjacentVertexIterator = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkAdjacentVertexIterator = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Initialize (vtkGraph g, vtkIdType v)</computeroutput> - Initialize the iterator with a graph and vertex.  </para></listitem>
<listitem>
<para><computeroutput>vtkGraph = obj.GetGraph ()</computeroutput> - Get the graph and vertex associated with this iterator.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetVertex ()</computeroutput> - Get the graph and vertex associated with this iterator.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.Next ()</computeroutput> - Whether this iterator has more edges.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.HasNext ()</computeroutput>  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
