<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkrendering_vtktextactor3d" kind="page">
    <compoundname>vtkrendering_vtktextactor3d</compoundname>
    <title>vtkTextActor3D</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkrendering_1sec_vtkrendering" kindref="member">Visualization Toolkit Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The input text is rendered into a buffer, which in turn is used as a texture applied onto a quad (a vtkImageActor is used under the hood). .SECTION Warning This class is experimental at the moment.<itemizedlist>
<listitem><para>The orientation is not optimized, the quad should be oriented, not the text itself when it is rendered in the buffer (we end up with excessively big textures for 45 degrees angles). This will be fixed first.</para></listitem><listitem><para>No checking is done at the moment regarding hardware texture size limits.</para></listitem><listitem><para>Alignment is not supported (soon).</para></listitem><listitem><para>Multiline is not supported.</para></listitem><listitem><para>Need to fix angle out of 0&lt;-&gt;360</para></listitem></itemizedlist>
</para><para>To create an instance of class vtkTextActor3D, simply invoke its constructor as follows <verbatim>  obj = vtkTextActor3D
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkTextActor3D has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkTextActor3D class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkTextActor3D = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkTextActor3D = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInput (string )</computeroutput> - Set the text string to be displayed.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetInput ()</computeroutput> - Set the text string to be displayed.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTextProperty (vtkTextProperty p)</computeroutput> - Set/Get the text property.  </para></listitem>
<listitem>
<para><computeroutput>vtkTextProperty = obj.GetTextProperty ()</computeroutput> - Set/Get the text property.  </para></listitem>
<listitem>
<para><computeroutput>obj.ShallowCopy (vtkProp prop)</computeroutput> - Shallow copy of this text actor. Overloads the virtual vtkProp method.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetBounds ()</computeroutput> - Get the bounds for this Prop3D as (Xmin,Xmax,Ymin,Ymax,Zmin,Zmax). These are the padded-to-power-of-two texture bounds.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetBoundingBox (int bbox[4])</computeroutput> - Get the Freetype-derived real bounding box for the given vtkTextProperty and text string str. Results are returned in the four element bbox int array. This call can be used for sizing other elements.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
