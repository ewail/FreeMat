<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkvolumerendering_vtkvolumeraycastcompositefunction" kind="page">
    <compoundname>vtkvolumerendering_vtkvolumeraycastcompositefunction</compoundname>
    <title>vtkVolumeRayCastCompositeFunction</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkvolumerendering_1sec_vtkvolumerendering" kindref="member">Visualization Toolkit Volume Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkVolumeRayCastCompositeFunction is a ray function that can be used within a vtkVolumeRayCastMapper. This function performs compositing along the ray according to the properties stored in the vtkVolumeProperty for the volume.</para><para>To create an instance of class vtkVolumeRayCastCompositeFunction, simply invoke its constructor as follows <verbatim>  obj = vtkVolumeRayCastCompositeFunction
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkVolumeRayCastCompositeFunction has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkVolumeRayCastCompositeFunction class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkVolumeRayCastCompositeFunction = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkVolumeRayCastCompositeFunction = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCompositeMethod (int )</computeroutput> - Set the CompositeMethod to either Classify First or Interpolate First  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCompositeMethodMinValue ()</computeroutput> - Set the CompositeMethod to either Classify First or Interpolate First  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCompositeMethodMaxValue ()</computeroutput> - Set the CompositeMethod to either Classify First or Interpolate First  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCompositeMethod ()</computeroutput> - Set the CompositeMethod to either Classify First or Interpolate First  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCompositeMethodToInterpolateFirst ()</computeroutput> - Set the CompositeMethod to either Classify First or Interpolate First  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCompositeMethodToClassifyFirst ()</computeroutput> - Set the CompositeMethod to either Classify First or Interpolate First  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetCompositeMethodAsString (void )</computeroutput> - Set the CompositeMethod to either Classify First or Interpolate First  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
