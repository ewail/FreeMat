<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtkimplicitdataset" kind="page">
    <compoundname>vtkfiltering_vtkimplicitdataset</compoundname>
    <title>vtkImplicitDataSet</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkImplicitDataSet treats any type of dataset as if it were an implicit function. This means it computes a function value and gradient. vtkImplicitDataSet is a concrete implementation of vtkImplicitFunction.</para><para>vtkImplicitDataSet computes the function (at the point x) by performing cell interpolation. That is, it finds the cell containing x, and then uses the cell&apos;s interpolation functions to compute an interpolated scalar value at x. (A similar approach is used to find the gradient, if requested.) Points outside of the dataset are assigned the value of the ivar OutValue, and the gradient value OutGradient.</para><para>To create an instance of class vtkImplicitDataSet, simply invoke its constructor as follows <verbatim>  obj = vtkImplicitDataSet
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkImplicitDataSet has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkImplicitDataSet class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImplicitDataSet = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImplicitDataSet = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>long = obj.GetMTime ()</computeroutput> - Return the MTime also considering the DataSet dependency.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.EvaluateFunction (double x[3])</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>double = obj.EvaluateFunction (double x, double y, double z)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.EvaluateGradient (double x[3], double n[3])</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDataSet (vtkDataSet )</computeroutput> - Set / get the dataset used for the implicit function evaluation.  </para></listitem>
<listitem>
<para><computeroutput>vtkDataSet = obj.GetDataSet ()</computeroutput> - Set / get the dataset used for the implicit function evaluation.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutValue (double )</computeroutput> - Set / get the function value to use for points outside of the dataset.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetOutValue ()</computeroutput> - Set / get the function value to use for points outside of the dataset.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutGradient (double , double , double )</computeroutput> - Set / get the function gradient to use for points outside of the dataset.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutGradient (double a[3])</computeroutput> - Set / get the function gradient to use for points outside of the dataset.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetOutGradient ()</computeroutput> - Set / get the function gradient to use for points outside of the dataset.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
