<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkimplicittexturecoords" kind="page">
    <compoundname>vtkgraphics_vtkimplicittexturecoords</compoundname>
    <title>vtkImplicitTextureCoords</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkImplicitTextureCoords is a filter to generate 1D, 2D, or 3D texture coordinates from one, two, or three implicit functions, respectively. In combinations with a vtkBooleanTexture map (or another texture map of your own creation), the texture coordinates can be used to highlight (via color or intensity) or cut (via transparency) dataset geometry without any complex geometric processing. (Note: the texture coordinates are referred to as r-s-t coordinates.)</para><para>The texture coordinates are automatically normalized to lie between (0,1). Thus, no matter what the implicit functions evaluate to, the resulting texture coordinates lie between (0,1), with the zero implicit function value mapped to the 0.5 texture coordinates value. Depending upon the maximum negative/positive implicit function values, the full (0,1) range may not be occupied (i.e., the positive/negative ranges are mapped using the same scale factor).</para><para>A boolean variable InvertTexture is available to flip the texture coordinates around 0.5 (value 1.0 becomes 0.0, 0.25-&gt;0.75). This is equivalent to flipping the texture map (but a whole lot easier).</para><para>To create an instance of class vtkImplicitTextureCoords, simply invoke its constructor as follows <verbatim>  obj = vtkImplicitTextureCoords
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkImplicitTextureCoords has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkImplicitTextureCoords class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImplicitTextureCoords = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImplicitTextureCoords = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetRFunction (vtkImplicitFunction )</computeroutput> - Specify an implicit function to compute the r texture coordinate.  </para></listitem>
<listitem>
<para><computeroutput>vtkImplicitFunction = obj.GetRFunction ()</computeroutput> - Specify an implicit function to compute the r texture coordinate.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSFunction (vtkImplicitFunction )</computeroutput> - Specify an implicit function to compute the s texture coordinate.  </para></listitem>
<listitem>
<para><computeroutput>vtkImplicitFunction = obj.GetSFunction ()</computeroutput> - Specify an implicit function to compute the s texture coordinate.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTFunction (vtkImplicitFunction )</computeroutput> - Specify an implicit function to compute the t texture coordinate.  </para></listitem>
<listitem>
<para><computeroutput>vtkImplicitFunction = obj.GetTFunction ()</computeroutput> - Specify an implicit function to compute the t texture coordinate.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFlipTexture (int )</computeroutput> - If enabled, this will flip the sense of inside and outside the implicit function (i.e., a rotation around the r-s-t=0.5 axis).  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetFlipTexture ()</computeroutput> - If enabled, this will flip the sense of inside and outside the implicit function (i.e., a rotation around the r-s-t=0.5 axis).  </para></listitem>
<listitem>
<para><computeroutput>obj.FlipTextureOn ()</computeroutput> - If enabled, this will flip the sense of inside and outside the implicit function (i.e., a rotation around the r-s-t=0.5 axis).  </para></listitem>
<listitem>
<para><computeroutput>obj.FlipTextureOff ()</computeroutput> - If enabled, this will flip the sense of inside and outside the implicit function (i.e., a rotation around the r-s-t=0.5 axis).  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
