<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkrendering_vtklabelplacer" kind="page">
    <compoundname>vtkrendering_vtklabelplacer</compoundname>
    <title>vtkLabelPlacer</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkrendering_1sec_vtkrendering" kindref="member">Visualization Toolkit Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para><bold>This class is deprecated and will be removed from VTK in a future release. Use vtkLabelPlacementMapper instead.</bold></para><para>This should probably be a mapper unto itself (given that the polydata output could be large and will realistically always be iterated over exactly once before being tossed for the next frame of the render).</para><para>In any event, it takes as input one (or more, eventually) vtkLabelHierarchies that represent prioritized lists of labels sorted by their placement in space. As output, it provides vtkPolyData containing only VTK_QUAD cells, each representing a single label from the input. Each quadrilateral has cell data indicating what label in the input it corresponds to (via an array named &quot;LabelId&quot;).</para><para>To create an instance of class vtkLabelPlacer, simply invoke its constructor as follows <verbatim>  obj = vtkLabelPlacer
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkLabelPlacer has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkLabelPlacer class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkLabelPlacer = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkLabelPlacer = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkRenderer = obj.GetRenderer ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetRenderer (vtkRenderer )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCoordinate = obj.GetAnchorTransform ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGravity (int gravity)</computeroutput> - The placement of the label relative to the anchor point.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetGravity ()</computeroutput> - The placement of the label relative to the anchor point.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMaximumLabelFraction (double )</computeroutput> - The maximum amount of screen space labels can take up before placement terminates.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetMaximumLabelFractionMinValue ()</computeroutput> - The maximum amount of screen space labels can take up before placement terminates.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetMaximumLabelFractionMaxValue ()</computeroutput> - The maximum amount of screen space labels can take up before placement terminates.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetMaximumLabelFraction ()</computeroutput> - The maximum amount of screen space labels can take up before placement terminates.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetIteratorType (int )</computeroutput> - The type of iterator used when traversing the labels. May be vtkLabelHierarchy::FRUSTUM or vtkLabelHierarchy::FULL_SORT.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetIteratorType ()</computeroutput> - The type of iterator used when traversing the labels. May be vtkLabelHierarchy::FRUSTUM or vtkLabelHierarchy::FULL_SORT.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetUseUnicodeStrings (bool )</computeroutput> - Set whether, or not, to use unicode strings.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetUseUnicodeStrings ()</computeroutput> - Set whether, or not, to use unicode strings.  </para></listitem>
<listitem>
<para><computeroutput>obj.UseUnicodeStringsOn ()</computeroutput> - Set whether, or not, to use unicode strings.  </para></listitem>
<listitem>
<para><computeroutput>obj.UseUnicodeStringsOff ()</computeroutput> - Set whether, or not, to use unicode strings.  </para></listitem>
<listitem>
<para><computeroutput>long = obj.GetMTime ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetPositionsAsNormals ()</computeroutput> - Use label anchor point coordinates as normal vectors and eliminate those pointing away from the camera. Valid only when points are on a sphere centered at the origin (such as a 3D geographic view). Off by default.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPositionsAsNormals (bool )</computeroutput> - Use label anchor point coordinates as normal vectors and eliminate those pointing away from the camera. Valid only when points are on a sphere centered at the origin (such as a 3D geographic view). Off by default.  </para></listitem>
<listitem>
<para><computeroutput>obj.PositionsAsNormalsOn ()</computeroutput> - Use label anchor point coordinates as normal vectors and eliminate those pointing away from the camera. Valid only when points are on a sphere centered at the origin (such as a 3D geographic view). Off by default.  </para></listitem>
<listitem>
<para><computeroutput>obj.PositionsAsNormalsOff ()</computeroutput> - Use label anchor point coordinates as normal vectors and eliminate those pointing away from the camera. Valid only when points are on a sphere centered at the origin (such as a 3D geographic view). Off by default.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetGeneratePerturbedLabelSpokes ()</computeroutput> - Enable drawing spokes (lines) to anchor point coordinates that were perturbed for being coincident with other anchor point coordinates.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGeneratePerturbedLabelSpokes (bool )</computeroutput> - Enable drawing spokes (lines) to anchor point coordinates that were perturbed for being coincident with other anchor point coordinates.  </para></listitem>
<listitem>
<para><computeroutput>obj.GeneratePerturbedLabelSpokesOn ()</computeroutput> - Enable drawing spokes (lines) to anchor point coordinates that were perturbed for being coincident with other anchor point coordinates.  </para></listitem>
<listitem>
<para><computeroutput>obj.GeneratePerturbedLabelSpokesOff ()</computeroutput> - Enable drawing spokes (lines) to anchor point coordinates that were perturbed for being coincident with other anchor point coordinates.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetUseDepthBuffer ()</computeroutput> - Use the depth buffer to test each label to see if it should not be displayed if it would be occluded by other objects in the scene. Off by default.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetUseDepthBuffer (bool )</computeroutput> - Use the depth buffer to test each label to see if it should not be displayed if it would be occluded by other objects in the scene. Off by default.  </para></listitem>
<listitem>
<para><computeroutput>obj.UseDepthBufferOn ()</computeroutput> - Use the depth buffer to test each label to see if it should not be displayed if it would be occluded by other objects in the scene. Off by default.  </para></listitem>
<listitem>
<para><computeroutput>obj.UseDepthBufferOff ()</computeroutput> - Use the depth buffer to test each label to see if it should not be displayed if it would be occluded by other objects in the scene. Off by default.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetOutputTraversedBounds ()</computeroutput> - In the second output, output the geometry of the traversed octree nodes.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutputTraversedBounds (bool )</computeroutput> - In the second output, output the geometry of the traversed octree nodes.  </para></listitem>
<listitem>
<para><computeroutput>obj.OutputTraversedBoundsOn ()</computeroutput> - In the second output, output the geometry of the traversed octree nodes.  </para></listitem>
<listitem>
<para><computeroutput>obj.OutputTraversedBoundsOff ()</computeroutput> - In the second output, output the geometry of the traversed octree nodes.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetOutputCoordinateSystem ()</computeroutput> - Set/get the coordinate system used for output labels. The output datasets may have point coordinates reported in the world space or display space.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutputCoordinateSystem (int )</computeroutput> - Set/get the coordinate system used for output labels. The output datasets may have point coordinates reported in the world space or display space.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetOutputCoordinateSystemMinValue ()</computeroutput> - Set/get the coordinate system used for output labels. The output datasets may have point coordinates reported in the world space or display space.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetOutputCoordinateSystemMaxValue ()</computeroutput> - Set/get the coordinate system used for output labels. The output datasets may have point coordinates reported in the world space or display space.  </para></listitem>
<listitem>
<para><computeroutput>obj.OutputCoordinateSystemWorld ()</computeroutput> - Set/get the coordinate system used for output labels. The output datasets may have point coordinates reported in the world space or display space.  </para></listitem>
<listitem>
<para><computeroutput>obj.OutputCoordinateSystemDisplay ()</computeroutput>  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
