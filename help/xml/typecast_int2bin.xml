<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="typecast_int2bin" kind="page">
    <compoundname>typecast_int2bin</compoundname>
    <title>INT2BIN Convert Integer Arrays to Binary</title>
    <detaileddescription>
<para>Section: <ref refid="sec_typecast_1sec_typecast" kindref="member">Type Conversion Functions</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Computes the binary decomposition of an integer array to the specified number of bits. The general syntax for its use is <verbatim>   y = int2bin(x,n)
</verbatim> where <computeroutput>x</computeroutput> is a multi-dimensional integer array, and <computeroutput>n</computeroutput> is the number of bits to expand it to. The output array <computeroutput>y</computeroutput> has one extra dimension to it than the input. The bits are expanded along this extra dimension. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>The following piece of code demonstrates various uses of the int2bin function. First the simplest example:</para><para><verbatim>--&gt; A = [2;5;6;2]

A = 
 2 
 5 
 6 
 2 

--&gt; int2bin(A,8)

ans = 
 0 0 0 0 0 0 1 0 
 0 0 0 0 0 1 0 1 
 0 0 0 0 0 1 1 0 
 0 0 0 0 0 0 1 0 

--&gt; A = [1;2;-5;2]

A = 
  1 
  2 
 -5 
  2 

--&gt; int2bin(A,8)

ans = 
 0 0 0 0 0 0 0 1 
 0 0 0 0 0 0 1 0 
 1 1 1 1 1 0 1 1 
 0 0 0 0 0 0 1 0 
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
