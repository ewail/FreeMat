<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtkcone" kind="page">
    <compoundname>vtkfiltering_vtkcone</compoundname>
    <title>vtkCone</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkCone computes the implicit function and function gradient for a cone. vtkCone is a concrete implementation of vtkImplicitFunction. The cone vertex is located at the origin with axis of rotation coincident with x-axis. (Use the superclass&apos; vtkImplicitFunction transformation matrix if necessary to reposition.) The angle specifies the angle between the axis of rotation and the side of the cone.</para><para>To create an instance of class vtkCone, simply invoke its constructor as follows <verbatim>  obj = vtkCone
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkCone has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkCone class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCone = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCone = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>double = obj.EvaluateFunction (double x[3])</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>double = obj.EvaluateFunction (double x, double y, double z)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.EvaluateGradient (double x[3], double g[3])</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetAngle (double )</computeroutput> - Set/Get the cone angle (expressed in degrees).  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetAngleMinValue ()</computeroutput> - Set/Get the cone angle (expressed in degrees).  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetAngleMaxValue ()</computeroutput> - Set/Get the cone angle (expressed in degrees).  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetAngle ()</computeroutput> - Set/Get the cone angle (expressed in degrees).  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
