<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="class_subsasgn" kind="page">
    <compoundname>class_subsasgn</compoundname>
    <title>SUBSASGN Overloaded Class Assignment</title>
    <detaileddescription>
<para>Section: <ref refid="sec_class_1sec_class" kindref="member">Object Oriented Programming</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>This method is called for expressions of the form <verbatim>  a(b) = c, a{b} = c, a.b = c
</verbatim> and overloading the <computeroutput>subsasgn</computeroutput> method can allow you to define the meaning of these expressions for objects of class <computeroutput>a</computeroutput>. These expressions are mapped to a call of the form <verbatim>  a = subsasgn(a,s,b)
</verbatim> where <computeroutput>s</computeroutput> is a structure array with two fields. The first field is <itemizedlist>
<listitem>
<para><computeroutput>type</computeroutput> is a string containing either <computeroutput>&apos;()&apos;</computeroutput> or <computeroutput>&apos;{}&apos;</computeroutput> or <computeroutput>&apos;.&apos;</computeroutput> depending on the form of the call.  </para></listitem>
<listitem>
<para><computeroutput>subs</computeroutput> is a cell array or string containing the the subscript information.  </para></listitem>
</itemizedlist>
When multiple indexing experssions are combined together such as <computeroutput>a(5).foo{:} = b</computeroutput>, the <computeroutput>s</computeroutput> array contains the following entries <verbatim>  s(1).type = &apos;()&apos;  s(1).subs = {5}
  s(2).type = &apos;.&apos;   s(2).subs = &apos;foo&apos;
  s(3).type = &apos;{}&apos;  s(3).subs = &apos;:&apos;
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
