<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkio_vtkparticlereader" kind="page">
    <compoundname>vtkio_vtkparticlereader</compoundname>
    <title>vtkParticleReader</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkio_1sec_vtkio" kindref="member">Visualization Toolkit IO Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkParticleReader reads either a binary or a text file of particles. Each particle can have associated with it an optional scalar value. So the format is: x, y, z, scalar (all floats or doubles). The text file can consist of a comma delimited set of values. In most cases vtkParticleReader can automatically determine whether the file is text or binary. The data can be either float or double. Progress updates are provided. With respect to binary files, random access into the file to read pieces is supported.</para><para>To create an instance of class vtkParticleReader, simply invoke its constructor as follows <verbatim>  obj = vtkParticleReader
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkParticleReader has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkParticleReader class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkParticleReader = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkParticleReader = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFileName (string )</computeroutput> - Specify file name.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetFileName ()</computeroutput> - Specify file name.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDataByteOrderToBigEndian ()</computeroutput> - These methods should be used instead of the SwapBytes methods. They indicate the byte ordering of the file you are trying to read in. These methods will then either swap or not swap the bytes depending on the byte ordering of the machine it is being run on. For example, reading in a BigEndian file on a BigEndian machine will result in no swapping. Trying to read the same file on a LittleEndian machine will result in swapping. As a quick note most UNIX machines are BigEndian while PC&apos;s and VAX tend to be LittleEndian. So if the file you are reading in was generated on a VAX or PC, SetDataByteOrderToLittleEndian otherwise SetDataByteOrderToBigEndian. Not used when reading text files.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDataByteOrderToLittleEndian ()</computeroutput> - These methods should be used instead of the SwapBytes methods. They indicate the byte ordering of the file you are trying to read in. These methods will then either swap or not swap the bytes depending on the byte ordering of the machine it is being run on. For example, reading in a BigEndian file on a BigEndian machine will result in no swapping. Trying to read the same file on a LittleEndian machine will result in swapping. As a quick note most UNIX machines are BigEndian while PC&apos;s and VAX tend to be LittleEndian. So if the file you are reading in was generated on a VAX or PC, SetDataByteOrderToLittleEndian otherwise SetDataByteOrderToBigEndian. Not used when reading text files.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetDataByteOrder ()</computeroutput> - These methods should be used instead of the SwapBytes methods. They indicate the byte ordering of the file you are trying to read in. These methods will then either swap or not swap the bytes depending on the byte ordering of the machine it is being run on. For example, reading in a BigEndian file on a BigEndian machine will result in no swapping. Trying to read the same file on a LittleEndian machine will result in swapping. As a quick note most UNIX machines are BigEndian while PC&apos;s and VAX tend to be LittleEndian. So if the file you are reading in was generated on a VAX or PC, SetDataByteOrderToLittleEndian otherwise SetDataByteOrderToBigEndian. Not used when reading text files.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDataByteOrder (int )</computeroutput> - These methods should be used instead of the SwapBytes methods. They indicate the byte ordering of the file you are trying to read in. These methods will then either swap or not swap the bytes depending on the byte ordering of the machine it is being run on. For example, reading in a BigEndian file on a BigEndian machine will result in no swapping. Trying to read the same file on a LittleEndian machine will result in swapping. As a quick note most UNIX machines are BigEndian while PC&apos;s and VAX tend to be LittleEndian. So if the file you are reading in was generated on a VAX or PC, SetDataByteOrderToLittleEndian otherwise SetDataByteOrderToBigEndian. Not used when reading text files.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetDataByteOrderAsString ()</computeroutput> - These methods should be used instead of the SwapBytes methods. They indicate the byte ordering of the file you are trying to read in. These methods will then either swap or not swap the bytes depending on the byte ordering of the machine it is being run on. For example, reading in a BigEndian file on a BigEndian machine will result in no swapping. Trying to read the same file on a LittleEndian machine will result in swapping. As a quick note most UNIX machines are BigEndian while PC&apos;s and VAX tend to be LittleEndian. So if the file you are reading in was generated on a VAX or PC, SetDataByteOrderToLittleEndian otherwise SetDataByteOrderToBigEndian. Not used when reading text files.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSwapBytes (int )</computeroutput> - Set/Get the byte swapping to explicitly swap the bytes of a file. Not used when reading text files.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetSwapBytes ()</computeroutput> - Set/Get the byte swapping to explicitly swap the bytes of a file. Not used when reading text files.  </para></listitem>
<listitem>
<para><computeroutput>obj.SwapBytesOn ()</computeroutput> - Set/Get the byte swapping to explicitly swap the bytes of a file. Not used when reading text files.  </para></listitem>
<listitem>
<para><computeroutput>obj.SwapBytesOff ()</computeroutput> - Set/Get the byte swapping to explicitly swap the bytes of a file. Not used when reading text files.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetHasScalar (int )</computeroutput> - Default: 1. If 1 then each particle has a value associated with it.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetHasScalar ()</computeroutput> - Default: 1. If 1 then each particle has a value associated with it.  </para></listitem>
<listitem>
<para><computeroutput>obj.HasScalarOn ()</computeroutput> - Default: 1. If 1 then each particle has a value associated with it.  </para></listitem>
<listitem>
<para><computeroutput>obj.HasScalarOff ()</computeroutput> - Default: 1. If 1 then each particle has a value associated with it.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFileType (int )</computeroutput> - Get/Set the file type. The options are:<itemizedlist>
<listitem><para>FILE_TYPE_IS_UNKNOWN (default) the class will attempt to determine the file type. If this fails then you should set the file type yourself.</para></listitem><listitem><para>FILE_TYPE_IS_TEXT the file type is text.</para></listitem><listitem><para>FILE_TYPE_IS_BINARY the file type is binary.  </para></listitem></itemizedlist>
</para></listitem>
<listitem>
<para><computeroutput>int = obj.GetFileTypeMinValue ()</computeroutput> - Get/Set the file type. The options are:<itemizedlist>
<listitem><para>FILE_TYPE_IS_UNKNOWN (default) the class will attempt to determine the file type. If this fails then you should set the file type yourself.</para></listitem><listitem><para>FILE_TYPE_IS_TEXT the file type is text.</para></listitem><listitem><para>FILE_TYPE_IS_BINARY the file type is binary.  </para></listitem></itemizedlist>
</para></listitem>
<listitem>
<para><computeroutput>int = obj.GetFileTypeMaxValue ()</computeroutput> - Get/Set the file type. The options are:<itemizedlist>
<listitem><para>FILE_TYPE_IS_UNKNOWN (default) the class will attempt to determine the file type. If this fails then you should set the file type yourself.</para></listitem><listitem><para>FILE_TYPE_IS_TEXT the file type is text.</para></listitem><listitem><para>FILE_TYPE_IS_BINARY the file type is binary.  </para></listitem></itemizedlist>
</para></listitem>
<listitem>
<para><computeroutput>int = obj.GetFileType ()</computeroutput> - Get/Set the file type. The options are:<itemizedlist>
<listitem><para>FILE_TYPE_IS_UNKNOWN (default) the class will attempt to determine the file type. If this fails then you should set the file type yourself.</para></listitem><listitem><para>FILE_TYPE_IS_TEXT the file type is text.</para></listitem><listitem><para>FILE_TYPE_IS_BINARY the file type is binary.  </para></listitem></itemizedlist>
</para></listitem>
<listitem>
<para><computeroutput>obj.SetFileTypeToUnknown ()</computeroutput> - Get/Set the file type. The options are:<itemizedlist>
<listitem><para>FILE_TYPE_IS_UNKNOWN (default) the class will attempt to determine the file type. If this fails then you should set the file type yourself.</para></listitem><listitem><para>FILE_TYPE_IS_TEXT the file type is text.</para></listitem><listitem><para>FILE_TYPE_IS_BINARY the file type is binary.  </para></listitem></itemizedlist>
</para></listitem>
<listitem>
<para><computeroutput>obj.SetFileTypeToText ()</computeroutput> - Get/Set the file type. The options are:<itemizedlist>
<listitem><para>FILE_TYPE_IS_UNKNOWN (default) the class will attempt to determine the file type. If this fails then you should set the file type yourself.</para></listitem><listitem><para>FILE_TYPE_IS_TEXT the file type is text.</para></listitem><listitem><para>FILE_TYPE_IS_BINARY the file type is binary.  </para></listitem></itemizedlist>
</para></listitem>
<listitem>
<para><computeroutput>obj.SetFileTypeToBinary ()</computeroutput> - Get/Set the data type. The options are:<itemizedlist>
<listitem><para>VTK_FLOAT (default) single precision floating point.</para></listitem><listitem><para>VTK_DOUBLE double precision floating point.  </para></listitem></itemizedlist>
</para></listitem>
<listitem>
<para><computeroutput>obj.SetDataType (int )</computeroutput> - Get/Set the data type. The options are:<itemizedlist>
<listitem><para>VTK_FLOAT (default) single precision floating point.</para></listitem><listitem><para>VTK_DOUBLE double precision floating point.  </para></listitem></itemizedlist>
</para></listitem>
<listitem>
<para><computeroutput>int = obj.GetDataTypeMinValue ()</computeroutput> - Get/Set the data type. The options are:<itemizedlist>
<listitem><para>VTK_FLOAT (default) single precision floating point.</para></listitem><listitem><para>VTK_DOUBLE double precision floating point.  </para></listitem></itemizedlist>
</para></listitem>
<listitem>
<para><computeroutput>int = obj.GetDataTypeMaxValue ()</computeroutput> - Get/Set the data type. The options are:<itemizedlist>
<listitem><para>VTK_FLOAT (default) single precision floating point.</para></listitem><listitem><para>VTK_DOUBLE double precision floating point.  </para></listitem></itemizedlist>
</para></listitem>
<listitem>
<para><computeroutput>int = obj.GetDataType ()</computeroutput> - Get/Set the data type. The options are:<itemizedlist>
<listitem><para>VTK_FLOAT (default) single precision floating point.</para></listitem><listitem><para>VTK_DOUBLE double precision floating point.  </para></listitem></itemizedlist>
</para></listitem>
<listitem>
<para><computeroutput>obj.SetDataTypeToFloat ()</computeroutput> - Get/Set the data type. The options are:<itemizedlist>
<listitem><para>VTK_FLOAT (default) single precision floating point.</para></listitem><listitem><para>VTK_DOUBLE double precision floating point.  </para></listitem></itemizedlist>
</para></listitem>
<listitem>
<para><computeroutput>obj.SetDataTypeToDouble ()</computeroutput>  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
