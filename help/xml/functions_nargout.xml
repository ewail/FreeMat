<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="functions_nargout" kind="page">
    <compoundname>functions_nargout</compoundname>
    <title>NARGOUT Number of Output Arguments</title>
    <detaileddescription>
<para>Section: <ref refid="sec_functions_1sec_functions" kindref="member">Functions and Scripts</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The <computeroutput>nargout</computeroutput> function computes the number of return values requested from a function when it was called. The general syntax for its use <verbatim>   y = nargout
</verbatim> FreeMat allows for fewer return values to be requested from a function than were declared, and <computeroutput>nargout</computeroutput> can be used to determine exactly what subset of the functions outputs are required.</para><para>You can also use <computeroutput>nargout</computeroutput> on a function handle to return the number of input arguments expected by the function <verbatim>  y = nargout(fun)
</verbatim> where <computeroutput>fun</computeroutput> is the name of the function (e.g. <computeroutput>&apos;sin&apos;</computeroutput>) or a function handle. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>Here is a function that is declared to return five values, and that simply prints the value of <computeroutput>nargout</computeroutput> each time it is called.</para><para><verbatim>     nargouttest.m
</verbatim></para><para><verbatim>function [a1,a2,a3,a4,a5] = nargouttest
  printf(&apos;nargout = %d\n&apos;,nargout);
  a1 = 1; a2 = 2; a3 = 3; a4 = 4; a5 = 5;
</verbatim></para><para><verbatim>--&gt; a1 = nargouttest
nargout = 1

a1 = 
 1 

--&gt; [a1,a2] = nargouttest
nargout = 2
a1 = 
 1 

a2 = 
 2 

--&gt; [a1,a2,a3] = nargouttest
nargout = 3
a1 = 
 1 

a2 = 
 2 

a3 = 
 3 

--&gt; [a1,a2,a3,a4,a5] = nargouttest
nargout = 5
a1 = 
 1 

a2 = 
 2 

a3 = 
 3 

a4 = 
 4 

a5 = 
 5 

--&gt; nargout(&apos;sin&apos;)

ans = 
 1 

--&gt; y = @sin

y = 
 @sin
--&gt; nargout(y)

ans = 
 1 
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
