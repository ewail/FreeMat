<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkwidgets_vtkpointhandlerepresentation2d" kind="page">
    <compoundname>vtkwidgets_vtkpointhandlerepresentation2d</compoundname>
    <title>vtkPointHandleRepresentation2D</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkwidgets_1sec_vtkwidgets" kindref="member">Visualization Toolkit Widget Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>This class is used to represent a vtkHandleWidget. It represents a position in 2D world coordinates using a x-y cursor (the cursor defined by an instance of vtkPolyData and generated by a vtkPolyDataAlgorithm).</para><para>To create an instance of class vtkPointHandleRepresentation2D, simply invoke its constructor as follows <verbatim>  obj = vtkPointHandleRepresentation2D
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkPointHandleRepresentation2D has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkPointHandleRepresentation2D class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>vtkPointHandleRepresentation2D = obj.NewInstance ()</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>vtkPointHandleRepresentation2D = obj.SafeDownCast (vtkObject o)</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCursorShape (vtkPolyData cursorShape)</computeroutput> - Specify the cursor shape with an instance of vtkPolyData. Note that shape is assumed to be defined in the display coordinate system. By default a vtkCursor2D shape is used.  </para></listitem>
<listitem>
<para><computeroutput>vtkPolyData = obj.GetCursorShape ()</computeroutput> - Specify the cursor shape with an instance of vtkPolyData. Note that shape is assumed to be defined in the display coordinate system. By default a vtkCursor2D shape is used.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDisplayPosition (double xyz[3])</computeroutput> - Set/Get the position of the point in display coordinates. This overloads the superclasses SetDisplayPosition in order to set the focal point of the cursor.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetProperty (vtkProperty2D )</computeroutput> - Set/Get the handle properties when unselected and selected.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSelectedProperty (vtkProperty2D )</computeroutput> - Set/Get the handle properties when unselected and selected.  </para></listitem>
<listitem>
<para><computeroutput>vtkProperty2D = obj.GetProperty ()</computeroutput> - Set/Get the handle properties when unselected and selected.  </para></listitem>
<listitem>
<para><computeroutput>vtkProperty2D = obj.GetSelectedProperty ()</computeroutput> - Set/Get the handle properties when unselected and selected.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetBounds ()</computeroutput> - Subclasses of vtkPointHandleRepresentation2D must implement these methods. These are the methods that the widget and its representation use to communicate with each other.  </para></listitem>
<listitem>
<para><computeroutput>obj.BuildRepresentation ()</computeroutput> - Subclasses of vtkPointHandleRepresentation2D must implement these methods. These are the methods that the widget and its representation use to communicate with each other.  </para></listitem>
<listitem>
<para><computeroutput>obj.StartWidgetInteraction (double eventPos[2])</computeroutput> - Subclasses of vtkPointHandleRepresentation2D must implement these methods. These are the methods that the widget and its representation use to communicate with each other.  </para></listitem>
<listitem>
<para><computeroutput>obj.WidgetInteraction (double eventPos[2])</computeroutput> - Subclasses of vtkPointHandleRepresentation2D must implement these methods. These are the methods that the widget and its representation use to communicate with each other.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.ComputeInteractionState (int X, int Y, int modify)</computeroutput> - Subclasses of vtkPointHandleRepresentation2D must implement these methods. These are the methods that the widget and its representation use to communicate with each other.  </para></listitem>
<listitem>
<para><computeroutput>obj.ShallowCopy (vtkProp prop)</computeroutput> - Methods to make this class behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>obj.DeepCopy (vtkProp prop)</computeroutput> - Methods to make this class behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetActors2D (vtkPropCollection )</computeroutput> - Methods to make this class behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>obj.ReleaseGraphicsResources (vtkWindow )</computeroutput> - Methods to make this class behave as a vtkProp.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOverlay (vtkViewport viewport)</computeroutput> - Methods to make this class behave as a vtkProp.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
