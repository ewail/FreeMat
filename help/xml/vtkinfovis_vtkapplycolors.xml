<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkinfovis_vtkapplycolors" kind="page">
    <compoundname>vtkinfovis_vtkapplycolors</compoundname>
    <title>vtkApplyColors</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkinfovis_1sec_vtkinfovis" kindref="member">Visualization Toolkit Infovis Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkApplyColors performs a coloring of the dataset using default colors, lookup tables, annotations, and/or a selection. The output is a four-component vtkUnsignedCharArray containing RGBA tuples for each element in the dataset. The first input is the dataset to be colored, which may be a vtkTable, vtkGraph subclass, or vtkDataSet subclass. The API of this algorithm refers to &quot;points&quot; and &quot;cells&quot;. For vtkGraph, the &quot;points&quot; refer to the graph vertices and &quot;cells&quot; refer to graph edges. For vtkTable, &quot;points&quot; refer to table rows. For vtkDataSet subclasses, the meaning is obvious.</para><para>The second (optional) input is a vtkAnnotationLayers object, which stores a list of annotation layers, with each layer holding a list of vtkAnnotation objects. The annotation specifies a subset of data along with other properties, including color. For annotations with color properties, this algorithm will use the color to color elements, using a &quot;top one wins&quot; strategy.</para><para>The third (optional) input is a vtkSelection object, meant for specifying the current selection. You can control the color of the selection.</para><para>The algorithm takes two input arrays, specified with SetInputArrayToProcess(0, 0, 0, vtkDataObject::FIELD_ASSOCIATION_POINTS, name) and SetInputArrayToProcess(1, 0, 0, vtkDataObject::FIELD_ASSOCIATION_CELLS, name). These set the point and cell data arrays to use to color the data with the associated lookup table. For vtkGraph, vtkTable inputs, you would use FIELD_ASSOCIATION_VERTICES, FIELD_ASSOCIATION_EDGES, or FIELD_ASSOCIATION_ROWS as appropriate.</para><para>To use the color array generated here, you should do the following:</para><para>mapper-&gt;SetScalarModeToUseCellFieldData(); mapper-&gt;SelectColorArray(&quot;vtkApplyColors color&quot;); mapper-&gt;SetScalarVisibility(true);</para><para>Colors are assigned with the following priorities: <orderedlist>
<listitem>
<para>If an item is part of the selection, it is colored with that color. </para></listitem>
<listitem>
<para>Otherwise, if the item is part of an annotation, it is colored with the color of the final (top) annotation in the set of layers. </para></listitem>
<listitem>
<para>Otherwise, if the lookup table is used, it is colored using the lookup table color for the data value of the element. </para></listitem>
<listitem>
<para>Otherwise it will be colored with the default color. </para></listitem>
</orderedlist>
</para><para>Note: The opacity of an unselected item is defined by the multiplication of default opacity, lookup table opacity, and annotation opacity, where opacity is taken as a number from 0 to 1. So items will never be more opaque than any of these three opacities. Selected items are always given the selection opacity directly.</para><para>To create an instance of class vtkApplyColors, simply invoke its constructor as follows <verbatim>  obj = vtkApplyColors
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkApplyColors has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkApplyColors class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkApplyColors = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkApplyColors = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPointLookupTable (vtkScalarsToColors lut)</computeroutput> - The lookup table to use for point colors. This is only used if input array 0 is set and UsePointLookupTable is on.  </para></listitem>
<listitem>
<para><computeroutput>vtkScalarsToColors = obj.GetPointLookupTable ()</computeroutput> - The lookup table to use for point colors. This is only used if input array 0 is set and UsePointLookupTable is on.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetUsePointLookupTable (bool )</computeroutput> - If on, uses the point lookup table to set the colors of unannotated, unselected elements of the data.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetUsePointLookupTable ()</computeroutput> - If on, uses the point lookup table to set the colors of unannotated, unselected elements of the data.  </para></listitem>
<listitem>
<para><computeroutput>obj.UsePointLookupTableOn ()</computeroutput> - If on, uses the point lookup table to set the colors of unannotated, unselected elements of the data.  </para></listitem>
<listitem>
<para><computeroutput>obj.UsePointLookupTableOff ()</computeroutput> - If on, uses the point lookup table to set the colors of unannotated, unselected elements of the data.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetScalePointLookupTable (bool )</computeroutput> - If on, uses the range of the data to scale the lookup table range. Otherwise, uses the range defined in the lookup table.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetScalePointLookupTable ()</computeroutput> - If on, uses the range of the data to scale the lookup table range. Otherwise, uses the range defined in the lookup table.  </para></listitem>
<listitem>
<para><computeroutput>obj.ScalePointLookupTableOn ()</computeroutput> - If on, uses the range of the data to scale the lookup table range. Otherwise, uses the range defined in the lookup table.  </para></listitem>
<listitem>
<para><computeroutput>obj.ScalePointLookupTableOff ()</computeroutput> - If on, uses the range of the data to scale the lookup table range. Otherwise, uses the range defined in the lookup table.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDefaultPointColor (double , double , double )</computeroutput> - The default point color for all unannotated, unselected elements of the data. This is used if UsePointLookupTable is off.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDefaultPointColor (double a[3])</computeroutput> - The default point color for all unannotated, unselected elements of the data. This is used if UsePointLookupTable is off.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetDefaultPointColor ()</computeroutput> - The default point color for all unannotated, unselected elements of the data. This is used if UsePointLookupTable is off.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDefaultPointOpacity (double )</computeroutput> - The default point opacity for all unannotated, unselected elements of the data. This is used if UsePointLookupTable is off.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetDefaultPointOpacity ()</computeroutput> - The default point opacity for all unannotated, unselected elements of the data. This is used if UsePointLookupTable is off.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSelectedPointColor (double , double , double )</computeroutput> - The point color for all selected elements of the data. This is used if the selection input is available.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSelectedPointColor (double a[3])</computeroutput> - The point color for all selected elements of the data. This is used if the selection input is available.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetSelectedPointColor ()</computeroutput> - The point color for all selected elements of the data. This is used if the selection input is available.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSelectedPointOpacity (double )</computeroutput> - The point opacity for all selected elements of the data. This is used if the selection input is available.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetSelectedPointOpacity ()</computeroutput> - The point opacity for all selected elements of the data. This is used if the selection input is available.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPointColorOutputArrayName (string )</computeroutput> - The output array name for the point color RGBA array. Default is &quot;vtkApplyColors color&quot;.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetPointColorOutputArrayName ()</computeroutput> - The output array name for the point color RGBA array. Default is &quot;vtkApplyColors color&quot;.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCellLookupTable (vtkScalarsToColors lut)</computeroutput> - The lookup table to use for cell colors. This is only used if input array 1 is set and UseCellLookupTable is on.  </para></listitem>
<listitem>
<para><computeroutput>vtkScalarsToColors = obj.GetCellLookupTable ()</computeroutput> - The lookup table to use for cell colors. This is only used if input array 1 is set and UseCellLookupTable is on.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetUseCellLookupTable (bool )</computeroutput> - If on, uses the cell lookup table to set the colors of unannotated, unselected elements of the data.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetUseCellLookupTable ()</computeroutput> - If on, uses the cell lookup table to set the colors of unannotated, unselected elements of the data.  </para></listitem>
<listitem>
<para><computeroutput>obj.UseCellLookupTableOn ()</computeroutput> - If on, uses the cell lookup table to set the colors of unannotated, unselected elements of the data.  </para></listitem>
<listitem>
<para><computeroutput>obj.UseCellLookupTableOff ()</computeroutput> - If on, uses the cell lookup table to set the colors of unannotated, unselected elements of the data.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetScaleCellLookupTable (bool )</computeroutput> - If on, uses the range of the data to scale the lookup table range. Otherwise, uses the range defined in the lookup table.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetScaleCellLookupTable ()</computeroutput> - If on, uses the range of the data to scale the lookup table range. Otherwise, uses the range defined in the lookup table.  </para></listitem>
<listitem>
<para><computeroutput>obj.ScaleCellLookupTableOn ()</computeroutput> - If on, uses the range of the data to scale the lookup table range. Otherwise, uses the range defined in the lookup table.  </para></listitem>
<listitem>
<para><computeroutput>obj.ScaleCellLookupTableOff ()</computeroutput> - If on, uses the range of the data to scale the lookup table range. Otherwise, uses the range defined in the lookup table.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDefaultCellColor (double , double , double )</computeroutput> - The default cell color for all unannotated, unselected elements of the data. This is used if UseCellLookupTable is off.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDefaultCellColor (double a[3])</computeroutput> - The default cell color for all unannotated, unselected elements of the data. This is used if UseCellLookupTable is off.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetDefaultCellColor ()</computeroutput> - The default cell color for all unannotated, unselected elements of the data. This is used if UseCellLookupTable is off.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDefaultCellOpacity (double )</computeroutput> - The default cell opacity for all unannotated, unselected elements of the data. This is used if UseCellLookupTable is off.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetDefaultCellOpacity ()</computeroutput> - The default cell opacity for all unannotated, unselected elements of the data. This is used if UseCellLookupTable is off.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSelectedCellColor (double , double , double )</computeroutput> - The cell color for all selected elements of the data. This is used if the selection input is available.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSelectedCellColor (double a[3])</computeroutput> - The cell color for all selected elements of the data. This is used if the selection input is available.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetSelectedCellColor ()</computeroutput> - The cell color for all selected elements of the data. This is used if the selection input is available.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSelectedCellOpacity (double )</computeroutput> - The cell opacity for all selected elements of the data. This is used if the selection input is available.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetSelectedCellOpacity ()</computeroutput> - The cell opacity for all selected elements of the data. This is used if the selection input is available.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCellColorOutputArrayName (string )</computeroutput> - The output array name for the cell color RGBA array. Default is &quot;vtkApplyColors color&quot;.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetCellColorOutputArrayName ()</computeroutput> - The output array name for the cell color RGBA array. Default is &quot;vtkApplyColors color&quot;.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetUseCurrentAnnotationColor (bool )</computeroutput> - Use the annotation to color the current annotation (i.e. the current selection). Otherwise use the selection color attributes of this filter.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetUseCurrentAnnotationColor ()</computeroutput> - Use the annotation to color the current annotation (i.e. the current selection). Otherwise use the selection color attributes of this filter.  </para></listitem>
<listitem>
<para><computeroutput>obj.UseCurrentAnnotationColorOn ()</computeroutput> - Use the annotation to color the current annotation (i.e. the current selection). Otherwise use the selection color attributes of this filter.  </para></listitem>
<listitem>
<para><computeroutput>obj.UseCurrentAnnotationColorOff ()</computeroutput> - Use the annotation to color the current annotation (i.e. the current selection). Otherwise use the selection color attributes of this filter.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
