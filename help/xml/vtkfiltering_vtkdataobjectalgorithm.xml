<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtkdataobjectalgorithm" kind="page">
    <compoundname>vtkfiltering_vtkdataobjectalgorithm</compoundname>
    <title>vtkDataObjectAlgorithm</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>To create an instance of class vtkDataObjectAlgorithm, simply invoke its constructor as follows <verbatim>  obj = vtkDataObjectAlgorithm
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkDataObjectAlgorithm has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkDataObjectAlgorithm class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkDataObjectAlgorithm = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkDataObjectAlgorithm = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkDataObject = obj.GetOutput ()</computeroutput> - Get the output data object for a port on this algorithm.  </para></listitem>
<listitem>
<para><computeroutput>vtkDataObject = obj.GetOutput (int )</computeroutput> - Get the output data object for a port on this algorithm.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutput (vtkDataObject d)</computeroutput> - Get the output data object for a port on this algorithm.  </para></listitem>
<listitem>
<para><computeroutput>vtkDataObject = obj.GetInput ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkDataObject = obj.GetInput (int port)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInput (vtkDataObject )</computeroutput> - Set an input of this algorithm. You should not override these methods because they are not the only way to connect a pipeline. Note that these methods support old-style pipeline connections. When writing new code you should use the more general vtkAlgorithm::SetInputConnection(). These methods transform the input index to the input port index, not an index of a connection within a single port.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInput (int , vtkDataObject )</computeroutput> - Set an input of this algorithm. You should not override these methods because they are not the only way to connect a pipeline. Note that these methods support old-style pipeline connections. When writing new code you should use the more general vtkAlgorithm::SetInputConnection(). These methods transform the input index to the input port index, not an index of a connection within a single port.  </para></listitem>
<listitem>
<para><computeroutput>obj.AddInput (vtkDataObject )</computeroutput> - Add an input of this algorithm. Note that these methods support old-style pipeline connections. When writing new code you should use the more general vtkAlgorithm::AddInputConnection(). See SetInput() for details.  </para></listitem>
<listitem>
<para><computeroutput>obj.AddInput (int , vtkDataObject )</computeroutput> - Add an input of this algorithm. Note that these methods support old-style pipeline connections. When writing new code you should use the more general vtkAlgorithm::AddInputConnection(). See SetInput() for details.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
