<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="io_fopen" kind="page">
    <compoundname>io_fopen</compoundname>
    <title>FOPEN File Open Function</title>
    <detaileddescription>
<para>Section: <ref refid="sec_io_1sec_io" kindref="member">Input/Ouput Functions</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Opens a file and returns a handle which can be used for subsequent file manipulations. The general syntax for its use is <verbatim>  fp = fopen(fname,mode,byteorder)
</verbatim> Here <computeroutput>fname</computeroutput> is a string containing the name of the file to be opened. <computeroutput>mode</computeroutput> is the mode string for the file open command. The first character of the mode string is one of the following: <itemizedlist>
<listitem>
<para><computeroutput>&apos;r&apos;</computeroutput> Open file for reading. The file pointer is placed at the beginning of the file. The file can be read from, but not written to.  </para></listitem>
<listitem>
<para><computeroutput>&apos;r+&apos;</computeroutput> Open for reading and writing. The file pointer is placed at the beginning of the file. The file can be read from and written to, but must exist at the outset.  </para></listitem>
<listitem>
<para><computeroutput>&apos;w&apos;</computeroutput> Open file for writing. If the file already exists, it is truncated to zero length. Otherwise, a new file is created. The file pointer is placed at the beginning of the file.  </para></listitem>
<listitem>
<para><computeroutput>&apos;w+&apos;</computeroutput> Open for reading and writing. The file is created if it does not exist, otherwise it is truncated to zero length. The file pointer placed at the beginning of the file.  </para></listitem>
<listitem>
<para><computeroutput>&apos;a&apos;</computeroutput> Open for appending (writing at end of file). The file is created if it does not exist. The file pointer is placed at the end of the file.  </para></listitem>
<listitem>
<para><computeroutput>&apos;a+&apos;</computeroutput> Open for reading and appending (writing at end of file). The file is created if it does not exist. The file pointer is placed at the end of the file.  </para></listitem>
</itemizedlist>
Starting with FreeMat 4, all files are treated as binary files by default. To invoke the operating systems &apos;CR/LF &lt;-&gt; CR&apos; translation (on Win32) add a &apos;t&apos; to the mode string, as in &apos;rt+&apos;.</para><para>Also, you can supply a second argument to <computeroutput>fopen</computeroutput> to retrieve error messages if the <computeroutput>fopen</computeroutput> fails. <verbatim>  [fp,messages] = fopen(fname,mode,byteorder)
</verbatim></para><para>Finally, FreeMat has the ability to read and write files of any byte-sex (endian). The third (optional) input indicates the byte-endianness of the file. If it is omitted, the native endian-ness of the machine running FreeMat is used. Otherwise, the third argument should be one of the following strings: <itemizedlist>
<listitem>
<para><computeroutput>&apos;le&apos;,&apos;ieee-le&apos;,&apos;little-endian&apos;,&apos;littleEndian&apos;,&apos;little&apos;,&apos;l&apos;,&apos;ieee-le.l64&apos;,&apos;s&apos;</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>&apos;be&apos;,&apos;ieee-be&apos;,&apos;big-endian&apos;,&apos;bigEndian&apos;,&apos;big&apos;,&apos;b&apos;,&apos;ieee-be.l64&apos;,&apos;a&apos;</computeroutput>  </para></listitem>
</itemizedlist>
</para><para>If the file cannot be opened, or the file mode is illegal, then an error occurs. Otherwise, a file handle is returned (which is an integer). This file handle can then be used with <computeroutput>fread</computeroutput>, <computeroutput>fwrite</computeroutput>, or <computeroutput>fclose</computeroutput> for file access.</para><para>Note that three handles are assigned at initialization time: <itemizedlist>
<listitem>
<para>Handle 0 - is assigned to standard input  </para></listitem>
<listitem>
<para>Handle 1 - is assigned to standard output  </para></listitem>
<listitem>
<para>Handle 2 - is assigned to standard error  </para></listitem>
</itemizedlist>
These handles cannot be closed, so that user created file handles start at <computeroutput>3</computeroutput>.</para></sect1>
<sect1 id="variables_matrix_1Examples">
<title>Examples</title>
<para>Here are some examples of how to use <computeroutput>fopen</computeroutput>. First, we create a new file, which we want to be little-endian, regardless of the type of the machine. We also use the <computeroutput>fwrite</computeroutput> function to write some floating point data to the file.</para><para><verbatim>--&gt; fp = fopen(&apos;test.dat&apos;,&apos;w&apos;,&apos;ieee-le&apos;)

fp = 
 4 

--&gt; fwrite(fp,float([1.2,4.3,2.1]))

ans = 
 12 

--&gt; fclose(fp)
</verbatim></para><para>Next, we open the file and read the data back</para><para><verbatim>--&gt; fp = fopen(&apos;test.dat&apos;,&apos;r&apos;,&apos;ieee-le&apos;)

fp = 
 4 

--&gt; fread(fp,[1,3],&apos;float&apos;)

ans = 
    1.2000    4.3000    2.1000 

--&gt; fclose(fp)
</verbatim></para><para>Now, we re-open the file in append mode and add two additional <computeroutput>float</computeroutput>s to the file.</para><para><verbatim>--&gt; fp = fopen(&apos;test.dat&apos;,&apos;a+&apos;,&apos;le&apos;)

fp = 
 4 

--&gt; fwrite(fp,float([pi,e]))

ans = 
 8 

--&gt; fclose(fp)
</verbatim></para><para>Finally, we read all 5 <computeroutput>float</computeroutput> values from the file</para><para><verbatim>--&gt; fp = fopen(&apos;test.dat&apos;,&apos;r&apos;,&apos;ieee-le&apos;)

fp = 
 4 

--&gt; fread(fp,[1,5],&apos;float&apos;)

ans = 
    1.2000    4.3000    2.1000    3.1416    2.7183 

--&gt; fclose(fp)
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
