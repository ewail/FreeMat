<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkimaging_vtkimagedifference" kind="page">
    <compoundname>vtkimaging_vtkimagedifference</compoundname>
    <title>vtkImageDifference</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkimaging_1sec_vtkimaging" kindref="member">Visualization Toolkit Imaging Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkImageDifference takes two rgb unsigned char images and compares them. It allows the images to be slightly different. If AllowShift is on, then each pixel can be shifted by one pixel. Threshold is the allowable error for each pixel.</para><para>This is not a symetric filter and the difference computed is not symetric when AllowShift is on. Specifically in that case a pixel in SetImage input will be compared to the matching pixel in the input as well as to the input&apos;s eight connected neighbors. BUT... the opposite is not true. So for example if a valid image (SetImage) has a single white pixel in it, it will not find a match in the input image if the input image is black (because none of the nine suspect pixels are white). In contrast, if there is a single white pixel in the input image and the valid image (SetImage) is all black it will match with no error because all it has to do is find black pixels and even though the input image has a white pixel, its neighbors are not white.</para><para>To create an instance of class vtkImageDifference, simply invoke its constructor as follows <verbatim>  obj = vtkImageDifference
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkImageDifference has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkImageDifference class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImageDifference = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImageDifference = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetImage (vtkDataObject image)</computeroutput> - Specify the Image to compare the input to.  </para></listitem>
<listitem>
<para><computeroutput>vtkImageData = obj.GetImage ()</computeroutput> - Specify the Image to compare the input to.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetError (void )</computeroutput> - Return the total error in comparing the two images.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetError (double e)</computeroutput> - Return the total error in comparing the two images.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetThresholdedError (void )</computeroutput> - Return the total thresholded error in comparing the two images. The thresholded error is the error for a given pixel minus the threshold and clamped at a minimum of zero.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetThresholdedError (double e)</computeroutput> - Return the total thresholded error in comparing the two images. The thresholded error is the error for a given pixel minus the threshold and clamped at a minimum of zero.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetThreshold (int )</computeroutput> - Specify a threshold tolerance for pixel differences.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetThreshold ()</computeroutput> - Specify a threshold tolerance for pixel differences.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetAllowShift (int )</computeroutput> - Specify whether the comparison will allow a shift of one pixel between the images. If set, then the minimum difference between input images will be used to determine the difference. Otherwise, the difference is computed directly between pixels of identical row/column values.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetAllowShift ()</computeroutput> - Specify whether the comparison will allow a shift of one pixel between the images. If set, then the minimum difference between input images will be used to determine the difference. Otherwise, the difference is computed directly between pixels of identical row/column values.  </para></listitem>
<listitem>
<para><computeroutput>obj.AllowShiftOn ()</computeroutput> - Specify whether the comparison will allow a shift of one pixel between the images. If set, then the minimum difference between input images will be used to determine the difference. Otherwise, the difference is computed directly between pixels of identical row/column values.  </para></listitem>
<listitem>
<para><computeroutput>obj.AllowShiftOff ()</computeroutput> - Specify whether the comparison will allow a shift of one pixel between the images. If set, then the minimum difference between input images will be used to determine the difference. Otherwise, the difference is computed directly between pixels of identical row/column values.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetAveraging (int )</computeroutput> - Specify whether the comparison will include comparison of averaged 3x3 data between the images. For graphics renderings you normally would leave this on. For imaging operations it should be off.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetAveraging ()</computeroutput> - Specify whether the comparison will include comparison of averaged 3x3 data between the images. For graphics renderings you normally would leave this on. For imaging operations it should be off.  </para></listitem>
<listitem>
<para><computeroutput>obj.AveragingOn ()</computeroutput> - Specify whether the comparison will include comparison of averaged 3x3 data between the images. For graphics renderings you normally would leave this on. For imaging operations it should be off.  </para></listitem>
<listitem>
<para><computeroutput>obj.AveragingOff ()</computeroutput> - Specify whether the comparison will include comparison of averaged 3x3 data between the images. For graphics renderings you normally would leave this on. For imaging operations it should be off.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
