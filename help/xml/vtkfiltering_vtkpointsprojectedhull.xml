<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtkpointsprojectedhull" kind="page">
    <compoundname>vtkfiltering_vtkpointsprojectedhull</compoundname>
    <title>vtkPointsProjectedHull</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>a subclass of vtkPoints, it maintains the counter clockwise convex hull of the points (projected orthogonally in the three coordinate directions) and has a method to test for intersection of that hull with an axis aligned rectangle. This is used for intersection tests of 3D volumes.</para><para>To create an instance of class vtkPointsProjectedHull, simply invoke its constructor as follows <verbatim>  obj = vtkPointsProjectedHull
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkPointsProjectedHull has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkPointsProjectedHull class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkPointsProjectedHull = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkPointsProjectedHull = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RectangleIntersectionX (vtkPoints R)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RectangleIntersectionX (float ymin, float ymax, float zmin, float zmax)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RectangleIntersectionX (double ymin, double ymax, double zmin, double zmax)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RectangleIntersectionY (vtkPoints R)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RectangleIntersectionY (float zmin, float zmax, float xmin, float xmax)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RectangleIntersectionY (double zmin, double zmax, double xmin, double xmax)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RectangleIntersectionZ (vtkPoints R)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RectangleIntersectionZ (float xmin, float xmax, float ymin, float ymax)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RectangleIntersectionZ (double xmin, double xmax, double ymin, double ymax)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCCWHullX (float pts, int len)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCCWHullX (double pts, int len)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCCWHullY (float pts, int len)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCCWHullY (double pts, int len)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCCWHullZ (float pts, int len)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCCWHullZ (double pts, int len)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetSizeCCWHullX ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetSizeCCWHullY ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetSizeCCWHullZ ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Initialize ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Reset ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Update ()</computeroutput>  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
