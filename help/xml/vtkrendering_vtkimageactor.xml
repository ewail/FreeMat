<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkrendering_vtkimageactor" kind="page">
    <compoundname>vtkrendering_vtkimageactor</compoundname>
    <title>vtkImageActor</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkrendering_1sec_vtkrendering" kindref="member">Visualization Toolkit Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkImageActor is used to render an image in a 3D scene. The image is placed at the origin of the image, and its size is controlled by the image dimensions and image spacing. The orientation of the image is orthogonal to one of the x-y-z axes depending on which plane the image is defined in. vtkImageActor duplicates the functionality of combinations of other VTK classes in a convenient, single class.</para><para>To create an instance of class vtkImageActor, simply invoke its constructor as follows <verbatim>  obj = vtkImageActor
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkImageActor has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkImageActor class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImageActor = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImageActor = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInput (vtkImageData )</computeroutput> - Set/Get the image data input for the image actor.  </para></listitem>
<listitem>
<para><computeroutput>vtkImageData = obj.GetInput ()</computeroutput> - Set/Get the image data input for the image actor.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetInterpolate ()</computeroutput> - Turn on/off linear interpolation of the image when rendering.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInterpolate (int )</computeroutput> - Turn on/off linear interpolation of the image when rendering.  </para></listitem>
<listitem>
<para><computeroutput>obj.InterpolateOn ()</computeroutput> - Turn on/off linear interpolation of the image when rendering.  </para></listitem>
<listitem>
<para><computeroutput>obj.InterpolateOff ()</computeroutput> - Turn on/off linear interpolation of the image when rendering.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOpacity (double )</computeroutput> - Set/Get the object&apos;s opacity. 1.0 is totally opaque and 0.0 is completely transparent.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetOpacityMinValue ()</computeroutput> - Set/Get the object&apos;s opacity. 1.0 is totally opaque and 0.0 is completely transparent.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetOpacityMaxValue ()</computeroutput> - Set/Get the object&apos;s opacity. 1.0 is totally opaque and 0.0 is completely transparent.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetOpacity ()</computeroutput> - Set/Get the object&apos;s opacity. 1.0 is totally opaque and 0.0 is completely transparent.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDisplayExtent (int extent[6])</computeroutput> - The image extent is generally set explicitly, but if not set it will be determined from the input image data.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDisplayExtent (int minX, int maxX, int minY, int maxY, int minZ, int maxZ)</computeroutput> - The image extent is generally set explicitly, but if not set it will be determined from the input image data.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetDisplayExtent (int extent[6])</computeroutput> - The image extent is generally set explicitly, but if not set it will be determined from the input image data.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetDisplayExtent ()</computeroutput> - Get the bounds of this image actor. Either copy the bounds into a user provided array or return a pointer to an array. In either case the boudns is expressed as a 6-vector (xmin,xmax, ymin,ymax, zmin,zmax).  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetBounds ()</computeroutput> - Get the bounds of this image actor. Either copy the bounds into a user provided array or return a pointer to an array. In either case the boudns is expressed as a 6-vector (xmin,xmax, ymin,ymax, zmin,zmax).  </para></listitem>
<listitem>
<para><computeroutput>obj.GetBounds (double bounds[6])</computeroutput> - Get the bounds of this image actor. Either copy the bounds into a user provided array or return a pointer to an array. In either case the boudns is expressed as a 6-vector (xmin,xmax, ymin,ymax, zmin,zmax).  </para></listitem>
<listitem>
<para><computeroutput>obj.GetDisplayBounds (double bounds[6])</computeroutput> - Get the bounds of the data that is displayed by this image actor. If the transformation matrix for this actor is the identity matrix, this will return the same value as GetBounds.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetSliceNumber ()</computeroutput> - Return the slice number (&amp; min/max slice number) computed from the display extent.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetSliceNumberMax ()</computeroutput> - Return the slice number (&amp; min/max slice number) computed from the display extent.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetSliceNumberMin ()</computeroutput> - Return the slice number (&amp; min/max slice number) computed from the display extent.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetZSlice (int z)</computeroutput> - Set/Get the current slice number. The axis Z in ZSlice does not necessarily have any relation to the z axis of the data on disk. It is simply the axis orthogonal to the x,y, display plane. GetWholeZMax and Min are convenience methods for obtaining the number of slices that can be displayed. Again the number of slices is in reference to the display z axis, which is not necessarily the z axis on disk. (due to reformatting etc)  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetZSlice ()</computeroutput> - Set/Get the current slice number. The axis Z in ZSlice does not necessarily have any relation to the z axis of the data on disk. It is simply the axis orthogonal to the x,y, display plane. GetWholeZMax and Min are convenience methods for obtaining the number of slices that can be displayed. Again the number of slices is in reference to the display z axis, which is not necessarily the z axis on disk. (due to reformatting etc)  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetWholeZMin ()</computeroutput> - Set/Get the current slice number. The axis Z in ZSlice does not necessarily have any relation to the z axis of the data on disk. It is simply the axis orthogonal to the x,y, display plane. GetWholeZMax and Min are convenience methods for obtaining the number of slices that can be displayed. Again the number of slices is in reference to the display z axis, which is not necessarily the z axis on disk. (due to reformatting etc)  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetWholeZMax ()</computeroutput> - Set/Get the current slice number. The axis Z in ZSlice does not necessarily have any relation to the z axis of the data on disk. It is simply the axis orthogonal to the x,y, display plane. GetWholeZMax and Min are convenience methods for obtaining the number of slices that can be displayed. Again the number of slices is in reference to the display z axis, which is not necessarily the z axis on disk. (due to reformatting etc)  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
