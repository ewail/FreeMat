<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkio_vtkchacoreader" kind="page">
    <compoundname>vtkio_vtkchacoreader</compoundname>
    <title>vtkChacoReader</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkio_1sec_vtkio" kindref="member">Visualization Toolkit IO Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkChacoReader is an unstructured grid source object that reads Chaco files. The reader DOES NOT respond to piece requests. Chaco is a graph partitioning package developed at Sandia National Laboratories in the early 1990s. (<ulink url="http://www.cs.sandia.gov/~bahendr/chaco.html">http://www.cs.sandia.gov/~bahendr/chaco.html</ulink>)</para><para>Note that the Chaco &quot;edges&quot; become VTK &quot;cells&quot;, and the Chaco &quot;vertices&quot; become VTK &quot;points&quot;.</para><para>To create an instance of class vtkChacoReader, simply invoke its constructor as follows <verbatim>  obj = vtkChacoReader
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkChacoReader has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkChacoReader class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkChacoReader = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkChacoReader = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetBaseName (string )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetBaseName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGenerateGlobalElementIdArray (int )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetGenerateGlobalElementIdArray ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GenerateGlobalElementIdArrayOn ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GenerateGlobalElementIdArrayOff ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGenerateGlobalNodeIdArray (int )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetGenerateGlobalNodeIdArray ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GenerateGlobalNodeIdArrayOn ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GenerateGlobalNodeIdArrayOff ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGenerateVertexWeightArrays (int )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetGenerateVertexWeightArrays ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GenerateVertexWeightArraysOn ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GenerateVertexWeightArraysOff ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfVertexWeights ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetVertexWeightArrayName (int weight)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGenerateEdgeWeightArrays (int )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetGenerateEdgeWeightArrays ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GenerateEdgeWeightArraysOn ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.GenerateEdgeWeightArraysOff ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfEdgeWeights ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetEdgeWeightArrayName (int weight)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetDimensionality ()</computeroutput> - Access to meta data generated by RequestInformation.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetNumberOfEdges ()</computeroutput> - Access to meta data generated by RequestInformation.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetNumberOfVertices ()</computeroutput> - Access to meta data generated by RequestInformation.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfCellWeightArrays ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfPointWeightArrays ()</computeroutput>  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
