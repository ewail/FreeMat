<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkinfovis_vtkstrahlermetric" kind="page">
    <compoundname>vtkinfovis_vtkstrahlermetric</compoundname>
    <title>vtkStrahlerMetric</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkinfovis_1sec_vtkinfovis" kindref="member">Visualization Toolkit Infovis Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The Strahler metric is a value assigned to each vertex of a tree that characterizes the structural complexity of the sub-tree rooted at that node. The metric originated in the study of river systems, but has been applied to other tree- structured systes, Details of the metric and the rationale for using it in infovis can be found in:</para><para>Tree Visualization and Navigation Clues for Information Visualization, I. Herman, M. Delest, and G. Melancon, Computer Graphics Forum, Vol 17(2), Blackwell, 1998.</para><para>The input tree is copied to the output, but with a new array added to the output vertex data.</para><para>.SECTION Thanks Thanks to David Duke from the University of Leeds for providing this implementation.</para><para>To create an instance of class vtkStrahlerMetric, simply invoke its constructor as follows <verbatim>  obj = vtkStrahlerMetric
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkStrahlerMetric has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkStrahlerMetric class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkStrahlerMetric = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkStrahlerMetric = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMetricArrayName (string )</computeroutput> - Set the name of the array in which the Strahler values will be stored within the output vertex data. Default is &quot;Strahler&quot;  </para></listitem>
<listitem>
<para><computeroutput>obj.SetNormalize (int )</computeroutput> - Set/get setting of normalize flag. If this is set, the Strahler values are scaled into the range [0..1]. Default is for normalization to be OFF.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNormalize ()</computeroutput> - Set/get setting of normalize flag. If this is set, the Strahler values are scaled into the range [0..1]. Default is for normalization to be OFF.  </para></listitem>
<listitem>
<para><computeroutput>obj.NormalizeOn ()</computeroutput> - Set/get setting of normalize flag. If this is set, the Strahler values are scaled into the range [0..1]. Default is for normalization to be OFF.  </para></listitem>
<listitem>
<para><computeroutput>obj.NormalizeOff ()</computeroutput> - Set/get setting of normalize flag. If this is set, the Strahler values are scaled into the range [0..1]. Default is for normalization to be OFF.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetMaxStrahler ()</computeroutput> - Get the maximum strahler value for the tree.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
