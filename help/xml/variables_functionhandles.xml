<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="variables_functionhandles" kind="page">
    <compoundname>variables_functionhandles</compoundname>
    <title>FUNCTIONHANDLES Function Handles</title>
    <detaileddescription>
<para>Section: <ref refid="sec_variables_1sec_variables" kindref="member">Variables and Arrays</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Starting with version 1.11, FreeMat now supports <computeroutput>function handles</computeroutput>, or <computeroutput>function pointers</computeroutput>. A <computeroutput>function handle</computeroutput> is an alias for a function or script that is stored in a variable. First, the way to assign a function handle is to use the notation <verbatim>    handle = @func
</verbatim> where <computeroutput>func</computeroutput> is the name to point to. The function <computeroutput>func</computeroutput> must exist at the time we make the call. It can be a local function (i.e., a subfunction). To use the <computeroutput>handle</computeroutput>, we can either pass it to <computeroutput>feval</computeroutput> via <verbatim>   [x,y] = feval(handle,arg1,arg2).
</verbatim> Alternately, you can the function directly using the notation <verbatim>   [x,y] = handle(arg1,arg2)
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
