<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkhybrid_vtkpolydatatoimagestencil" kind="page">
    <compoundname>vtkhybrid_vtkpolydatatoimagestencil</compoundname>
    <title>vtkPolyDataToImageStencil</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkhybrid_1sec_vtkhybrid" kindref="member">Visualization Toolkit Hybrid Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The vtkPolyDataToImageStencil class will convert a surface mesh into an image stencil that can be used to mask an image with vtkImageStencil, or used to calculate statistics within the enclosed region with vtkImageAccumulate.</para><para>To create an instance of class vtkPolyDataToImageStencil, simply invoke its constructor as follows <verbatim>  obj = vtkPolyDataToImageStencil
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkPolyDataToImageStencil has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkPolyDataToImageStencil class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkPolyDataToImageStencil = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkPolyDataToImageStencil = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInput (vtkPolyData )</computeroutput> - Specify the implicit function to convert into a stencil.  </para></listitem>
<listitem>
<para><computeroutput>vtkPolyData = obj.GetInput ()</computeroutput> - Specify the implicit function to convert into a stencil.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInformationInput (vtkImageData )</computeroutput> - Set a vtkImageData that has the Spacing, Origin, and WholeExtent that will be used for the stencil. This input should be set to the image that you wish to apply the stencil to. If you use this method, then any values set with the SetOutputSpacing, SetOutputOrigin, and SetOutputWholeExtent methods will be ignored.  </para></listitem>
<listitem>
<para><computeroutput>vtkImageData = obj.GetInformationInput ()</computeroutput> - Set a vtkImageData that has the Spacing, Origin, and WholeExtent that will be used for the stencil. This input should be set to the image that you wish to apply the stencil to. If you use this method, then any values set with the SetOutputSpacing, SetOutputOrigin, and SetOutputWholeExtent methods will be ignored.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutputOrigin (double , double , double )</computeroutput> - Set the Origin to be used for the stencil. It should be set to the Origin of the image you intend to apply the stencil to. The default value is (0,0,0).  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutputOrigin (double a[3])</computeroutput> - Set the Origin to be used for the stencil. It should be set to the Origin of the image you intend to apply the stencil to. The default value is (0,0,0).  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetOutputOrigin ()</computeroutput> - Set the Origin to be used for the stencil. It should be set to the Origin of the image you intend to apply the stencil to. The default value is (0,0,0).  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutputSpacing (double , double , double )</computeroutput> - Set the Spacing to be used for the stencil. It should be set to the Spacing of the image you intend to apply the stencil to. The default value is (1,1,1)  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutputSpacing (double a[3])</computeroutput> - Set the Spacing to be used for the stencil. It should be set to the Spacing of the image you intend to apply the stencil to. The default value is (1,1,1)  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetOutputSpacing ()</computeroutput> - Set the Spacing to be used for the stencil. It should be set to the Spacing of the image you intend to apply the stencil to. The default value is (1,1,1)  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutputWholeExtent (int , int , int , int , int , int )</computeroutput> - Set the whole extent for the stencil (anything outside this extent will be considered to be &quot;outside&quot; the stencil). If this is not set, then the stencil will always use the requested UpdateExtent as the stencil extent.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutputWholeExtent (int a[6])</computeroutput> - Set the whole extent for the stencil (anything outside this extent will be considered to be &quot;outside&quot; the stencil). If this is not set, then the stencil will always use the requested UpdateExtent as the stencil extent.  </para></listitem>
<listitem>
<para><computeroutput>int = obj. GetOutputWholeExtent ()</computeroutput> - Set the whole extent for the stencil (anything outside this extent will be considered to be &quot;outside&quot; the stencil). If this is not set, then the stencil will always use the requested UpdateExtent as the stencil extent.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTolerance (double )</computeroutput> - The tolerance to apply in when determining whether a voxel is inside the stencil, given as a fraction of a voxel. Only used in X and Y, not in Z.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetToleranceMinValue ()</computeroutput> - The tolerance to apply in when determining whether a voxel is inside the stencil, given as a fraction of a voxel. Only used in X and Y, not in Z.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetToleranceMaxValue ()</computeroutput> - The tolerance to apply in when determining whether a voxel is inside the stencil, given as a fraction of a voxel. Only used in X and Y, not in Z.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetTolerance ()</computeroutput> - The tolerance to apply in when determining whether a voxel is inside the stencil, given as a fraction of a voxel. Only used in X and Y, not in Z.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
