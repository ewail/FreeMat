<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkrendering_vtkinteractorstylerubberband3d" kind="page">
    <compoundname>vtkrendering_vtkinteractorstylerubberband3d</compoundname>
    <title>vtkInteractorStyleRubberBand3D</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkrendering_1sec_vtkrendering" kindref="member">Visualization Toolkit Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkInteractorStyleRubberBand3D manages interaction in a 3D view. The style also allows draws a rubber band using the left button. All camera changes invoke InteractionBeginEvent when the button is pressed, InteractionEvent when the mouse (or wheel) is moved, and InteractionEndEvent when the button is released. The bindings are as follows: Left mouse - Select (invokes a SelectionChangedEvent). Right mouse - Rotate. Shift + right mouse - Zoom. Middle mouse - Pan. Scroll wheel - Zoom.</para><para>To create an instance of class vtkInteractorStyleRubberBand3D, simply invoke its constructor as follows <verbatim>  obj = vtkInteractorStyleRubberBand3D
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkInteractorStyleRubberBand3D has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkInteractorStyleRubberBand3D class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkInteractorStyleRubberBand3D = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkInteractorStyleRubberBand3D = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.OnLeftButtonDown ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.OnLeftButtonUp ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.OnMiddleButtonDown ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.OnMiddleButtonUp ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.OnRightButtonDown ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.OnRightButtonUp ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.OnMouseMove ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.OnMouseWheelForward ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.OnMouseWheelBackward ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetRenderOnMouseMove (bool )</computeroutput> - Whether to invoke a render when the mouse moves.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetRenderOnMouseMove ()</computeroutput> - Whether to invoke a render when the mouse moves.  </para></listitem>
<listitem>
<para><computeroutput>obj.RenderOnMouseMoveOn ()</computeroutput> - Whether to invoke a render when the mouse moves.  </para></listitem>
<listitem>
<para><computeroutput>obj.RenderOnMouseMoveOff ()</computeroutput> - Whether to invoke a render when the mouse moves.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetInteraction ()</computeroutput> - Current interaction state  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
