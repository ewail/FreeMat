<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkcommon_vtkanimationscene" kind="page">
    <compoundname>vtkcommon_vtkanimationscene</compoundname>
    <title>vtkAnimationScene</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkcommon_1sec_vtkcommon" kindref="member">Visualization Toolkit Common Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkAnimationCue and vtkAnimationScene provide the framework to support animations in VTK. vtkAnimationCue represents an entity that changes/ animates with time, while vtkAnimationScene represents scene or setup for the animation, which consists of individual cues or other scenes.</para><para>A scene can be played in real time mode, or as a seqence of frames 1/frame rate apart in time.</para><para>To create an instance of class vtkAnimationScene, simply invoke its constructor as follows <verbatim>  obj = vtkAnimationScene
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkAnimationScene has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkAnimationScene class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkAnimationScene = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkAnimationScene = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPlayMode (int )</computeroutput> - Get/Set the PlayMode for running/playing the animation scene. In the Sequence mode, all the frames are generated one after the other. The time reported to each Tick of the constituent cues (during Play) is incremented by 1/frame rate, irrespective of the current time. In the RealTime mode, time indicates the instance in time.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetModeToSequence ()</computeroutput> - Get/Set the PlayMode for running/playing the animation scene. In the Sequence mode, all the frames are generated one after the other. The time reported to each Tick of the constituent cues (during Play) is incremented by 1/frame rate, irrespective of the current time. In the RealTime mode, time indicates the instance in time.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetModeToRealTime ()</computeroutput> - Get/Set the PlayMode for running/playing the animation scene. In the Sequence mode, all the frames are generated one after the other. The time reported to each Tick of the constituent cues (during Play) is incremented by 1/frame rate, irrespective of the current time. In the RealTime mode, time indicates the instance in time.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetPlayMode ()</computeroutput> - Get/Set the PlayMode for running/playing the animation scene. In the Sequence mode, all the frames are generated one after the other. The time reported to each Tick of the constituent cues (during Play) is incremented by 1/frame rate, irrespective of the current time. In the RealTime mode, time indicates the instance in time.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFrameRate (double )</computeroutput> - Get/Set the frame rate (in frames per second). This parameter affects only in the Sequence mode. The time interval indicated to each cue on every tick is progressed by 1/frame-rate seconds.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetFrameRate ()</computeroutput> - Get/Set the frame rate (in frames per second). This parameter affects only in the Sequence mode. The time interval indicated to each cue on every tick is progressed by 1/frame-rate seconds.  </para></listitem>
<listitem>
<para><computeroutput>obj.AddCue (vtkAnimationCue cue)</computeroutput> - Add/Remove an AnimationCue to/from the Scene. It&apos;s an error to add a cue twice to the Scene.  </para></listitem>
<listitem>
<para><computeroutput>obj.RemoveCue (vtkAnimationCue cue)</computeroutput> - Add/Remove an AnimationCue to/from the Scene. It&apos;s an error to add a cue twice to the Scene.  </para></listitem>
<listitem>
<para><computeroutput>obj.RemoveAllCues ()</computeroutput> - Add/Remove an AnimationCue to/from the Scene. It&apos;s an error to add a cue twice to the Scene.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfCues ()</computeroutput> - Add/Remove an AnimationCue to/from the Scene. It&apos;s an error to add a cue twice to the Scene.  </para></listitem>
<listitem>
<para><computeroutput>obj.Play ()</computeroutput> - Starts playing the animation scene. Fires a vtkCommand::StartEvent before play beings and vtkCommand::EndEvent after play ends.  </para></listitem>
<listitem>
<para><computeroutput>obj.Stop ()</computeroutput> - Stops the animation scene that is running.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLoop (int )</computeroutput> - Enable/Disable animation loop.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetLoop ()</computeroutput> - Enable/Disable animation loop.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetAnimationTime (double time)</computeroutput> - Makes the state of the scene same as the given time.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetAnimationTime ()</computeroutput> - Makes the state of the scene same as the given time.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTimeMode (int mode)</computeroutput> - Overridden to allow change to Normalized mode only if none of the constituent cues is in Relative time mode.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsInPlay ()</computeroutput>  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
