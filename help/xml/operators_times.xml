<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="operators_times" kind="page">
    <compoundname>operators_times</compoundname>
    <title>TIMES Matrix Multiply Operator</title>
    <detaileddescription>
<para>Section: <ref refid="sec_operators_1sec_operators" kindref="member">Mathematical Operators</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Multiplies two numerical arrays. This operator is really a combination of three operators, all of which have the same general syntax: <verbatim>  y = a * b
</verbatim> where <computeroutput>a</computeroutput> and <computeroutput>b</computeroutput> are arrays of numerical type. The result <computeroutput>y</computeroutput> depends on which of the following three situations applies to the arguments <computeroutput>a</computeroutput> and <computeroutput>b</computeroutput>: <orderedlist>
<listitem>
<para><computeroutput>a</computeroutput> is a scalar, <computeroutput>b</computeroutput> is an arbitrary <computeroutput>n</computeroutput>-dimensional numerical array, in which case the output is the element-wise product of <computeroutput>b</computeroutput> with the scalar <computeroutput>a</computeroutput>.  </para></listitem>
<listitem>
<para><computeroutput>b</computeroutput> is a scalar, <computeroutput>a</computeroutput> is an arbitrary <computeroutput>n</computeroutput>-dimensional numerical array, in which case the output is the element-wise product of <computeroutput>a</computeroutput> with the scalar <computeroutput>b</computeroutput>.  </para></listitem>
<listitem>
<para><computeroutput>a,b</computeroutput> are conformant matrices, i.e., <computeroutput>a</computeroutput> is of size <computeroutput>M x K</computeroutput>, and <computeroutput>b</computeroutput> is of size <computeroutput>K x N</computeroutput>, in which case the output is of size <computeroutput>M x N</computeroutput> and is the matrix product of <computeroutput>a</computeroutput>, and <computeroutput>b</computeroutput>.  </para></listitem>
</orderedlist>
Matrix multiplication is only defined for matrices of type <computeroutput>double</computeroutput> and <computeroutput>single</computeroutput>. </para></sect1>
<sect1 id="transforms_svd_1Function">
<title>Internals</title>
<para>There are three formulae for the times operator. For the first form <formula id="135">\[ y(m_1,\ldots,m_d) = a \times b(m_1,\ldots,m_d), \]</formula> and the second form <formula id="107">\[ y(m_1,\ldots,m_d) = a(m_1,\ldots,m_d) \times b. \]</formula> In the third form, the output is the matrix product of the arguments <formula id="136">\[ y(m,n) = \sum_{k=1}^{K} a(m,k) b(k,n) \]</formula> </para></sect1>
<sect1 id="variables_matrix_1Examples">
<title>Examples</title>
<para>Here are some examples of using the matrix multiplication operator. First, the scalar examples (types 1 and 2 from the list above):</para><para><verbatim>--&gt; a = [1,3,4;0,2,1]

a = 
 1 3 4 
 0 2 1 

--&gt; b = a * 2

b = 
 2 6 8 
 0 4 2 
</verbatim></para><para>The matrix form, where the first argument is <computeroutput>2 x 3</computeroutput>, and the second argument is <computeroutput>3 x 1</computeroutput>, so that the product is size <computeroutput>2 x 1</computeroutput>.</para><para><verbatim>--&gt; a = [1,2,0;4,2,3]

a = 
 1 2 0 
 4 2 3 

--&gt; b = [5;3;1]

b = 
 5 
 3 
 1 

--&gt; c = a*b

c = 
 11 
 29 
</verbatim></para><para>Note that the output is double precision. </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
