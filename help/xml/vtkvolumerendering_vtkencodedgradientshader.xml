<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkvolumerendering_vtkencodedgradientshader" kind="page">
    <compoundname>vtkvolumerendering_vtkencodedgradientshader</compoundname>
    <title>vtkEncodedGradientShader</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkvolumerendering_1sec_vtkvolumerendering" kindref="member">Visualization Toolkit Volume Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkEncodedGradientShader computes shading tables for encoded normals that indicates the amount of diffuse and specular illumination that is received from all light sources at a surface location with that normal. For diffuse illumination this is accurate, but for specular illumination it is approximate for perspective projections since the center view direction is always used as the view direction. Since the shading table is dependent on the volume (for the transformation that must be applied to the normals to put them into world coordinates) there is a shading table per volume. This is necessary because multiple volumes can share a volume mapper.</para><para>To create an instance of class vtkEncodedGradientShader, simply invoke its constructor as follows <verbatim>  obj = vtkEncodedGradientShader
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkEncodedGradientShader has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkEncodedGradientShader class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkEncodedGradientShader = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkEncodedGradientShader = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetZeroNormalDiffuseIntensity (float )</computeroutput> - Set / Get the intensity diffuse / specular light used for the zero normals.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetZeroNormalDiffuseIntensityMinValue ()</computeroutput> - Set / Get the intensity diffuse / specular light used for the zero normals.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetZeroNormalDiffuseIntensityMaxValue ()</computeroutput> - Set / Get the intensity diffuse / specular light used for the zero normals.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetZeroNormalDiffuseIntensity ()</computeroutput> - Set / Get the intensity diffuse / specular light used for the zero normals.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetZeroNormalSpecularIntensity (float )</computeroutput> - Set / Get the intensity diffuse / specular light used for the zero normals.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetZeroNormalSpecularIntensityMinValue ()</computeroutput> - Set / Get the intensity diffuse / specular light used for the zero normals.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetZeroNormalSpecularIntensityMaxValue ()</computeroutput> - Set / Get the intensity diffuse / specular light used for the zero normals.  </para></listitem>
<listitem>
<para><computeroutput>float = obj.GetZeroNormalSpecularIntensity ()</computeroutput> - Set / Get the intensity diffuse / specular light used for the zero normals.  </para></listitem>
<listitem>
<para><computeroutput>obj.UpdateShadingTable (vtkRenderer ren, vtkVolume vol, vtkEncodedGradientEstimator gradest)</computeroutput> - Cause the shading table to be updated  </para></listitem>
<listitem>
<para><computeroutput>obj.SetActiveComponent (int )</computeroutput> - Set the active component for shading. This component&apos;s ambient / diffuse / specular / specular power values will be used to create the shading table. The default is 1.0  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetActiveComponentMinValue ()</computeroutput> - Set the active component for shading. This component&apos;s ambient / diffuse / specular / specular power values will be used to create the shading table. The default is 1.0  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetActiveComponentMaxValue ()</computeroutput> - Set the active component for shading. This component&apos;s ambient / diffuse / specular / specular power values will be used to create the shading table. The default is 1.0  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetActiveComponent ()</computeroutput> - Set the active component for shading. This component&apos;s ambient / diffuse / specular / specular power values will be used to create the shading table. The default is 1.0  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
