<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="class_class" kind="page">
    <compoundname>class_class</compoundname>
    <title>CLASS Class Support Function</title>
    <detaileddescription>
<para>Section: <ref refid="sec_class_1sec_class" kindref="member">Object Oriented Programming</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>There are several uses for the <computeroutput>class</computeroutput> function. The first version takes a single argument, and returns the class of that variable. The syntax for this form is <verbatim>  classname = class(variable)
</verbatim> and it returns a string containing the name of the class for <computeroutput>variable</computeroutput>. The second form of the class function is used to construct an object of a specific type based on a structure which contains data elements for the class. The syntax for this version is <verbatim>  classvar = class(template, classname, parent1, parent2,...)
</verbatim> This should be called inside the constructor for the class. The resulting class will be of the type <computeroutput>classname</computeroutput>, and will be derived from <computeroutput>parent1</computeroutput>, <computeroutput>parent2</computeroutput>, etc. The <computeroutput>template</computeroutput> argument should be a structure array that contains the members of the class. See the <computeroutput>constructors</computeroutput> help for some details on how to use the <computeroutput>class</computeroutput> function. Note that if the <computeroutput>template</computeroutput> argument is an empty structure matrix, then the resulting variable has no fields beyond those inherited from the parent classes. </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
