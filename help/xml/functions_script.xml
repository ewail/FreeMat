<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="functions_script" kind="page">
    <compoundname>functions_script</compoundname>
    <title>SCRIPT Script Files</title>
    <detaileddescription>
<para>Section: <ref refid="sec_functions_1sec_functions" kindref="member">Functions and Scripts</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>A script is a sequence of FreeMat commands contained in a <computeroutput>.m</computeroutput> file. When the script is called (via the name of the file), the effect is the same as if the commands inside the script file were issued one at a time from the keyboard. Unlike <computeroutput>function</computeroutput> files (which have the same extension, but have a <computeroutput>function</computeroutput> declaration), script files share the same environment as their callers. Hence, assignments, etc, made inside a script are visible to the caller (which is not the case for functions. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>Here is an example of a script that makes some simple assignments and <computeroutput>printf</computeroutput> statements.</para><para><verbatim>     tscript.m
</verbatim></para><para><verbatim>a = 13;
printf(&apos;a is %d\n&apos;,a);
b = a + 32
</verbatim></para><para>If we execute the script and then look at the defined variables</para><para><verbatim>--&gt; tscript
a is 13

b = 
 45 

--&gt; who
  Variable Name       Type   Flags             Size
              a    double                    [1x1]
            ans    double                    [0x0]
              b    double                    [1x1]
</verbatim></para><para>we see that <computeroutput>a</computeroutput> and <computeroutput>b</computeroutput> are defined appropriately. </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
