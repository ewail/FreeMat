<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkimagedatageometryfilter" kind="page">
    <compoundname>vtkgraphics_vtkimagedatageometryfilter</compoundname>
    <title>vtkImageDataGeometryFilter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkImageDataGeometryFilter is a filter that extracts geometry from a structured points dataset. By specifying appropriate i-j-k indices (via the &quot;Extent&quot; instance variable), it is possible to extract a point, a line, a plane (i.e., image), or a &quot;volume&quot; from dataset. (Since the output is of type polydata, the volume is actually a (n x m x o) region of points.)</para><para>The extent specification is zero-offset. That is, the first k-plane in a 50x50x50 volume is given by (0,49, 0,49, 0,0).</para><para>To create an instance of class vtkImageDataGeometryFilter, simply invoke its constructor as follows <verbatim>  obj = vtkImageDataGeometryFilter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkImageDataGeometryFilter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkImageDataGeometryFilter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImageDataGeometryFilter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImageDataGeometryFilter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtent (int extent[6])</computeroutput> - Set / get the extent (imin,imax, jmin,jmax, kmin,kmax) indices.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtent (int iMin, int iMax, int jMin, int jMax, int kMin, int kMax)</computeroutput> - Set / get the extent (imin,imax, jmin,jmax, kmin,kmax) indices.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetThresholdCells (int )</computeroutput> - Set ThresholdCells to true if you wish to skip any voxel/pixels which have scalar values less than the specified threshold. Currently this functionality is only implemented for 2D imagedata  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetThresholdCells ()</computeroutput> - Set ThresholdCells to true if you wish to skip any voxel/pixels which have scalar values less than the specified threshold. Currently this functionality is only implemented for 2D imagedata  </para></listitem>
<listitem>
<para><computeroutput>obj.ThresholdCellsOn ()</computeroutput> - Set ThresholdCells to true if you wish to skip any voxel/pixels which have scalar values less than the specified threshold. Currently this functionality is only implemented for 2D imagedata  </para></listitem>
<listitem>
<para><computeroutput>obj.ThresholdCellsOff ()</computeroutput> - Set ThresholdCells to true if you wish to skip any voxel/pixels which have scalar values less than the specified threshold. Currently this functionality is only implemented for 2D imagedata  </para></listitem>
<listitem>
<para><computeroutput>obj.SetThresholdValue (double )</computeroutput> - Set ThresholdValue to the scalar value by which to threshhold cells when extracting geometry when ThresholdCells is true. Cells with scalar values greater than the threshold will be output.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetThresholdValue ()</computeroutput> - Set ThresholdValue to the scalar value by which to threshhold cells when extracting geometry when ThresholdCells is true. Cells with scalar values greater than the threshold will be output.  </para></listitem>
<listitem>
<para><computeroutput>obj.ThresholdValueOn ()</computeroutput> - Set ThresholdValue to the scalar value by which to threshhold cells when extracting geometry when ThresholdCells is true. Cells with scalar values greater than the threshold will be output.  </para></listitem>
<listitem>
<para><computeroutput>obj.ThresholdValueOff ()</computeroutput> - Set ThresholdValue to the scalar value by which to threshhold cells when extracting geometry when ThresholdCells is true. Cells with scalar values greater than the threshold will be output.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOutputTriangles (int )</computeroutput> - Set OutputTriangles to true if you wish to generate triangles instead of quads when extracting cells from 2D imagedata Currently this functionality is only implemented for 2D imagedata  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetOutputTriangles ()</computeroutput> - Set OutputTriangles to true if you wish to generate triangles instead of quads when extracting cells from 2D imagedata Currently this functionality is only implemented for 2D imagedata  </para></listitem>
<listitem>
<para><computeroutput>obj.OutputTrianglesOn ()</computeroutput> - Set OutputTriangles to true if you wish to generate triangles instead of quads when extracting cells from 2D imagedata Currently this functionality is only implemented for 2D imagedata  </para></listitem>
<listitem>
<para><computeroutput>obj.OutputTrianglesOff ()</computeroutput> - Set OutputTriangles to true if you wish to generate triangles instead of quads when extracting cells from 2D imagedata Currently this functionality is only implemented for 2D imagedata  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
