<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="external_ctyperead" kind="page">
    <compoundname>external_ctyperead</compoundname>
    <title>CTYPEREAD Read a C Structure From File</title>
    <detaileddescription>
<para>Section: <ref refid="sec_external_1sec_external" kindref="member">FreeMat External Interface</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The <computeroutput>ctyperead</computeroutput> function is a convenience function for reading a C structure from a file. This is generally a very bad idea, as direct writing of C structures to files is notoriously unportable. Consider yourself warned. The syntax for this function is <verbatim>   a = ctyperead(fid,&apos;typename&apos;)
</verbatim> where <computeroutput>&apos;typename&apos;</computeroutput> is a string containing the name of the C structure as defined using <computeroutput>ctypedefine</computeroutput>, and <computeroutput>fid</computeroutput> is the file handle returned by the <computeroutput>fopen</computeroutput> command. Note that this form will read a single structure from the file. If you want to read multiple structures into an array, use the following form <verbatim>   a = ctyperead(fid,&apos;typename&apos;,count)
</verbatim> Note that the way this function works is by using <computeroutput>ctypesize</computeroutput> to compute the size of the structure, reading that many bytes from the file, and then calling <computeroutput>ctypethaw</computeroutput> on the resulting buffer. A consequence of this behavior is that the byte-endian corrective behavior of FreeMat does not work. </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
