<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="curvefit_polyfit" kind="page">
    <compoundname>curvefit_polyfit</compoundname>
    <title>POLYFIT Fit Polynomial To Data</title>
    <detaileddescription>
<para>Section: <ref refid="sec_curvefit_1sec_curvefit" kindref="member">Optimization and Curve Fitting</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The <computeroutput>polyfit</computeroutput> routine has the following syntax <verbatim>  p = polyfit(x,y,n)
</verbatim> where <computeroutput>x</computeroutput> and <computeroutput>y</computeroutput> are vectors of the same size, and <computeroutput>n</computeroutput> is the degree of the approximating polynomial. The resulting vector <computeroutput>p</computeroutput> forms the coefficients of the optimal polynomial (in descending degree) that fit <computeroutput>y</computeroutput> with <computeroutput>x</computeroutput>. </para></sect1>
<sect1 id="transforms_svd_1Function">
<title>Internals</title>
<para>The <computeroutput>polyfit</computeroutput> routine finds the approximating polynomial <formula id="10">\[ p(x) = p_1 x^n + p_2 x^{n-1} + \dots + p_n x + p_{n+1} \]</formula> such that <formula id="11">\[ \sum_{i} (p(x_i) - y_i)^2 \]</formula> is minimized. It does so by forming the Vandermonde matrix and solving the resulting set of equations using the backslash operator. Note that the Vandermonde matrix can become poorly conditioned with large <computeroutput>n</computeroutput> quite rapidly. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>A classic example from Edwards and Penny, consider the problem of approximating a sinusoid with a polynomial. We start with a vector of points evenly spaced on the unit interval, along with a vector of the sine of these points.</para><para><verbatim>--&gt; x = linspace(0,1,20);
--&gt; y = sin(2*pi*x);
--&gt; plot(x,y,&apos;r-&apos;)
</verbatim></para><para>The resulting plot is shown here <image type="html" name="polyfit1.png"></image>
 <image type="latex" name="polyfit1" width="12cm">polyfit1</image>
 Next, we fit a third degree polynomial to the sine, and use <computeroutput>polyval</computeroutput> to plot it</para><para><verbatim>--&gt; p = polyfit(x,y,3)

p = 
   21.9170  -32.8756   11.1897   -0.1156 

--&gt; f = polyval(p,x);
--&gt; plot(x,y,&apos;r-&apos;,x,f,&apos;ko&apos;);
</verbatim></para><para>The resulting plot is shown here <image type="html" name="polyfit2.png"></image>
 <image type="latex" name="polyfit2" width="12cm">polyfit2</image>
 Increasing the order improves the fit, as</para><para><verbatim>--&gt; p = polyfit(x,y,11)

p = 

 Columns 1 to 7

   12.4644  -68.5541  130.0555  -71.0940  -38.2814  -14.1222   85.1018 

 Columns 8 to 12

   -0.5642  -41.2861   -0.0029    6.2832   -0.0000 

--&gt; f = polyval(p,x);
--&gt; plot(x,y,&apos;r-&apos;,x,f,&apos;ko&apos;);
</verbatim></para><para>The resulting plot is shown here <image type="html" name="polyfit3.png"></image>
 <image type="latex" name="polyfit3" width="12cm">polyfit3</image>
 </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
