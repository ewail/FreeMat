<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="operators_dottimes" kind="page">
    <compoundname>operators_dottimes</compoundname>
    <title>DOTTIMES Element-wise Multiplication Operator</title>
    <detaileddescription>
<para>Section: <ref refid="sec_operators_1sec_operators" kindref="member">Mathematical Operators</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Multiplies two numerical arrays (elementwise). There are two forms for its use, both with the same general syntax: <verbatim>  y = a .* b
</verbatim> where <computeroutput>a</computeroutput> and <computeroutput>b</computeroutput> are <computeroutput>n</computeroutput>-dimensional arrays of numerical type. In the first case, the two arguments are the same size, in which case, the output <computeroutput>y</computeroutput> is the same size as the inputs, and is the element-wise product of <computeroutput>a</computeroutput> and <computeroutput>b</computeroutput>. In the second case, either <computeroutput>a</computeroutput> or <computeroutput>b</computeroutput> is a scalar, in which case <computeroutput>y</computeroutput> is the same size as the larger argument, and is the product of the scalar with each element of the other argument.</para><para>The rules for manipulating types has changed in FreeMat 4.0. See <computeroutput>typerules</computeroutput> for more details.</para></sect1>
<sect1 id="transforms_svd_1Function">
<title>Internals</title>
<para>There are three formulae for the dot-times operator, depending on the sizes of the three arguments. In the most general case, in which the two arguments are the same size, the output is computed via: <formula id="105">\[ y(m_1,\ldots,m_d) = a(m_1,\ldots,m_d) \times b(m_1,\ldots,m_d) \]</formula> If <computeroutput>a</computeroutput> is a scalar, then the output is computed via <formula id="106">\[ y(m_1,\ldots,m_d) = a \times b(m_1,\ldots,m_d). \]</formula> On the other hand, if <computeroutput>b</computeroutput> is a scalar, then the output is computed via <formula id="107">\[ y(m_1,\ldots,m_d) = a(m_1,\ldots,m_d) \times b. \]</formula> </para></sect1>
<sect1 id="variables_matrix_1Examples">
<title>Examples</title>
<para>Here are some examples of using the dottimes operator. First, a straight-forward usage of the <computeroutput>.*</computeroutput> operator. The first example is straightforward:</para><para><verbatim>--&gt; 3 .* 8

ans = 
 24 
</verbatim></para><para>Next, we multiply a scalar by a vector of values:</para><para><verbatim>--&gt; 3.1 .* [2,4,5,6,7]

ans = 
    6.2000   12.4000   15.5000   18.6000   21.7000 
</verbatim></para><para>With complex values</para><para><verbatim>--&gt; a = 3 + 4*i

a = 
   3.0000 +  4.0000i 

--&gt; b = a .* 2

b = 
   6.0000 +  8.0000i 
</verbatim></para><para>Finally, the element-wise version:</para><para><verbatim>--&gt; a = [1,2;3,4]

a = 
 1 2 
 3 4 

--&gt; b = [2,3;6,7]

b = 
 2 3 
 6 7 

--&gt; c = a .* b

c = 
  2  6 
 18 28 
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
