<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkhybrid_vtklegendboxactor" kind="page">
    <compoundname>vtkhybrid_vtklegendboxactor</compoundname>
    <title>vtkLegendBoxActor</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkhybrid_1sec_vtkhybrid" kindref="member">Visualization Toolkit Hybrid Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkLegendBoxActor is used to associate a symbol with a text string. The user specifies a vtkPolyData to use as the symbol, and a string associated with the symbol. The actor can then be placed in the scene in the same way that any other vtkActor2D can be used.</para><para>To use this class, you must define the position of the legend box by using the superclasses&apos; vtkActor2D::Position coordinate and Position2 coordinate. Then define the set of symbols and text strings that make up the menu box. The font attributes of the entries can be set through the vtkTextProperty associated to this actor. The class will scale the symbols and text to fit in the legend box defined by (Position,Position2). Optional features like turning on a border line and setting the spacing between the border and the symbols/text can also be set.</para><para>To create an instance of class vtkLegendBoxActor, simply invoke its constructor as follows <verbatim>  obj = vtkLegendBoxActor
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkLegendBoxActor has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkLegendBoxActor class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkLegendBoxActor = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkLegendBoxActor = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetNumberOfEntries (int num)</computeroutput> - Specify the number of entries in the legend box.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfEntries ()</computeroutput> - Add an entry to the legend box. You must supply a vtkPolyData to be used as a symbol (it can be NULL) and a text string (which also can be NULL). The vtkPolyData is assumed to be defined in the x-y plane, and the text is assumed to be a single line in height. Note that when this method is invoked previous entries are deleted. Also supply a text string and optionally a color. (If a color is not specified, then the entry color is the same as this actor&apos;s color.) (Note: use the set methods when you use SetNumberOfEntries().)  </para></listitem>
<listitem>
<para><computeroutput>obj.SetEntry (int i, vtkPolyData symbol, string string, double color[3])</computeroutput> - Add an entry to the legend box. You must supply a vtkPolyData to be used as a symbol (it can be NULL) and a text string (which also can be NULL). The vtkPolyData is assumed to be defined in the x-y plane, and the text is assumed to be a single line in height. Note that when this method is invoked previous entries are deleted. Also supply a text string and optionally a color. (If a color is not specified, then the entry color is the same as this actor&apos;s color.) (Note: use the set methods when you use SetNumberOfEntries().)  </para></listitem>
<listitem>
<para><computeroutput>obj.SetEntrySymbol (int i, vtkPolyData symbol)</computeroutput> - Add an entry to the legend box. You must supply a vtkPolyData to be used as a symbol (it can be NULL) and a text string (which also can be NULL). The vtkPolyData is assumed to be defined in the x-y plane, and the text is assumed to be a single line in height. Note that when this method is invoked previous entries are deleted. Also supply a text string and optionally a color. (If a color is not specified, then the entry color is the same as this actor&apos;s color.) (Note: use the set methods when you use SetNumberOfEntries().)  </para></listitem>
<listitem>
<para><computeroutput>obj.SetEntryString (int i, string string)</computeroutput> - Add an entry to the legend box. You must supply a vtkPolyData to be used as a symbol (it can be NULL) and a text string (which also can be NULL). The vtkPolyData is assumed to be defined in the x-y plane, and the text is assumed to be a single line in height. Note that when this method is invoked previous entries are deleted. Also supply a text string and optionally a color. (If a color is not specified, then the entry color is the same as this actor&apos;s color.) (Note: use the set methods when you use SetNumberOfEntries().)  </para></listitem>
<listitem>
<para><computeroutput>obj.SetEntryColor (int i, double color[3])</computeroutput> - Add an entry to the legend box. You must supply a vtkPolyData to be used as a symbol (it can be NULL) and a text string (which also can be NULL). The vtkPolyData is assumed to be defined in the x-y plane, and the text is assumed to be a single line in height. Note that when this method is invoked previous entries are deleted. Also supply a text string and optionally a color. (If a color is not specified, then the entry color is the same as this actor&apos;s color.) (Note: use the set methods when you use SetNumberOfEntries().)  </para></listitem>
<listitem>
<para><computeroutput>obj.SetEntryColor (int i, double r, double g, double b)</computeroutput> - Add an entry to the legend box. You must supply a vtkPolyData to be used as a symbol (it can be NULL) and a text string (which also can be NULL). The vtkPolyData is assumed to be defined in the x-y plane, and the text is assumed to be a single line in height. Note that when this method is invoked previous entries are deleted. Also supply a text string and optionally a color. (If a color is not specified, then the entry color is the same as this actor&apos;s color.) (Note: use the set methods when you use SetNumberOfEntries().)  </para></listitem>
<listitem>
<para><computeroutput>vtkPolyData = obj.GetEntrySymbol (int i)</computeroutput> - Add an entry to the legend box. You must supply a vtkPolyData to be used as a symbol (it can be NULL) and a text string (which also can be NULL). The vtkPolyData is assumed to be defined in the x-y plane, and the text is assumed to be a single line in height. Note that when this method is invoked previous entries are deleted. Also supply a text string and optionally a color. (If a color is not specified, then the entry color is the same as this actor&apos;s color.) (Note: use the set methods when you use SetNumberOfEntries().)  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetEntryString (int i)</computeroutput> - Add an entry to the legend box. You must supply a vtkPolyData to be used as a symbol (it can be NULL) and a text string (which also can be NULL). The vtkPolyData is assumed to be defined in the x-y plane, and the text is assumed to be a single line in height. Note that when this method is invoked previous entries are deleted. Also supply a text string and optionally a color. (If a color is not specified, then the entry color is the same as this actor&apos;s color.) (Note: use the set methods when you use SetNumberOfEntries().)  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetEntryColor (int i)</computeroutput> - Add an entry to the legend box. You must supply a vtkPolyData to be used as a symbol (it can be NULL) and a text string (which also can be NULL). The vtkPolyData is assumed to be defined in the x-y plane, and the text is assumed to be a single line in height. Note that when this method is invoked previous entries are deleted. Also supply a text string and optionally a color. (If a color is not specified, then the entry color is the same as this actor&apos;s color.) (Note: use the set methods when you use SetNumberOfEntries().)  </para></listitem>
<listitem>
<para><computeroutput>obj.SetEntryTextProperty (vtkTextProperty p)</computeroutput> - Set/Get the text property.  </para></listitem>
<listitem>
<para><computeroutput>vtkTextProperty = obj.GetEntryTextProperty ()</computeroutput> - Set/Get the text property.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetBorder (int )</computeroutput> - Set/Get the flag that controls whether a border will be drawn around the legend box.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetBorder ()</computeroutput> - Set/Get the flag that controls whether a border will be drawn around the legend box.  </para></listitem>
<listitem>
<para><computeroutput>obj.BorderOn ()</computeroutput> - Set/Get the flag that controls whether a border will be drawn around the legend box.  </para></listitem>
<listitem>
<para><computeroutput>obj.BorderOff ()</computeroutput> - Set/Get the flag that controls whether a border will be drawn around the legend box.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLockBorder (int )</computeroutput> - Set/Get the flag that controls whether the border and legend placement is locked into the rectangle defined by (Position,Position2). If off, then the legend box will adjust its size so that the border fits nicely around the text and symbols. (The ivar is off by default.) Note: the legend box is guaranteed to lie within the original border definition.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetLockBorder ()</computeroutput> - Set/Get the flag that controls whether the border and legend placement is locked into the rectangle defined by (Position,Position2). If off, then the legend box will adjust its size so that the border fits nicely around the text and symbols. (The ivar is off by default.) Note: the legend box is guaranteed to lie within the original border definition.  </para></listitem>
<listitem>
<para><computeroutput>obj.LockBorderOn ()</computeroutput> - Set/Get the flag that controls whether the border and legend placement is locked into the rectangle defined by (Position,Position2). If off, then the legend box will adjust its size so that the border fits nicely around the text and symbols. (The ivar is off by default.) Note: the legend box is guaranteed to lie within the original border definition.  </para></listitem>
<listitem>
<para><computeroutput>obj.LockBorderOff ()</computeroutput> - Set/Get the flag that controls whether the border and legend placement is locked into the rectangle defined by (Position,Position2). If off, then the legend box will adjust its size so that the border fits nicely around the text and symbols. (The ivar is off by default.) Note: the legend box is guaranteed to lie within the original border definition.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetBox (int )</computeroutput> - Set/Get the flag that controls whether a box will be drawn/filled corresponding to the legend box.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetBox ()</computeroutput> - Set/Get the flag that controls whether a box will be drawn/filled corresponding to the legend box.  </para></listitem>
<listitem>
<para><computeroutput>obj.BoxOn ()</computeroutput> - Set/Get the flag that controls whether a box will be drawn/filled corresponding to the legend box.  </para></listitem>
<listitem>
<para><computeroutput>obj.BoxOff ()</computeroutput> - Set/Get the flag that controls whether a box will be drawn/filled corresponding to the legend box.  </para></listitem>
<listitem>
<para><computeroutput>vtkProperty2D = obj.GetBoxProperty ()</computeroutput> - Get the box vtkProperty2D.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPadding (int )</computeroutput> - Set/Get the padding between the legend entries and the border. The value is specified in pixels.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetPaddingMinValue ()</computeroutput> - Set/Get the padding between the legend entries and the border. The value is specified in pixels.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetPaddingMaxValue ()</computeroutput> - Set/Get the padding between the legend entries and the border. The value is specified in pixels.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetPadding ()</computeroutput> - Set/Get the padding between the legend entries and the border. The value is specified in pixels.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetScalarVisibility (int )</computeroutput> - Turn on/off flag to control whether the symbol&apos;s scalar data is used to color the symbol. If off, the color of the vtkLegendBoxActor is used.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetScalarVisibility ()</computeroutput> - Turn on/off flag to control whether the symbol&apos;s scalar data is used to color the symbol. If off, the color of the vtkLegendBoxActor is used.  </para></listitem>
<listitem>
<para><computeroutput>obj.ScalarVisibilityOn ()</computeroutput> - Turn on/off flag to control whether the symbol&apos;s scalar data is used to color the symbol. If off, the color of the vtkLegendBoxActor is used.  </para></listitem>
<listitem>
<para><computeroutput>obj.ScalarVisibilityOff ()</computeroutput> - Turn on/off flag to control whether the symbol&apos;s scalar data is used to color the symbol. If off, the color of the vtkLegendBoxActor is used.  </para></listitem>
<listitem>
<para><computeroutput>obj.ShallowCopy (vtkProp prop)</computeroutput> - Shallow copy of this scaled text actor. Overloads the virtual vtkProp method.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
