<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="io_csvread" kind="page">
    <compoundname>io_csvread</compoundname>
    <title>CSVREAD Read Comma Separated Value (CSV) File</title>
    <detaileddescription>
<para>Section: <ref refid="sec_io_1sec_io" kindref="member">Input/Ouput Functions</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The <computeroutput>csvread</computeroutput> function reads a text file containing comma separated values (CSV), and returns the resulting numeric matrix (2D). The function supports multiple syntaxes. The first syntax for <computeroutput>csvread</computeroutput> is <verbatim>   x = csvread(&apos;filename&apos;)
</verbatim> which attempts to read the entire CSV file into array <computeroutput>x</computeroutput>. The file can contain only numeric values. Each entry in the file should be separated from other entries by a comma. However, FreeMat will attempt to make sense of the entries if the comma is missing (e.g., a space separated file will also parse correctly). For complex values, you must be careful with the spaces). The second form of <computeroutput>csvread</computeroutput> allows you to specify the first row and column (zero-based index) <verbatim>  x = csvread(&apos;filename&apos;,firstrow,firstcol)
</verbatim> The last form allows you to specify the range to read also. This form is <verbatim>  x = csvread(&apos;filename&apos;,firstrow,firstcol,readrange)
</verbatim> where <computeroutput>readrange</computeroutput> is either a 4-vector of the form <computeroutput>[R1,C1,R2,C2]</computeroutput>, where <computeroutput>R1,C1</computeroutput> is the first row and column to use, and <computeroutput>R2,C2</computeroutput> is the last row and column to use. You can also specify the <computeroutput>readrange</computeroutput> as a spreadsheet range <computeroutput>B12..C34</computeroutput>, in which case the index for the range is 1-based (as in a typical spreadsheet), so that <computeroutput>A1</computeroutput> is the first cell in the upper left corner. Note also that <computeroutput>csvread</computeroutput> is somewhat limited. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>Here is an example of a CSV file that we wish to read in</para><para><verbatim>     sample_data.csv
</verbatim></para><para><verbatim>10, 12, 13, 00, 45, 16
09, 11, 52, 93, 05, 06
01, 03, 04, 04, 90, -3
14, 17, 13, 67, 30, 43
21, 33, 14, 44, 01, 00
</verbatim></para><para>We start by reading the entire file</para><para><verbatim>--&gt; csvread(&apos;sample_data.csv&apos;)

ans = 
 10 12 13  0 45 16 
  9 11 52 93  5  6 
  1  3  4  4 90 -3 
 14 17 13 67 30 43 
 21 33 14 44  1  0 
</verbatim></para><para>Next, we read everything starting with the second row, and third column</para><para><verbatim>--&gt; csvread(&apos;sample_data.csv&apos;,1,2)

ans = 
 52 93  5  6 
  4  4 90 -3 
 13 67 30 43 
 14 44  1  0 
</verbatim></para><para>Finally, we specify that we only want the <computeroutput>3 x 3</computeroutput> submatrix starting with the second row, and third column</para><para><verbatim>--&gt; csvread(&apos;sample_data.csv&apos;,1,2,[1,2,3,4])

ans = 
 52 93  5 
  4  4 90 
 13 67 30 
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
