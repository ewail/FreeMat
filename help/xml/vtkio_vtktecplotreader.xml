<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkio_vtktecplotreader" kind="page">
    <compoundname>vtkio_vtktecplotreader</compoundname>
    <title>vtkTecplotReader</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkio_1sec_vtkio" kindref="member">Visualization Toolkit IO Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkTecplotReader parses an ASCII Tecplot file to get a vtkMultiBlockDataSet object made up of several vtkDataSet objects, of which each is of type either vtkStructuredGrid or vtkUnstructuredGrid. Each vtkDataSet object maintains the geometry, topology, and some associated attributes describing physical properties.</para><para>Tecplot treats 3D coordinates (only one or two coordinates might be explicitly specified in a file) as varaibles too, whose names (e.g., &apos;X&apos; / &apos;x&apos; / &apos;I&apos;, &apos;Y&apos; / &apos;y&apos; / &apos;J&apos;, &apos;Z&apos; / &apos;z&apos; / &apos;K&apos;) are provided in the variables list (the &apos;VARIABLES&apos; section). These names are then followed in the list by those of other traditional variables or attributes (node- based and / or cell-based data with the mode specified via token &apos;VAR LOCATION&apos;, to be extracted to create vtkPointData and / or vtkCellData). Each zone described afterwards (in the &apos;ZONE&apos;s section) provides the specific values of the aforementioned variables (including 3D coordinates), in the same order as indicated by the variable-names list, through either POINT-packing (i.e., tuple-based storage) or BLOCK-packing (component-based storage). In particular, the first / description line of each zone tells the type of all the constituent cells as the connectivity / topology information. In other words, the entire dataset is made up of multiple zones (blocks), of which each maintains a set of cells of the same type (&apos;BRICK&apos;, &apos;TRIANGLE&apos;, &apos;QUADRILATERAL&apos;, &apos;TETRAHEDRON&apos;, and &apos;POINT&apos; in Tecplot terms). In addition, the description line of each zone specifies the zone name, dimensionality information (size of each dimension for a structured zone), number of nodes, and number of cells. Information about the file format is available at <ulink url="http://download.tecplot.com/360/dataformat.pdf">http://download.tecplot.com/360/dataformat.pdf</ulink>.</para><para>To create an instance of class vtkTecplotReader, simply invoke its constructor as follows <verbatim>  obj = vtkTecplotReader
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkTecplotReader has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkTecplotReader class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkTecplotReader = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkTecplotReader = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfVariables ()</computeroutput> - Get the number of all variables (including 3D coordinates).  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFileName (string fileName)</computeroutput> - Specify a Tecplot ASCII file for data loading.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetDataTitle ()</computeroutput> - Get the Tecplot data title.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfBlocks ()</computeroutput> - Get the number of blocks (i.e., zones in Tecplot terms).  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetBlockName (int blockIdx)</computeroutput> - Get the name of a block specified by a zero-based index. NULL is returned for an invalid block index.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfDataAttributes ()</computeroutput> - Get the number of standard data attributes (node-based and cell-based), excluding 3D coordinates.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetDataAttributeName (int attrIndx)</computeroutput> - Get the name of a zero-based data attribute (not 3D coordinates). NULL is returned for an invalid attribute index.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsDataAttributeCellBased (string attrName)</computeroutput> - Get the type (0 for node-based and 1 for cell-based) of a specified data attribute (not 3D coordinates). -1 is returned for an invalid attribute name.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsDataAttributeCellBased (int attrIndx)</computeroutput> - Get the type (0 for node-based and 1 for cell-based) of a specified data attribute (not 3D coordinates). -1 is returned for an invalid attribute index.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfDataArrays ()</computeroutput> - Get the number of all data attributes (point data and cell data).  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetDataArrayName (int arrayIdx)</computeroutput> - Get the name of a data array specified by the zero-based index (arrayIdx).  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetDataArrayStatus (string arayName)</computeroutput> - Get the status of a specific data array (0: un-selected; 1: selected).  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDataArrayStatus (string arayName, int bChecked)</computeroutput> - Set the status of a specific data array (0: de-select; 1: select) specified by the name.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
