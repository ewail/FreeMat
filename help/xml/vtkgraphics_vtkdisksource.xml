<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkdisksource" kind="page">
    <compoundname>vtkgraphics_vtkdisksource</compoundname>
    <title>vtkDiskSource</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkDiskSource creates a polygonal disk with a hole in the center. The disk has zero height. The user can specify the inner and outer radius of the disk, and the radial and circumferential resolution of the polygonal representation.</para><para>To create an instance of class vtkDiskSource, simply invoke its constructor as follows <verbatim>  obj = vtkDiskSource
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkDiskSource has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkDiskSource class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkDiskSource = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkDiskSource = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInnerRadius (double )</computeroutput> - Specify inner radius of hole in disc.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetInnerRadiusMinValue ()</computeroutput> - Specify inner radius of hole in disc.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetInnerRadiusMaxValue ()</computeroutput> - Specify inner radius of hole in disc.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetInnerRadius ()</computeroutput> - Specify inner radius of hole in disc.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOuterRadius (double )</computeroutput> - Specify outer radius of disc.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetOuterRadiusMinValue ()</computeroutput> - Specify outer radius of disc.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetOuterRadiusMaxValue ()</computeroutput> - Specify outer radius of disc.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetOuterRadius ()</computeroutput> - Specify outer radius of disc.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetRadialResolution (int )</computeroutput> - Set the number of points in radius direction.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetRadialResolutionMinValue ()</computeroutput> - Set the number of points in radius direction.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetRadialResolutionMaxValue ()</computeroutput> - Set the number of points in radius direction.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetRadialResolution ()</computeroutput> - Set the number of points in radius direction.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCircumferentialResolution (int )</computeroutput> - Set the number of points in circumferential direction.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCircumferentialResolutionMinValue ()</computeroutput> - Set the number of points in circumferential direction.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCircumferentialResolutionMaxValue ()</computeroutput> - Set the number of points in circumferential direction.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCircumferentialResolution ()</computeroutput> - Set the number of points in circumferential direction.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
