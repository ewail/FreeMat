<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkrendering_vtkcolormaterialhelper" kind="page">
    <compoundname>vtkrendering_vtkcolormaterialhelper</compoundname>
    <title>vtkColorMaterialHelper</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkrendering_1sec_vtkrendering" kindref="member">Visualization Toolkit Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkColorMaterialHelper is a helper to assist in simulating the ColorMaterial behaviour of the default OpenGL pipeline. Look at vtkColorMaterialHelper_s for available GLSL functions.</para><para>To create an instance of class vtkColorMaterialHelper, simply invoke its constructor as follows <verbatim>  obj = vtkColorMaterialHelper
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkColorMaterialHelper has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkColorMaterialHelper class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkColorMaterialHelper = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkColorMaterialHelper = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.PrepareForRendering ()</computeroutput> - Prepares the shader i.e. reads color material paramters state from OpenGL. This must be called before the shader is bound.  </para></listitem>
<listitem>
<para><computeroutput>obj.Render ()</computeroutput> - Uploads any uniforms needed. This must be called only after the shader has been bound, but before rendering the geometry.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
