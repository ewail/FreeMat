<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkrendering_vtkimageviewer" kind="page">
    <compoundname>vtkrendering_vtkimageviewer</compoundname>
    <title>vtkImageViewer</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkrendering_1sec_vtkrendering" kindref="member">Visualization Toolkit Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkImageViewer is a convenience class for displaying a 2d image. It packages up the functionality found in vtkRenderWindow, vtkRenderer, vtkActor2D and vtkImageMapper into a single easy to use class. Behind the scenes these four classes are actually used to to provide the required functionality. vtkImageViewer is simply a wrapper around them.</para><para>To create an instance of class vtkImageViewer, simply invoke its constructor as follows <verbatim>  obj = vtkImageViewer
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkImageViewer has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkImageViewer class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImageViewer = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkImageViewer = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetWindowName ()</computeroutput> - Get name of rendering window  </para></listitem>
<listitem>
<para><computeroutput>obj.Render (void )</computeroutput> - Render the resulting image.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInput (vtkImageData in)</computeroutput> - Set/Get the input to the viewer.  </para></listitem>
<listitem>
<para><computeroutput>vtkImageData = obj.GetInput ()</computeroutput> - Set/Get the input to the viewer.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInputConnection (vtkAlgorithmOutput input)</computeroutput> - Set/Get the input to the viewer.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetWholeZMin ()</computeroutput> - What is the possible Min/ Max z slices available.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetWholeZMax ()</computeroutput> - What is the possible Min/ Max z slices available.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetZSlice ()</computeroutput> - Set/Get the current Z Slice to display  </para></listitem>
<listitem>
<para><computeroutput>obj.SetZSlice (int s)</computeroutput> - Set/Get the current Z Slice to display  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetColorWindow ()</computeroutput> - Sets window/level for mapping pixels to colors.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetColorLevel ()</computeroutput> - Sets window/level for mapping pixels to colors.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetColorWindow (double s)</computeroutput> - Sets window/level for mapping pixels to colors.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetColorLevel (double s)</computeroutput> - Sets window/level for mapping pixels to colors.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetGrayScaleHint ()</computeroutput> - By default this is a color viewer. GrayScaleHintOn will improve the appearance of gray scale images on some systems.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGrayScaleHint (int )</computeroutput> - By default this is a color viewer. GrayScaleHintOn will improve the appearance of gray scale images on some systems.  </para></listitem>
<listitem>
<para><computeroutput>obj.GrayScaleHintOn ()</computeroutput> - By default this is a color viewer. GrayScaleHintOn will improve the appearance of gray scale images on some systems.  </para></listitem>
<listitem>
<para><computeroutput>obj.GrayScaleHintOff ()</computeroutput> - By default this is a color viewer. GrayScaleHintOn will improve the appearance of gray scale images on some systems.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetPosition ()</computeroutput> - Set/Get the position in screen coordinates of the rendering window.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPosition (int a, int b)</computeroutput> - Set/Get the position in screen coordinates of the rendering window.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPosition (int a[2])</computeroutput> - Set/Get the position in screen coordinates of the rendering window.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetSize ()</computeroutput> - Set/Get the size of the window in screen coordinates in pixels.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSize (int a, int b)</computeroutput> - Set/Get the size of the window in screen coordinates in pixels.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSize (int a[2])</computeroutput> - Set/Get the size of the window in screen coordinates in pixels.  </para></listitem>
<listitem>
<para><computeroutput>vtkRenderWindow = obj.GetRenderWindow ()</computeroutput> - Get the internal objects  </para></listitem>
<listitem>
<para><computeroutput>vtkRenderer = obj.GetRenderer ()</computeroutput> - Get the internal objects  </para></listitem>
<listitem>
<para><computeroutput>vtkImageMapper = obj.GetImageMapper ()</computeroutput> - Get the internal objects  </para></listitem>
<listitem>
<para><computeroutput>vtkActor2D = obj.GetActor2D ()</computeroutput> - Get the internal objects  </para></listitem>
<listitem>
<para><computeroutput>obj.SetupInteractor (vtkRenderWindowInteractor )</computeroutput> - Create and attach an interactor for this window  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOffScreenRendering (int )</computeroutput> - Create a window in memory instead of on the screen. This may not be supported for every type of window and on some windows you may need to invoke this prior to the first render.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetOffScreenRendering ()</computeroutput> - Create a window in memory instead of on the screen. This may not be supported for every type of window and on some windows you may need to invoke this prior to the first render.  </para></listitem>
<listitem>
<para><computeroutput>obj.OffScreenRenderingOn ()</computeroutput> - Create a window in memory instead of on the screen. This may not be supported for every type of window and on some windows you may need to invoke this prior to the first render.  </para></listitem>
<listitem>
<para><computeroutput>obj.OffScreenRenderingOff ()</computeroutput> - Create a window in memory instead of on the screen. This may not be supported for every type of window and on some windows you may need to invoke this prior to the first render.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
