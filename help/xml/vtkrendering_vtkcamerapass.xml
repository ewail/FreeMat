<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkrendering_vtkcamerapass" kind="page">
    <compoundname>vtkrendering_vtkcamerapass</compoundname>
    <title>vtkCameraPass</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkrendering_1sec_vtkrendering" kindref="member">Visualization Toolkit Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Render the camera.</para><para>It setups the projection and modelview matrices and can clear the background It calls its delegate once. After its delegate returns, it restore the modelview matrix stack.</para><para>Its delegate is usually set to a vtkSequencePass with a vtkLigthsPass and a list of passes for the geometry.</para><para>To create an instance of class vtkCameraPass, simply invoke its constructor as follows <verbatim>  obj = vtkCameraPass
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkCameraPass has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkCameraPass class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCameraPass = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkCameraPass = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.ReleaseGraphicsResources (vtkWindow w)</computeroutput> - Release graphics resources and ask components to release their own resources. <simplesect kind="pre"><para>w_exists: w!=0  </para></simplesect>
</para></listitem>
<listitem>
<para><computeroutput>vtkRenderPass = obj.GetDelegatePass ()</computeroutput> - Delegate for rendering the geometry. If it is NULL, nothing will be rendered and a warning will be emitted. It is usually set to a vtkSequencePass with a vtkLigthsPass and a list of passes for the geometry. Initial value is a NULL pointer.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDelegatePass (vtkRenderPass delegatePass)</computeroutput> - Delegate for rendering the geometry. If it is NULL, nothing will be rendered and a warning will be emitted. It is usually set to a vtkSequencePass with a vtkLigthsPass and a list of passes for the geometry. Initial value is a NULL pointer.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
