<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="thread_threadnew" kind="page">
    <compoundname>thread_threadnew</compoundname>
    <title>THREADNEW Create a New Thread</title>
    <detaileddescription>
<para>Section: <ref refid="sec_thread_1sec_thread" kindref="member">FreeMat Threads</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The <computeroutput>threadnew</computeroutput> function creates a new FreeMat thread, and returns a handle to the resulting thread. The <computeroutput>threadnew</computeroutput> function takes no arguments. They general syntax for the <computeroutput>threadnew</computeroutput> function is <verbatim>   handle = threadnew
</verbatim> Once you have a handle to a thread, you can start the thread on a computation using the <computeroutput>threadstart</computeroutput> function. The threads returned by <computeroutput>threadnew</computeroutput> are in a dormant state (i.e., not running). Once you are finished with the thread you must call <computeroutput>threadfree</computeroutput> to free the resources associated with that thread.</para><para>Some additional important information. Thread functions operate in their own context or workspace, which means that data cannot be shared between threads. The exception is <computeroutput>global</computeroutput> variables, which provide a thread-safe way for multiple threads to share data. Accesses to global variables are serialized so that they can be used to share data. Threads and FreeMat are a new feature, so there is room for improvement in the API and behavior. The best way to improve threads is to experiment with them, and send feedback. </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
