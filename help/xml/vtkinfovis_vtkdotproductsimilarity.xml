<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkinfovis_vtkdotproductsimilarity" kind="page">
    <compoundname>vtkinfovis_vtkdotproductsimilarity</compoundname>
    <title>vtkDotProductSimilarity</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkinfovis_1sec_vtkinfovis" kindref="member">Visualization Toolkit Infovis Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Treats matrices as collections of vectors and computes dot-product similarity metrics between vectors.</para><para>The results are returned as an edge-table that lists the index of each vector and their computed similarity. The output edge-table is typically used with vtkTableToGraph to create a similarity graph.</para><para>This filter can be used with one or two input matrices. If you provide a single matrix as input, every vector in the matrix is compared with every other vector. If you provide two matrices, every vector in the first matrix is compared with every vector in the second matrix.</para><para>Note that this filter <emphasis>only</emphasis> computes the dot-product between each pair of vectors; if you want to compute the cosine of the angles between vectors, you will need to normalize the inputs yourself.</para><para>Inputs: Input port 0: (required) A vtkDenseArray&lt;double&gt; with two dimensions (a matrix). Input port 1: (optional) A vtkDenseArray&lt;double&gt; with two dimensions (a matrix).</para><para>Outputs: Output port 0: A vtkTable containing &quot;source&quot;, &quot;target&quot;, and &quot;similarity&quot; columns.</para><para>To create an instance of class vtkDotProductSimilarity, simply invoke its constructor as follows <verbatim>  obj = vtkDotProductSimilarity
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkDotProductSimilarity has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkDotProductSimilarity class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkDotProductSimilarity = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkDotProductSimilarity = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetVectorDimension ()</computeroutput> - Controls whether to compute similarities for row-vectors or column-vectors. 0 = rows, 1 = columns.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetVectorDimension (vtkIdType )</computeroutput> - Controls whether to compute similarities for row-vectors or column-vectors. 0 = rows, 1 = columns.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetUpperDiagonal ()</computeroutput> - When computing similarities for a single input matrix, controls whether the results will include the upper diagonal of the similarity matrix. Default: true.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetUpperDiagonal (int )</computeroutput> - When computing similarities for a single input matrix, controls whether the results will include the upper diagonal of the similarity matrix. Default: true.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetDiagonal ()</computeroutput> - When computing similarities for a single input matrix, controls whether the results will include the diagonal of the similarity matrix. Default: false.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDiagonal (int )</computeroutput> - When computing similarities for a single input matrix, controls whether the results will include the diagonal of the similarity matrix. Default: false.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetLowerDiagonal ()</computeroutput> - When computing similarities for a single input matrix, controls whether the results will include the lower diagonal of the similarity matrix. Default: false.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLowerDiagonal (int )</computeroutput> - When computing similarities for a single input matrix, controls whether the results will include the lower diagonal of the similarity matrix. Default: false.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetFirstSecond ()</computeroutput> - When computing similarities for two input matrices, controls whether the results will include comparisons from the first matrix to the second matrix.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFirstSecond (int )</computeroutput> - When computing similarities for two input matrices, controls whether the results will include comparisons from the first matrix to the second matrix.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetSecondFirst ()</computeroutput> - When computing similarities for two input matrices, controls whether the results will include comparisons from the second matrix to the first matrix.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSecondFirst (int )</computeroutput> - When computing similarities for two input matrices, controls whether the results will include comparisons from the second matrix to the first matrix.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetMinimumThreshold ()</computeroutput> - Specifies a minimum threshold that a similarity must exceed to be included in the output.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMinimumThreshold (double )</computeroutput> - Specifies a minimum threshold that a similarity must exceed to be included in the output.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetMinimumCount ()</computeroutput> - Specifies a minimum number of edges to include for each vector.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMinimumCount (vtkIdType )</computeroutput> - Specifies a minimum number of edges to include for each vector.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetMaximumCount ()</computeroutput> - Specifies a maximum number of edges to include for each vector.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMaximumCount (vtkIdType )</computeroutput> - Specifies a maximum number of edges to include for each vector.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
