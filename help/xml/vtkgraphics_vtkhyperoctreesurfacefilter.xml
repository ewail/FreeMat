<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkhyperoctreesurfacefilter" kind="page">
    <compoundname>vtkgraphics_vtkhyperoctreesurfacefilter</compoundname>
    <title>vtkHyperOctreeSurfaceFilter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkHyperOctreeSurfaceFilter extracts the surface of an hyperoctree.</para><para>To create an instance of class vtkHyperOctreeSurfaceFilter, simply invoke its constructor as follows <verbatim>  obj = vtkHyperOctreeSurfaceFilter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkHyperOctreeSurfaceFilter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkHyperOctreeSurfaceFilter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkHyperOctreeSurfaceFilter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkHyperOctreeSurfaceFilter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMerging (int )</computeroutput> - Turn on/off merging of coincident points. Note that is merging is on, points with different point attributes (e.g., normals) are merged, which may cause rendering artifacts.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetMerging ()</computeroutput> - Turn on/off merging of coincident points. Note that is merging is on, points with different point attributes (e.g., normals) are merged, which may cause rendering artifacts.  </para></listitem>
<listitem>
<para><computeroutput>obj.MergingOn ()</computeroutput> - Turn on/off merging of coincident points. Note that is merging is on, points with different point attributes (e.g., normals) are merged, which may cause rendering artifacts.  </para></listitem>
<listitem>
<para><computeroutput>obj.MergingOff ()</computeroutput> - Turn on/off merging of coincident points. Note that is merging is on, points with different point attributes (e.g., normals) are merged, which may cause rendering artifacts.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLocator (vtkIncrementalPointLocator locator)</computeroutput> - Set / get a spatial locator for merging points. By default an instance of vtkMergePoints is used.  </para></listitem>
<listitem>
<para><computeroutput>vtkIncrementalPointLocator = obj.GetLocator ()</computeroutput> - Set / get a spatial locator for merging points. By default an instance of vtkMergePoints is used.  </para></listitem>
<listitem>
<para><computeroutput>long = obj.GetMTime ()</computeroutput> - Return the MTime also considering the locator.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPassThroughCellIds (int )</computeroutput> - If on, the output polygonal dataset will have a celldata array that holds the cell index of the original 3D cell that produced each output cell. This is useful for cell picking. The default is off to conserve memory.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetPassThroughCellIds ()</computeroutput> - If on, the output polygonal dataset will have a celldata array that holds the cell index of the original 3D cell that produced each output cell. This is useful for cell picking. The default is off to conserve memory.  </para></listitem>
<listitem>
<para><computeroutput>obj.PassThroughCellIdsOn ()</computeroutput> - If on, the output polygonal dataset will have a celldata array that holds the cell index of the original 3D cell that produced each output cell. This is useful for cell picking. The default is off to conserve memory.  </para></listitem>
<listitem>
<para><computeroutput>obj.PassThroughCellIdsOff ()</computeroutput> - If on, the output polygonal dataset will have a celldata array that holds the cell index of the original 3D cell that produced each output cell. This is useful for cell picking. The default is off to conserve memory.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
