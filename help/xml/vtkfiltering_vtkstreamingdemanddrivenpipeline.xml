<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtkstreamingdemanddrivenpipeline" kind="page">
    <compoundname>vtkfiltering_vtkstreamingdemanddrivenpipeline</compoundname>
    <title>vtkStreamingDemandDrivenPipeline</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkStreamingDemandDrivenPipeline is an executive that supports updating only a portion of the data set in the pipeline. This is the style of pipeline update that is provided by the old-style VTK 4.x pipeline. Instead of always updating an entire data set, this executive supports asking for pieces or sub-extents.</para><para>To create an instance of class vtkStreamingDemandDrivenPipeline, simply invoke its constructor as follows <verbatim>  obj = vtkStreamingDemandDrivenPipeline
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkStreamingDemandDrivenPipeline has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkStreamingDemandDrivenPipeline class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkStreamingDemandDrivenPipeline = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkStreamingDemandDrivenPipeline = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.Update ()</computeroutput> - Bring the outputs up-to-date.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.Update (int port)</computeroutput> - Bring the outputs up-to-date.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.UpdateWholeExtent ()</computeroutput> - Bring the outputs up-to-date.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.PropagateUpdateExtent (int outputPort)</computeroutput> - Propagate the update request from the given output port back through the pipeline. Should be called only when information is up to date.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetMaximumNumberOfPieces (int port, int n)</computeroutput> - Set/Get the maximum number of pieces that can be requested from the given port. The maximum number of pieces is meta data for unstructured data sets. It gets set by the source during the update information call. A value of -1 indicates that there is no maximum.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetMaximumNumberOfPieces (vtkInformation , int n)</computeroutput> - Set/Get the maximum number of pieces that can be requested from the given port. The maximum number of pieces is meta data for unstructured data sets. It gets set by the source during the update information call. A value of -1 indicates that there is no maximum.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetMaximumNumberOfPieces (int port)</computeroutput> - Set/Get the maximum number of pieces that can be requested from the given port. The maximum number of pieces is meta data for unstructured data sets. It gets set by the source during the update information call. A value of -1 indicates that there is no maximum.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetMaximumNumberOfPieces (vtkInformation )</computeroutput> - Set/Get the maximum number of pieces that can be requested from the given port. The maximum number of pieces is meta data for unstructured data sets. It gets set by the source during the update information call. A value of -1 indicates that there is no maximum.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetWholeExtent (vtkInformation , int extent[6])</computeroutput> - Set/Get the whole extent of an output port. The whole extent is meta data for structured data sets. It gets set by the algorithm during the update information pass.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetWholeExtent (vtkInformation , int extent[6])</computeroutput> - Set/Get the whole extent of an output port. The whole extent is meta data for structured data sets. It gets set by the algorithm during the update information pass.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetUpdateExtentToWholeExtent (int port)</computeroutput> - If the whole input extent is required to generate the requested output extent, this method can be called to set the input update extent to the whole input extent. This method assumes that the whole extent is known (that UpdateInformation has been called)  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetUpdateExtentToWholeExtent (vtkInformation )</computeroutput> - If the whole input extent is required to generate the requested output extent, this method can be called to set the input update extent to the whole input extent. This method assumes that the whole extent is known (that UpdateInformation has been called)  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetUpdateExtent (int port, int extent[6])</computeroutput> - Get/Set the update extent for output ports that use 3D extents.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetUpdateExtent (vtkInformation , int extent[6])</computeroutput> - Get/Set the update extent for output ports that use 3D extents.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetUpdateExtent (vtkInformation , int extent[6])</computeroutput> - Get/Set the update extent for output ports that use 3D extents.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetUpdateExtent (int port, int piece, int numPieces, int ghostLevel)</computeroutput> - Set/Get the update piece, update number of pieces, and update number of ghost levels for an output port. Similar to update extent in 3D.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetUpdateExtent (vtkInformation , int piece, int numPieces, int ghostLevel)</computeroutput> - Set/Get the update piece, update number of pieces, and update number of ghost levels for an output port. Similar to update extent in 3D.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetUpdatePiece (vtkInformation , int piece)</computeroutput> - Set/Get the update piece, update number of pieces, and update number of ghost levels for an output port. Similar to update extent in 3D.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetUpdatePiece (vtkInformation )</computeroutput> - Set/Get the update piece, update number of pieces, and update number of ghost levels for an output port. Similar to update extent in 3D.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetUpdateNumberOfPieces (vtkInformation , int n)</computeroutput> - Set/Get the update piece, update number of pieces, and update number of ghost levels for an output port. Similar to update extent in 3D.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetUpdateNumberOfPieces (vtkInformation )</computeroutput> - Set/Get the update piece, update number of pieces, and update number of ghost levels for an output port. Similar to update extent in 3D.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetUpdateGhostLevel (vtkInformation , int n)</computeroutput> - Set/Get the update piece, update number of pieces, and update number of ghost levels for an output port. Similar to update extent in 3D.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetUpdateGhostLevel (vtkInformation )</computeroutput> - Set/Get the update piece, update number of pieces, and update number of ghost levels for an output port. Similar to update extent in 3D.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetUpdateResolution (int port, double r)</computeroutput> - Set/Get the update piece, update number of pieces, and update number of ghost levels for an output port. Similar to update extent in 3D.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetUpdateResolution (vtkInformation , double r)</computeroutput> - Set/Get the update piece, update number of pieces, and update number of ghost levels for an output port. Similar to update extent in 3D.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetUpdateResolution (vtkInformation )</computeroutput> - Set/Get the update piece, update number of pieces, and update number of ghost levels for an output port. Similar to update extent in 3D.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetSplitUpdateExtent (int port, int major, int minor, int numPieces, int ghostLevel)</computeroutput> - Get/Set the update extent for output ports that use Temporal Extents  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetUpdateTimeSteps (int port, double times, int length)</computeroutput> - Get/Set the update extent for output ports that use Temporal Extents  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetUpdateTimeSteps (vtkInformation , double times, int length)</computeroutput> - Get/Set the update extent for output ports that use Temporal Extents  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetUpdateTimeStep (int port, double time)</computeroutput> - Get/Set the update extent for output ports that use Temporal Extents  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetRequestExactExtent (int port, int flag)</computeroutput> - This request flag indicates whether the requester can handle more data than requested for the given port. Right now it is used in vtkImageData. Image filters can return more data than requested. The the consumer cannot handle this (i.e. DataSetToDataSetFitler) the image will crop itself. This functionality used to be in ImageToStructuredPoints.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetRequestExactExtent (int port)</computeroutput> - This request flag indicates whether the requester can handle more data than requested for the given port. Right now it is used in vtkImageData. Image filters can return more data than requested. The the consumer cannot handle this (i.e. DataSetToDataSetFitler) the image will crop itself. This functionality used to be in ImageToStructuredPoints.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetExtentTranslator (int port, vtkExtentTranslator translator)</computeroutput> - Get/Set the object that will translate pieces into structured extents for an output port.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetExtentTranslator (vtkInformation , vtkExtentTranslator translator)</computeroutput> - Get/Set the object that will translate pieces into structured extents for an output port.  </para></listitem>
<listitem>
<para><computeroutput>vtkExtentTranslator = obj.GetExtentTranslator (int port)</computeroutput> - Get/Set the object that will translate pieces into structured extents for an output port.  </para></listitem>
<listitem>
<para><computeroutput>vtkExtentTranslator = obj.GetExtentTranslator (vtkInformation info)</computeroutput> - Get/Set the object that will translate pieces into structured extents for an output port.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetWholeBoundingBox (int port, double bb[6])</computeroutput> - Set/Get the whole bounding box of an output port data object. The whole whole bounding box is meta data for data sets. It gets set by the algorithm during the update information pass.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetWholeBoundingBox (int port, double bb[6])</computeroutput> - Set/Get the whole bounding box of an output port data object. The whole whole bounding box is meta data for data sets. It gets set by the algorithm during the update information pass.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetPieceBoundingBox (int port, double bb[6])</computeroutput> - Set/Get the piece bounding box of an output port data object. The piece bounding box is meta data for data sets. It gets set by the algorithm during the update extent information pass.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetPieceBoundingBox (int port, double bb[6])</computeroutput> - Set/Get the piece bounding box of an output port data object. The piece bounding box is meta data for data sets. It gets set by the algorithm during the update extent information pass.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.ComputePriority ()</computeroutput> - Issues pipeline request to determine and return the priority of the piece described by the current update extent. The priority is a number between 0.0 and 1.0 with 0 meaning skippable (REQUEST_DATA not needed) and 1.0 meaning important.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.ComputePriority (int port)</computeroutput> - Issues pipeline request to determine and return the priority of the piece described by the current update extent. The priority is a number between 0.0 and 1.0 with 0 meaning skippable (REQUEST_DATA not needed) and 1.0 meaning important.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
