<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtklinearextrusionfilter" kind="page">
    <compoundname>vtkgraphics_vtklinearextrusionfilter</compoundname>
    <title>vtkLinearExtrusionFilter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkLinearExtrusionFilter is a modeling filter. It takes polygonal data as input and generates polygonal data on output. The input dataset is swept according to some extrusion function and creates new polygonal primitives. These primitives form a &quot;skirt&quot; or swept surface. For example, sweeping a line results in a quadrilateral, and sweeping a triangle creates a &quot;wedge&quot;.</para><para>There are a number of control parameters for this filter. You can control whether the sweep of a 2D object (i.e., polygon or triangle strip) is capped with the generating geometry via the &quot;Capping&quot; ivar. Also, you can extrude in the direction of a user specified vector, towards a point, or in the direction of vertex normals (normals must be provided - use vtkPolyDataNormals if necessary). The amount of extrusion is controlled by the &quot;ScaleFactor&quot; instance variable.</para><para>The skirt is generated by locating certain topological features. Free edges (edges of polygons or triangle strips only used by one polygon or triangle strips) generate surfaces. This is true also of lines or polylines. Vertices generate lines.</para><para>This filter can be used to create 3D fonts, 3D irregular bar charts, or to model 2 1/2D objects like punched plates. It also can be used to create solid objects from 2D polygonal meshes.</para><para>To create an instance of class vtkLinearExtrusionFilter, simply invoke its constructor as follows <verbatim>  obj = vtkLinearExtrusionFilter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkLinearExtrusionFilter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkLinearExtrusionFilter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkLinearExtrusionFilter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkLinearExtrusionFilter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtrusionType (int )</computeroutput> - Set/Get the type of extrusion.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetExtrusionTypeMinValue ()</computeroutput> - Set/Get the type of extrusion.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetExtrusionTypeMaxValue ()</computeroutput> - Set/Get the type of extrusion.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetExtrusionType ()</computeroutput> - Set/Get the type of extrusion.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtrusionTypeToVectorExtrusion ()</computeroutput> - Set/Get the type of extrusion.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtrusionTypeToNormalExtrusion ()</computeroutput> - Set/Get the type of extrusion.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtrusionTypeToPointExtrusion ()</computeroutput> - Set/Get the type of extrusion.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCapping (int )</computeroutput> - Turn on/off the capping of the skirt.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCapping ()</computeroutput> - Turn on/off the capping of the skirt.  </para></listitem>
<listitem>
<para><computeroutput>obj.CappingOn ()</computeroutput> - Turn on/off the capping of the skirt.  </para></listitem>
<listitem>
<para><computeroutput>obj.CappingOff ()</computeroutput> - Turn on/off the capping of the skirt.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetScaleFactor (double )</computeroutput> - Set/Get extrusion scale factor,  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetScaleFactor ()</computeroutput> - Set/Get extrusion scale factor,  </para></listitem>
<listitem>
<para><computeroutput>obj.SetVector (double , double , double )</computeroutput> - Set/Get extrusion vector. Only needs to be set if VectorExtrusion is turned on.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetVector (double a[3])</computeroutput> - Set/Get extrusion vector. Only needs to be set if VectorExtrusion is turned on.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetVector ()</computeroutput> - Set/Get extrusion vector. Only needs to be set if VectorExtrusion is turned on.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtrusionPoint (double , double , double )</computeroutput> - Set/Get extrusion point. Only needs to be set if PointExtrusion is turned on. This is the point towards which extrusion occurs.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtrusionPoint (double a[3])</computeroutput> - Set/Get extrusion point. Only needs to be set if PointExtrusion is turned on. This is the point towards which extrusion occurs.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetExtrusionPoint ()</computeroutput> - Set/Get extrusion point. Only needs to be set if PointExtrusion is turned on. This is the point towards which extrusion occurs.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
