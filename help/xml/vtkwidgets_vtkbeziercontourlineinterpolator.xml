<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkwidgets_vtkbeziercontourlineinterpolator" kind="page">
    <compoundname>vtkwidgets_vtkbeziercontourlineinterpolator</compoundname>
    <title>vtkBezierContourLineInterpolator</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkwidgets_1sec_vtkwidgets" kindref="member">Visualization Toolkit Widget Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The line interpolator interpolates supplied nodes (see InterpolateLine) with bezier line segments. The finess of the curve may be controlled using SetMaximumCurveError and SetMaximumNumberOfLineSegments.</para><para>To create an instance of class vtkBezierContourLineInterpolator, simply invoke its constructor as follows <verbatim>  obj = vtkBezierContourLineInterpolator
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkBezierContourLineInterpolator has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkBezierContourLineInterpolator class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>vtkBezierContourLineInterpolator = obj.NewInstance ()</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>vtkBezierContourLineInterpolator = obj.SafeDownCast (vtkObject o)</computeroutput> - Standard methods for instances of this class.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.InterpolateLine (vtkRenderer ren, vtkContourRepresentation rep, int idx1, int idx2)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMaximumCurveError (double )</computeroutput> - The difference between a line segment connecting two points and the curve connecting the same points. In the limit of the length of the curve dx -&gt; 0, the two values will be the same. The smaller this number, the finer the bezier curve will be interpolated. Default is 0.005  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetMaximumCurveErrorMinValue ()</computeroutput> - The difference between a line segment connecting two points and the curve connecting the same points. In the limit of the length of the curve dx -&gt; 0, the two values will be the same. The smaller this number, the finer the bezier curve will be interpolated. Default is 0.005  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetMaximumCurveErrorMaxValue ()</computeroutput> - The difference between a line segment connecting two points and the curve connecting the same points. In the limit of the length of the curve dx -&gt; 0, the two values will be the same. The smaller this number, the finer the bezier curve will be interpolated. Default is 0.005  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetMaximumCurveError ()</computeroutput> - The difference between a line segment connecting two points and the curve connecting the same points. In the limit of the length of the curve dx -&gt; 0, the two values will be the same. The smaller this number, the finer the bezier curve will be interpolated. Default is 0.005  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMaximumCurveLineSegments (int )</computeroutput> - Maximum number of bezier line segments between two nodes. Larger values create a finer interpolation. Default is 100.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetMaximumCurveLineSegmentsMinValue ()</computeroutput> - Maximum number of bezier line segments between two nodes. Larger values create a finer interpolation. Default is 100.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetMaximumCurveLineSegmentsMaxValue ()</computeroutput> - Maximum number of bezier line segments between two nodes. Larger values create a finer interpolation. Default is 100.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetMaximumCurveLineSegments ()</computeroutput> - Maximum number of bezier line segments between two nodes. Larger values create a finer interpolation. Default is 100.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetSpan (int nodeIndex, vtkIntArray nodeIndices, vtkContourRepresentation rep)</computeroutput> - Span of the interpolator. ie. the number of control points its supposed to interpolate given a node.</para><para>The first argument is the current nodeIndex. ie, you&apos;d be trying to interpolate between nodes &quot;nodeIndex&quot; and &quot;nodeIndex-1&quot;, unless you&apos;re closing the contour in which case, you&apos;re trying to interpolate &quot;nodeIndex&quot; and &quot;Node=0&quot;. The node span is returned in a vtkIntArray.</para><para>The node span is returned in a vtkIntArray. The node span returned by this interpolator will be a 2-tuple with a span of 4.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
