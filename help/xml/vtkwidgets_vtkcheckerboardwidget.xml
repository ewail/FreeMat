<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkwidgets_vtkcheckerboardwidget" kind="page">
    <compoundname>vtkwidgets_vtkcheckerboardwidget</compoundname>
    <title>vtkCheckerboardWidget</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkwidgets_1sec_vtkwidgets" kindref="member">Visualization Toolkit Widget Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The vtkCheckerboardWidget is used to interactively control an instance of vtkImageCheckerboard (and an associated vtkImageActor used to display the checkerboard). The user can adjust the number of divisions in each of the i-j directions in a 2D image. A frame appears around the vtkImageActor with sliders along each side of the frame. The user can interactively adjust the sliders to the desired number of checkerboard subdivisions.</para><para>To use this widget, specify an instance of vtkImageCheckerboard and an instance of vtkImageActor. By default, the widget responds to the following events: <preformatted>
 If the slider bead is selected:
   LeftButtonPressEvent - select slider (if on slider)
   LeftButtonReleaseEvent - release slider 
   MouseMoveEvent - move slider
 If the end caps or slider tube of a slider are selected:
   LeftButtonPressEvent - jump (or animate) to cap or point on tube;
 </preformatted> It is possible to change these event bindings. Please refer to the documentation for vtkSliderWidget for more information. Advanced users may directly access and manipulate the sliders by obtaining the instances of vtkSliderWidget composing the vtkCheckerboard widget.</para><para>To create an instance of class vtkCheckerboardWidget, simply invoke its constructor as follows <verbatim>  obj = vtkCheckerboardWidget
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkCheckerboardWidget has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkCheckerboardWidget class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput> - Standard methods for a VTK class.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput> - Standard methods for a VTK class.  </para></listitem>
<listitem>
<para><computeroutput>vtkCheckerboardWidget = obj.NewInstance ()</computeroutput> - Standard methods for a VTK class.  </para></listitem>
<listitem>
<para><computeroutput>vtkCheckerboardWidget = obj.SafeDownCast (vtkObject o)</computeroutput> - Standard methods for a VTK class.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetEnabled (int )</computeroutput> - The method for activiating and deactiviating this widget. This method must be overridden because it is a composite widget and does more than its superclasses&apos; vtkAbstractWidget::SetEnabled() method.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetRepresentation (vtkCheckerboardRepresentation r)</computeroutput> - Create the default widget representation if one is not set.  </para></listitem>
<listitem>
<para><computeroutput>obj.CreateDefaultRepresentation ()</computeroutput> - Create the default widget representation if one is not set.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
