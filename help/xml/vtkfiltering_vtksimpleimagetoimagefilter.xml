<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtksimpleimagetoimagefilter" kind="page">
    <compoundname>vtkfiltering_vtksimpleimagetoimagefilter</compoundname>
    <title>vtkSimpleImageToImageFilter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkSimpleImageToImageFilter is a filter which aims to avoid much of the complexity associated with vtkImageAlgorithm (i.e. support for pieces, multi-threaded operation). If you need to write a simple image-image filter which operates on the whole input, use this as the superclass. The subclass has to provide only an execute method which takes input and output as arguments. Memory allocation is handled in vtkSimpleImageToImageFilter. Also, you are guaranteed to have a valid input in the Execute(input, output) method. By default, this filter requests it&apos;s input&apos;s whole extent and copies the input&apos;s information (spacing, whole extent etc...) to the output. If the output&apos;s setup is different (for example, if it performs some sort of sub-sampling), ExecuteInformation has to be overwritten. As an example of how this can be done, you can look at vtkImageShrink3D::ExecuteInformation. For a complete example which uses templates to support generic data types, see vtkSimpleImageToImageFilter.</para><para>To create an instance of class vtkSimpleImageToImageFilter, simply invoke its constructor as follows <verbatim>  obj = vtkSimpleImageToImageFilter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkSimpleImageToImageFilter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkSimpleImageToImageFilter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkSimpleImageToImageFilter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkSimpleImageToImageFilter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
