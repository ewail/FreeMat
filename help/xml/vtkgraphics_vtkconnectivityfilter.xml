<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkconnectivityfilter" kind="page">
    <compoundname>vtkgraphics_vtkconnectivityfilter</compoundname>
    <title>vtkConnectivityFilter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkConnectivityFilter is a filter that extracts cells that share common points and/or meet other connectivity criterion. (Cells that share vertices and meet other connectivity criterion such as scalar range are known as a region.) The filter works in one of six ways: 1) extract the largest connected region in the dataset; 2) extract specified region numbers; 3) extract all regions sharing specified point ids; 4) extract all regions sharing specified cell ids; 5) extract the region closest to the specified point; or 6) extract all regions (used to color the data by region).</para><para>vtkConnectivityFilter is generalized to handle any type of input dataset. It generates output data of type vtkUnstructuredGrid. If you know that your input type is vtkPolyData, you may wish to use vtkPolyDataConnectivityFilter.</para><para>The behavior of vtkConnectivityFilter can be modified by turning on the boolean ivar ScalarConnectivity. If this flag is on, the connectivity algorithm is modified so that cells are considered connected only if 1) they are geometrically connected (share a point) and 2) the scalar values of one of the cell&apos;s points falls in the scalar range specified. This use of ScalarConnectivity is particularly useful for volume datasets: it can be used as a simple &quot;connected segmentation&quot; algorithm. For example, by using a seed voxel (i.e., cell) on a known anatomical structure, connectivity will pull out all voxels &quot;containing&quot; the anatomical structure. These voxels can then be contoured or processed by other visualization filters.</para><para>To create an instance of class vtkConnectivityFilter, simply invoke its constructor as follows <verbatim>  obj = vtkConnectivityFilter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkConnectivityFilter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkConnectivityFilter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkConnectivityFilter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkConnectivityFilter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetScalarConnectivity (int )</computeroutput> - Turn on/off connectivity based on scalar value. If on, cells are connected only if they share points AND one of the cells scalar values falls in the scalar range specified.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetScalarConnectivity ()</computeroutput> - Turn on/off connectivity based on scalar value. If on, cells are connected only if they share points AND one of the cells scalar values falls in the scalar range specified.  </para></listitem>
<listitem>
<para><computeroutput>obj.ScalarConnectivityOn ()</computeroutput> - Turn on/off connectivity based on scalar value. If on, cells are connected only if they share points AND one of the cells scalar values falls in the scalar range specified.  </para></listitem>
<listitem>
<para><computeroutput>obj.ScalarConnectivityOff ()</computeroutput> - Turn on/off connectivity based on scalar value. If on, cells are connected only if they share points AND one of the cells scalar values falls in the scalar range specified.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetScalarRange (double , double )</computeroutput> - Set the scalar range to use to extract cells based on scalar connectivity.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetScalarRange (double a[2])</computeroutput> - Set the scalar range to use to extract cells based on scalar connectivity.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetScalarRange ()</computeroutput> - Set the scalar range to use to extract cells based on scalar connectivity.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtractionMode (int )</computeroutput> - Control the extraction of connected surfaces.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetExtractionModeMinValue ()</computeroutput> - Control the extraction of connected surfaces.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetExtractionModeMaxValue ()</computeroutput> - Control the extraction of connected surfaces.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetExtractionMode ()</computeroutput> - Control the extraction of connected surfaces.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtractionModeToPointSeededRegions ()</computeroutput> - Control the extraction of connected surfaces.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtractionModeToCellSeededRegions ()</computeroutput> - Control the extraction of connected surfaces.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtractionModeToLargestRegion ()</computeroutput> - Control the extraction of connected surfaces.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtractionModeToSpecifiedRegions ()</computeroutput> - Control the extraction of connected surfaces.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtractionModeToClosestPointRegion ()</computeroutput> - Control the extraction of connected surfaces.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtractionModeToAllRegions ()</computeroutput> - Control the extraction of connected surfaces.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetExtractionModeAsString ()</computeroutput> - Control the extraction of connected surfaces.  </para></listitem>
<listitem>
<para><computeroutput>obj.InitializeSeedList ()</computeroutput> - Initialize list of point ids/cell ids used to seed regions.  </para></listitem>
<listitem>
<para><computeroutput>obj.AddSeed (vtkIdType id)</computeroutput> - Add a seed id (point or cell id). Note: ids are 0-offset.  </para></listitem>
<listitem>
<para><computeroutput>obj.DeleteSeed (vtkIdType id)</computeroutput> - Delete a seed id (point or cell id). Note: ids are 0-offset.  </para></listitem>
<listitem>
<para><computeroutput>obj.InitializeSpecifiedRegionList ()</computeroutput> - Initialize list of region ids to extract.  </para></listitem>
<listitem>
<para><computeroutput>obj.AddSpecifiedRegion (int id)</computeroutput> - Add a region id to extract. Note: ids are 0-offset.  </para></listitem>
<listitem>
<para><computeroutput>obj.DeleteSpecifiedRegion (int id)</computeroutput> - Delete a region id to extract. Note: ids are 0-offset.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetClosestPoint (double , double , double )</computeroutput> - Use to specify x-y-z point coordinates when extracting the region closest to a specified point.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetClosestPoint (double a[3])</computeroutput> - Use to specify x-y-z point coordinates when extracting the region closest to a specified point.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetClosestPoint ()</computeroutput> - Use to specify x-y-z point coordinates when extracting the region closest to a specified point.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfExtractedRegions ()</computeroutput> - Obtain the number of connected regions.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetColorRegions (int )</computeroutput> - Turn on/off the coloring of connected regions.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetColorRegions ()</computeroutput> - Turn on/off the coloring of connected regions.  </para></listitem>
<listitem>
<para><computeroutput>obj.ColorRegionsOn ()</computeroutput> - Turn on/off the coloring of connected regions.  </para></listitem>
<listitem>
<para><computeroutput>obj.ColorRegionsOff ()</computeroutput> - Turn on/off the coloring of connected regions.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
