<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkwidgets_vtksliderrepresentation2d" kind="page">
    <compoundname>vtkwidgets_vtksliderrepresentation2d</compoundname>
    <title>vtkSliderRepresentation2D</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkwidgets_1sec_vtkwidgets" kindref="member">Visualization Toolkit Widget Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>This class is used to represent and render a vtkSliderWidget. To use this class, you must at a minimum specify the end points of the slider. Optional instance variable can be used to modify the appearance of the widget.</para><para>To create an instance of class vtkSliderRepresentation2D, simply invoke its constructor as follows <verbatim>  obj = vtkSliderRepresentation2D
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkSliderRepresentation2D has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkSliderRepresentation2D class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput> - Standard methods for the class.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput> - Standard methods for the class.  </para></listitem>
<listitem>
<para><computeroutput>vtkSliderRepresentation2D = obj.NewInstance ()</computeroutput> - Standard methods for the class.  </para></listitem>
<listitem>
<para><computeroutput>vtkSliderRepresentation2D = obj.SafeDownCast (vtkObject o)</computeroutput> - Standard methods for the class.  </para></listitem>
<listitem>
<para><computeroutput>vtkCoordinate = obj.GetPoint1Coordinate ()</computeroutput> - Position the first end point of the slider. Note that this point is an instance of vtkCoordinate, meaning that Point 1 can be specified in a variety of coordinate systems, and can even be relative to another point. To set the point, you&apos;ll want to get the Point1Coordinate and then invoke the necessary methods to put it into the correct coordinate system and set the correct initial value.  </para></listitem>
<listitem>
<para><computeroutput>vtkCoordinate = obj.GetPoint2Coordinate ()</computeroutput> - Position the second end point of the slider. Note that this point is an instance of vtkCoordinate, meaning that Point 1 can be specified in a variety of coordinate systems, and can even be relative to another point. To set the point, you&apos;ll want to get the Point2Coordinate and then invoke the necessary methods to put it into the correct coordinate system and set the correct initial value.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTitleText (string )</computeroutput> - Specify the label text for this widget. If the value is not set, or set to the empty string &quot;&quot;, then the label text is not displayed.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetTitleText ()</computeroutput> - Specify the label text for this widget. If the value is not set, or set to the empty string &quot;&quot;, then the label text is not displayed.  </para></listitem>
<listitem>
<para><computeroutput>vtkProperty2D = obj.GetSliderProperty ()</computeroutput> - Get the slider properties. The properties of the slider when selected and unselected can be manipulated.  </para></listitem>
<listitem>
<para><computeroutput>vtkProperty2D = obj.GetTubeProperty ()</computeroutput> - Get the properties for the tube and end caps.  </para></listitem>
<listitem>
<para><computeroutput>vtkProperty2D = obj.GetCapProperty ()</computeroutput> - Get the properties for the tube and end caps.  </para></listitem>
<listitem>
<para><computeroutput>vtkProperty2D = obj.GetSelectedProperty ()</computeroutput> - Get the selection property. This property is used to modify the appearance of selected objects (e.g., the slider).  </para></listitem>
<listitem>
<para><computeroutput>vtkTextProperty = obj.GetLabelProperty ()</computeroutput> - Set/Get the properties for the label and title text.  </para></listitem>
<listitem>
<para><computeroutput>vtkTextProperty = obj.GetTitleProperty ()</computeroutput> - Set/Get the properties for the label and title text.  </para></listitem>
<listitem>
<para><computeroutput>obj.PlaceWidget (double bounds[6])</computeroutput> - Methods to interface with the vtkSliderWidget. The PlaceWidget() method assumes that the parameter bounds[6] specifies the location in display space where the widget should be placed.  </para></listitem>
<listitem>
<para><computeroutput>obj.BuildRepresentation ()</computeroutput> - Methods to interface with the vtkSliderWidget. The PlaceWidget() method assumes that the parameter bounds[6] specifies the location in display space where the widget should be placed.  </para></listitem>
<listitem>
<para><computeroutput>obj.StartWidgetInteraction (double eventPos[2])</computeroutput> - Methods to interface with the vtkSliderWidget. The PlaceWidget() method assumes that the parameter bounds[6] specifies the location in display space where the widget should be placed.  </para></listitem>
<listitem>
<para><computeroutput>obj.WidgetInteraction (double newEventPos[2])</computeroutput> - Methods to interface with the vtkSliderWidget. The PlaceWidget() method assumes that the parameter bounds[6] specifies the location in display space where the widget should be placed.  </para></listitem>
<listitem>
<para><computeroutput>obj.Highlight (int )</computeroutput> - Methods to interface with the vtkSliderWidget. The PlaceWidget() method assumes that the parameter bounds[6] specifies the location in display space where the widget should be placed.  </para></listitem>
<listitem>
<para><computeroutput>obj.GetActors2D (vtkPropCollection )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.ReleaseGraphicsResources (vtkWindow )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOverlay (vtkViewport )</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.RenderOpaqueGeometry (vtkViewport )</computeroutput>  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
