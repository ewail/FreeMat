<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkcommon_vtkserversocket" kind="page">
    <compoundname>vtkcommon_vtkserversocket</compoundname>
    <title>vtkServerSocket</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkcommon_1sec_vtkcommon" kindref="member">Visualization Toolkit Common Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>To create an instance of class vtkServerSocket, simply invoke its constructor as follows <verbatim>  obj = vtkServerSocket
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkServerSocket has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkServerSocket class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkServerSocket = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkServerSocket = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.CreateServer (int port)</computeroutput> - Creates a server socket at a given port and binds to it. Returns -1 on error. 0 on success.  </para></listitem>
<listitem>
<para><computeroutput>vtkClientSocket = obj.WaitForConnection (long msec)</computeroutput> - Waits for a connection. When a connection is received a new vtkClientSocket object is created and returned. Returns NULL on timeout.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetServerPort ()</computeroutput> - Returns the port on which the server is running.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
