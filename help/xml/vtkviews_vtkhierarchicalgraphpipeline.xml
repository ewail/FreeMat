<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkviews_vtkhierarchicalgraphpipeline" kind="page">
    <compoundname>vtkviews_vtkhierarchicalgraphpipeline</compoundname>
    <title>vtkHierarchicalGraphPipeline</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkviews_1sec_vtkviews" kindref="member">Visualization Toolkit View Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkHierarchicalGraphPipeline renders bundled edges that are meant to be viewed as an overlay on a tree. This class is not for general use, but is used in the internals of vtkRenderedHierarchyRepresentation and vtkRenderedTreeAreaRepresentation.</para><para>To create an instance of class vtkHierarchicalGraphPipeline, simply invoke its constructor as follows <verbatim>  obj = vtkHierarchicalGraphPipeline
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkHierarchicalGraphPipeline has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkHierarchicalGraphPipeline class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkHierarchicalGraphPipeline = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkHierarchicalGraphPipeline = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkActor = obj.GetActor ()</computeroutput> - The actor associated with the hierarchical graph.  </para></listitem>
<listitem>
<para><computeroutput>vtkActor2D = obj.GetLabelActor ()</computeroutput> - The actor associated with the hierarchical graph.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetBundlingStrength (double strength)</computeroutput> - The bundling strength for the bundled edges.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetBundlingStrength ()</computeroutput> - The bundling strength for the bundled edges.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLabelArrayName (string name)</computeroutput> - The edge label array name.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetLabelArrayName ()</computeroutput> - The edge label array name.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLabelVisibility (bool vis)</computeroutput> - The edge label visibility.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetLabelVisibility ()</computeroutput> - The edge label visibility.  </para></listitem>
<listitem>
<para><computeroutput>obj.LabelVisibilityOn ()</computeroutput> - The edge label visibility.  </para></listitem>
<listitem>
<para><computeroutput>obj.LabelVisibilityOff ()</computeroutput> - The edge label visibility.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLabelTextProperty (vtkTextProperty prop)</computeroutput> - The edge label text property.  </para></listitem>
<listitem>
<para><computeroutput>vtkTextProperty = obj.GetLabelTextProperty ()</computeroutput> - The edge label text property.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetColorArrayName (string name)</computeroutput> - The edge color array.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetColorArrayName ()</computeroutput> - The edge color array.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetColorEdgesByArray (bool vis)</computeroutput> - Whether to color the edges by an array.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetColorEdgesByArray ()</computeroutput> - Whether to color the edges by an array.  </para></listitem>
<listitem>
<para><computeroutput>obj.ColorEdgesByArrayOn ()</computeroutput> - Whether to color the edges by an array.  </para></listitem>
<listitem>
<para><computeroutput>obj.ColorEdgesByArrayOff ()</computeroutput> - Whether to color the edges by an array.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetVisibility (bool vis)</computeroutput> - The visibility of this graph.  </para></listitem>
<listitem>
<para><computeroutput>bool = obj.GetVisibility ()</computeroutput> - The visibility of this graph.  </para></listitem>
<listitem>
<para><computeroutput>obj.VisibilityOn ()</computeroutput> - The visibility of this graph.  </para></listitem>
<listitem>
<para><computeroutput>obj.VisibilityOff ()</computeroutput> - The visibility of this graph.  </para></listitem>
<listitem>
<para><computeroutput>vtkSelection = obj.ConvertSelection (vtkDataRepresentation rep, vtkSelection sel)</computeroutput> - Returns a new selection relevant to this graph based on an input selection and the view that this graph is contained in.  </para></listitem>
<listitem>
<para><computeroutput>obj.PrepareInputConnections (vtkAlgorithmOutput graphConn, vtkAlgorithmOutput treeConn, vtkAlgorithmOutput annConn)</computeroutput> - Sets the input connections for this graph. graphConn is the input graph connection. treeConn is the input tree connection. annConn is the annotation link connection.  </para></listitem>
<listitem>
<para><computeroutput>obj.ApplyViewTheme (vtkViewTheme theme)</computeroutput> - Applies the view theme to this graph.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetHoverArrayName (string )</computeroutput> - The array to use while hovering over an edge.  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetHoverArrayName ()</computeroutput> - The array to use while hovering over an edge.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSplineType (int type)</computeroutput> - The spline mode to use in vtkSplineGraphEdges. vtkSplineGraphEdges::CUSTOM uses a vtkCardinalSpline. vtkSplineGraphEdges::BSPLINE uses a b-spline. The default is CUSTOM.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetSplineType ()</computeroutput> - The spline mode to use in vtkSplineGraphEdges. vtkSplineGraphEdges::CUSTOM uses a vtkCardinalSpline. vtkSplineGraphEdges::BSPLINE uses a b-spline. The default is CUSTOM.  </para></listitem>
<listitem>
<para><computeroutput>obj.RegisterProgress (vtkRenderView view)</computeroutput> - Register progress with a view.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
