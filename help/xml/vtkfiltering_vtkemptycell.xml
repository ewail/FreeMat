<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkfiltering_vtkemptycell" kind="page">
    <compoundname>vtkfiltering_vtkemptycell</compoundname>
    <title>vtkEmptyCell</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkfiltering_1sec_vtkfiltering" kindref="member">Visualization Toolkit Filtering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkEmptyCell is a concrete implementation of vtkCell. It is used during processing to represented a deleted element.</para><para>To create an instance of class vtkEmptyCell, simply invoke its constructor as follows <verbatim>  obj = vtkEmptyCell
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkEmptyCell has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkEmptyCell class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkEmptyCell = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkEmptyCell = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCellType ()</computeroutput> - See the vtkCell API for descriptions of these methods.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCellDimension ()</computeroutput> - See the vtkCell API for descriptions of these methods.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfEdges ()</computeroutput> - See the vtkCell API for descriptions of these methods.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetNumberOfFaces ()</computeroutput> - See the vtkCell API for descriptions of these methods.  </para></listitem>
<listitem>
<para><computeroutput>vtkCell = obj.GetEdge (int )</computeroutput> - See the vtkCell API for descriptions of these methods.  </para></listitem>
<listitem>
<para><computeroutput>vtkCell = obj.GetFace (int )</computeroutput> - See the vtkCell API for descriptions of these methods.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.CellBoundary (int subId, double pcoords[3], vtkIdList pts)</computeroutput> - See the vtkCell API for descriptions of these methods.  </para></listitem>
<listitem>
<para><computeroutput>obj.Contour (double value, vtkDataArray cellScalars, vtkIncrementalPointLocator locator, vtkCellArray verts1, vtkCellArray lines, vtkCellArray verts2, vtkPointData inPd, vtkPointData outPd, vtkCellData inCd, vtkIdType cellId, vtkCellData outCd)</computeroutput> - See the vtkCell API for descriptions of these methods.  </para></listitem>
<listitem>
<para><computeroutput>obj.Clip (double value, vtkDataArray cellScalars, vtkIncrementalPointLocator locator, vtkCellArray pts, vtkPointData inPd, vtkPointData outPd, vtkCellData inCd, vtkIdType cellId, vtkCellData outCd, int insideOut)</computeroutput> - See the vtkCell API for descriptions of these methods.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.Triangulate (int index, vtkIdList ptIds, vtkPoints pts)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Derivatives (int subId, double pcoords[3], double values, int dim, double derivs)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.InterpolateFunctions (double pcoords[3], double weights)</computeroutput> - Compute the interpolation functions/derivatives (aka shape functions/derivatives)  </para></listitem>
<listitem>
<para><computeroutput>obj.InterpolateDerivs (double pcoords[3], double derivs)</computeroutput> - Compute the interpolation functions/derivatives (aka shape functions/derivatives)  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
