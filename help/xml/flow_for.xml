<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="flow_for" kind="page">
    <compoundname>flow_for</compoundname>
    <title>FOR For Loop</title>
    <detaileddescription>
<para>Section: <ref refid="sec_flow_1sec_flow" kindref="member">Flow Control</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The <computeroutput>for</computeroutput> loop executes a set of statements with an index variable looping through each element in a vector. The syntax of a <computeroutput>for</computeroutput> loop is one of the following: <verbatim>  for (variable=expression)
     statements
  end
</verbatim> Alternately, the parenthesis can be eliminated <verbatim>  for variable=expression
     statements
  end
</verbatim> or alternately, the index variable can be pre-initialized with the vector of values it is going to take: <verbatim>  for variable
     statements
  end
</verbatim> The third form is essentially equivalent to <computeroutput>for variable=variable</computeroutput>, where <computeroutput>variable</computeroutput> is both the index variable and the set of values over which the for loop executes. See the examples section for an example of this form of the <computeroutput>for</computeroutput> loop. </para></sect1>
<sect1 id="variables_matrix_1Examples">
<title>Examples</title>
<para>Here we write <computeroutput>for</computeroutput> loops to add all the integers from <computeroutput>1</computeroutput> to <computeroutput>100</computeroutput>. We will use all three forms of the <computeroutput>for</computeroutput> statement.</para><para><verbatim>--&gt; accum = 0;
--&gt; for (i=1:100); accum = accum + i; end
--&gt; accum

ans = 
 5050 
</verbatim></para><para>The second form is functionally the same, without the extra parenthesis</para><para><verbatim>--&gt; accum = 0;
--&gt; for i=1:100; accum = accum + i; end
--&gt; accum

ans = 
 5050 
</verbatim></para><para>In the third example, we pre-initialize the loop variable with the values it is to take</para><para><verbatim>
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
