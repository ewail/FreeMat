<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtktransformpolydatafilter" kind="page">
    <compoundname>vtkgraphics_vtktransformpolydatafilter</compoundname>
    <title>vtkTransformPolyDataFilter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkTransformPolyDataFilter is a filter to transform point coordinates and associated point and cell normals and vectors. Other point and cell data is passed through the filter unchanged. This filter is specialized for polygonal data. See vtkTransformFilter for more general data.</para><para>An alternative method of transformation is to use vtkActor&apos;s methods to scale, rotate, and translate objects. The difference between the two methods is that vtkActor&apos;s transformation simply effects where objects are rendered (via the graphics pipeline), whereas vtkTransformPolyDataFilter actually modifies point coordinates in the visualization pipeline. This is necessary for some objects (e.g., vtkProbeFilter) that require point coordinates as input.</para><para>To create an instance of class vtkTransformPolyDataFilter, simply invoke its constructor as follows <verbatim>  obj = vtkTransformPolyDataFilter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkTransformPolyDataFilter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkTransformPolyDataFilter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkTransformPolyDataFilter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkTransformPolyDataFilter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>long = obj.GetMTime ()</computeroutput> - Return the MTime also considering the transform.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetTransform (vtkAbstractTransform )</computeroutput> - Specify the transform object used to transform points.  </para></listitem>
<listitem>
<para><computeroutput>vtkAbstractTransform = obj.GetTransform ()</computeroutput> - Specify the transform object used to transform points.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
