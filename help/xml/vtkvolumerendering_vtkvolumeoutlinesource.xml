<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkvolumerendering_vtkvolumeoutlinesource" kind="page">
    <compoundname>vtkvolumerendering_vtkvolumeoutlinesource</compoundname>
    <title>vtkVolumeOutlineSource</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkvolumerendering_1sec_vtkvolumerendering" kindref="member">Visualization Toolkit Volume Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkVolumeOutlineSource generates a wireframe outline that corresponds to the cropping region of a vtkVolumeMapper. It requires a vtkVolumeMapper as input. The GenerateFaces option turns on the solid faces of the outline, and the GenerateScalars option generates color scalars. When GenerateScalars is on, it is possible to set an &quot;ActivePlaneId&quot; value in the range [0..6] to highlight one of the six cropping planes. .SECTION Thanks Thanks to David Gobbi for contributing this class to VTK.</para><para>To create an instance of class vtkVolumeOutlineSource, simply invoke its constructor as follows <verbatim>  obj = vtkVolumeOutlineSource
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkVolumeOutlineSource has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkVolumeOutlineSource class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkVolumeOutlineSource = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkVolumeOutlineSource = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetVolumeMapper (vtkVolumeMapper mapper)</computeroutput> - Set the mapper that has the cropping region that the outline will be generated for. The mapper must have an input, because the bounds of the data must be computed in order to generate the outline.  </para></listitem>
<listitem>
<para><computeroutput>vtkVolumeMapper = obj.GetVolumeMapper ()</computeroutput> - Set the mapper that has the cropping region that the outline will be generated for. The mapper must have an input, because the bounds of the data must be computed in order to generate the outline.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGenerateScalars (int )</computeroutput> - Set whether to generate color scalars for the output. By default, the output has no scalars and the color must be set in the property of the actor.  </para></listitem>
<listitem>
<para><computeroutput>obj.GenerateScalarsOn ()</computeroutput> - Set whether to generate color scalars for the output. By default, the output has no scalars and the color must be set in the property of the actor.  </para></listitem>
<listitem>
<para><computeroutput>obj.GenerateScalarsOff ()</computeroutput> - Set whether to generate color scalars for the output. By default, the output has no scalars and the color must be set in the property of the actor.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetGenerateScalars ()</computeroutput> - Set whether to generate color scalars for the output. By default, the output has no scalars and the color must be set in the property of the actor.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetGenerateFaces (int )</computeroutput> - Set whether to generate polygonal faces for the output. By default, only lines are generated. The faces will form a closed, watertight surface.  </para></listitem>
<listitem>
<para><computeroutput>obj.GenerateFacesOn ()</computeroutput> - Set whether to generate polygonal faces for the output. By default, only lines are generated. The faces will form a closed, watertight surface.  </para></listitem>
<listitem>
<para><computeroutput>obj.GenerateFacesOff ()</computeroutput> - Set whether to generate polygonal faces for the output. By default, only lines are generated. The faces will form a closed, watertight surface.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetGenerateFaces ()</computeroutput> - Set whether to generate polygonal faces for the output. By default, only lines are generated. The faces will form a closed, watertight surface.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetColor (double , double , double )</computeroutput> - Set the color of the outline. This has no effect unless GenerateScalars is On. The default color is red.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetColor (double a[3])</computeroutput> - Set the color of the outline. This has no effect unless GenerateScalars is On. The default color is red.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetColor ()</computeroutput> - Set the color of the outline. This has no effect unless GenerateScalars is On. The default color is red.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetActivePlaneId (int )</computeroutput> - Set the active plane, e.g. to display which plane is currently being modified by an interaction. Set this to -1 if there is no active plane. The default value is -1.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetActivePlaneId ()</computeroutput> - Set the active plane, e.g. to display which plane is currently being modified by an interaction. Set this to -1 if there is no active plane. The default value is -1.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetActivePlaneColor (double , double , double )</computeroutput> - Set the color of the active cropping plane. This has no effect unless GenerateScalars is On and ActivePlaneId is non-negative. The default color is yellow.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetActivePlaneColor (double a[3])</computeroutput> - Set the color of the active cropping plane. This has no effect unless GenerateScalars is On and ActivePlaneId is non-negative. The default color is yellow.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetActivePlaneColor ()</computeroutput> - Set the color of the active cropping plane. This has no effect unless GenerateScalars is On and ActivePlaneId is non-negative. The default color is yellow.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
