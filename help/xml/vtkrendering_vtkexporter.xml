<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkrendering_vtkexporter" kind="page">
    <compoundname>vtkrendering_vtkexporter</compoundname>
    <title>vtkExporter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkrendering_1sec_vtkrendering" kindref="member">Visualization Toolkit Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkExporter is an abstract class that exports a scene to a file. It is very similar to vtkWriter except that a writer only writes out the geometric and topological data for an object, where an exporter can write out material properties, lighting, camera parameters etc. The concrete subclasses of this class may not write out all of this information. For example vtkOBJExporter writes out Wavefront obj files which do not include support for camera parameters.</para><para>vtkExporter provides the convenience methods StartWrite() and EndWrite(). These methods are executed before and after execution of the Write() method. You can also specify arguments to these methods. This class defines SetInput and GetInput methods which take or return a vtkRenderWindow.</para><para>To create an instance of class vtkExporter, simply invoke its constructor as follows <verbatim>  obj = vtkExporter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkExporter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkExporter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkExporter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkExporter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Write ()</computeroutput> - Write data to output. Method executes subclasses WriteData() method, as well as StartWrite() and EndWrite() methods.  </para></listitem>
<listitem>
<para><computeroutput>obj.Update ()</computeroutput> - Convenient alias for Write() method.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetRenderWindow (vtkRenderWindow )</computeroutput> - Set/Get the rendering window that contains the scene to be written.  </para></listitem>
<listitem>
<para><computeroutput>vtkRenderWindow = obj.GetRenderWindow ()</computeroutput> - Set/Get the rendering window that contains the scene to be written.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInput (vtkRenderWindow renWin)</computeroutput> - These methods are provided for backward compatibility. Will disappear soon.  </para></listitem>
<listitem>
<para><computeroutput>vtkRenderWindow = obj.GetInput ()</computeroutput> - These methods are provided for backward compatibility. Will disappear soon.  </para></listitem>
<listitem>
<para><computeroutput>long = obj.GetMTime ()</computeroutput> - Returns the MTime also considering the RenderWindow.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
