<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkinfovis_vtkadjacencymatrixtoedgetable" kind="page">
    <compoundname>vtkinfovis_vtkadjacencymatrixtoedgetable</compoundname>
    <title>vtkAdjacencyMatrixToEdgeTable</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkinfovis_1sec_vtkinfovis" kindref="member">Visualization Toolkit Infovis Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Treats a dense 2-way array of doubles as an adacency matrix and converts it into a vtkTable suitable for use as an edge table with vtkTableToGraph.</para><para>To create an instance of class vtkAdjacencyMatrixToEdgeTable, simply invoke its constructor as follows <verbatim>  obj = vtkAdjacencyMatrixToEdgeTable
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkAdjacencyMatrixToEdgeTable has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkAdjacencyMatrixToEdgeTable class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkAdjacencyMatrixToEdgeTable = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkAdjacencyMatrixToEdgeTable = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetSourceDimension ()</computeroutput> - Specifies whether rows or columns become the &quot;source&quot; in the output edge table. 0 = rows, 1 = columns. Default: 0  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSourceDimension (vtkIdType )</computeroutput> - Specifies whether rows or columns become the &quot;source&quot; in the output edge table. 0 = rows, 1 = columns. Default: 0  </para></listitem>
<listitem>
<para><computeroutput>string = obj.GetValueArrayName ()</computeroutput> - Controls the name of the output table column that contains edge weights. Default: &quot;value&quot;  </para></listitem>
<listitem>
<para><computeroutput>obj.SetValueArrayName (string )</computeroutput> - Controls the name of the output table column that contains edge weights. Default: &quot;value&quot;  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetMinimumCount ()</computeroutput> - Specifies the minimum number of adjacent edges to include for each source vertex. Default: 0  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMinimumCount (vtkIdType )</computeroutput> - Specifies the minimum number of adjacent edges to include for each source vertex. Default: 0  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetMinimumThreshold ()</computeroutput> - Specifies a minimum threshold that an edge weight must exceed to be included in the output. Default: 0.5  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMinimumThreshold (double )</computeroutput> - Specifies a minimum threshold that an edge weight must exceed to be included in the output. Default: 0.5  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
