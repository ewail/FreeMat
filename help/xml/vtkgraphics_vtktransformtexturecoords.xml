<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtktransformtexturecoords" kind="page">
    <compoundname>vtkgraphics_vtktransformtexturecoords</compoundname>
    <title>vtkTransformTextureCoords</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkTransformTextureCoords is a filter that operates on texture coordinates. It ingests any type of dataset, and outputs a dataset of the same type. The filter lets you scale, translate, and rotate texture coordinates. For example, by using the the Scale ivar, you can shift texture coordinates that range from (0-&gt;1) to range from (0-&gt;10) (useful for repeated patterns).</para><para>The filter operates on texture coordinates of dimension 1-&gt;3. The texture coordinates are referred to as r-s-t. If the texture map is two dimensional, the t-coordinate (and operations on the t-coordinate) are ignored.</para><para>To create an instance of class vtkTransformTextureCoords, simply invoke its constructor as follows <verbatim>  obj = vtkTransformTextureCoords
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkTransformTextureCoords has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkTransformTextureCoords class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkTransformTextureCoords = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkTransformTextureCoords = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPosition (double , double , double )</computeroutput> - Set/Get the position of the texture map. Setting the position translates the texture map by the amount specified.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPosition (double a[3])</computeroutput> - Set/Get the position of the texture map. Setting the position translates the texture map by the amount specified.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetPosition ()</computeroutput> - Set/Get the position of the texture map. Setting the position translates the texture map by the amount specified.  </para></listitem>
<listitem>
<para><computeroutput>obj.AddPosition (double deltaR, double deltaS, double deltaT)</computeroutput> - Incrementally change the position of the texture map (i.e., does a translate or shift of the texture coordinates).  </para></listitem>
<listitem>
<para><computeroutput>obj.AddPosition (double deltaPosition[3])</computeroutput> - Incrementally change the position of the texture map (i.e., does a translate or shift of the texture coordinates).  </para></listitem>
<listitem>
<para><computeroutput>obj.SetScale (double , double , double )</computeroutput> - Set/Get the scale of the texture map. Scaling in performed independently on the r, s and t axes.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetScale (double a[3])</computeroutput> - Set/Get the scale of the texture map. Scaling in performed independently on the r, s and t axes.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetScale ()</computeroutput> - Set/Get the scale of the texture map. Scaling in performed independently on the r, s and t axes.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOrigin (double , double , double )</computeroutput> - Set/Get the origin of the texture map. This is the point about which the texture map is flipped (e.g., rotated). Since a typical texture map ranges from (0,1) in the r-s-t coordinates, the default origin is set at (0.5,0.5,0.5).  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOrigin (double a[3])</computeroutput> - Set/Get the origin of the texture map. This is the point about which the texture map is flipped (e.g., rotated). Since a typical texture map ranges from (0,1) in the r-s-t coordinates, the default origin is set at (0.5,0.5,0.5).  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetOrigin ()</computeroutput> - Set/Get the origin of the texture map. This is the point about which the texture map is flipped (e.g., rotated). Since a typical texture map ranges from (0,1) in the r-s-t coordinates, the default origin is set at (0.5,0.5,0.5).  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFlipR (int )</computeroutput> - Boolean indicates whether the texture map should be flipped around the s-axis. Note that the flips occur around the texture origin.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetFlipR ()</computeroutput> - Boolean indicates whether the texture map should be flipped around the s-axis. Note that the flips occur around the texture origin.  </para></listitem>
<listitem>
<para><computeroutput>obj.FlipROn ()</computeroutput> - Boolean indicates whether the texture map should be flipped around the s-axis. Note that the flips occur around the texture origin.  </para></listitem>
<listitem>
<para><computeroutput>obj.FlipROff ()</computeroutput> - Boolean indicates whether the texture map should be flipped around the s-axis. Note that the flips occur around the texture origin.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFlipS (int )</computeroutput> - Boolean indicates whether the texture map should be flipped around the s-axis. Note that the flips occur around the texture origin.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetFlipS ()</computeroutput> - Boolean indicates whether the texture map should be flipped around the s-axis. Note that the flips occur around the texture origin.  </para></listitem>
<listitem>
<para><computeroutput>obj.FlipSOn ()</computeroutput> - Boolean indicates whether the texture map should be flipped around the s-axis. Note that the flips occur around the texture origin.  </para></listitem>
<listitem>
<para><computeroutput>obj.FlipSOff ()</computeroutput> - Boolean indicates whether the texture map should be flipped around the s-axis. Note that the flips occur around the texture origin.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetFlipT (int )</computeroutput> - Boolean indicates whether the texture map should be flipped around the t-axis. Note that the flips occur around the texture origin.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetFlipT ()</computeroutput> - Boolean indicates whether the texture map should be flipped around the t-axis. Note that the flips occur around the texture origin.  </para></listitem>
<listitem>
<para><computeroutput>obj.FlipTOn ()</computeroutput> - Boolean indicates whether the texture map should be flipped around the t-axis. Note that the flips occur around the texture origin.  </para></listitem>
<listitem>
<para><computeroutput>obj.FlipTOff ()</computeroutput> - Boolean indicates whether the texture map should be flipped around the t-axis. Note that the flips occur around the texture origin.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
