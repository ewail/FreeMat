<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkparallel_vtkxmlphierarchicalboxdatawriter" kind="page">
    <compoundname>vtkparallel_vtkxmlphierarchicalboxdatawriter</compoundname>
    <title>vtkXMLPHierarchicalBoxDataWriter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkparallel_1sec_vtkparallel" kindref="member">Visualization Toolkit Parallel Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkXMLPCompositeDataWriter writes (in parallel or serially) the VTK XML multi-group, multi-block hierarchical and hierarchical box files. XML multi-group data files are meta-files that point to a list of serial VTK XML files.</para><para>To create an instance of class vtkXMLPHierarchicalBoxDataWriter, simply invoke its constructor as follows <verbatim>  obj = vtkXMLPHierarchicalBoxDataWriter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkXMLPHierarchicalBoxDataWriter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkXMLPHierarchicalBoxDataWriter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkXMLPHierarchicalBoxDataWriter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkXMLPHierarchicalBoxDataWriter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetController (vtkMultiProcessController )</computeroutput> - Controller used to communicate data type of blocks. By default, the global controller is used. If you want another controller to be used, set it with this. If no controller is set, only the local blocks will be written to the meta-file.  </para></listitem>
<listitem>
<para><computeroutput>vtkMultiProcessController = obj.GetController ()</computeroutput> - Controller used to communicate data type of blocks. By default, the global controller is used. If you want another controller to be used, set it with this. If no controller is set, only the local blocks will be written to the meta-file.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetWriteMetaFile (int flag)</computeroutput> - Set whether this instance will write the meta-file. WriteMetaFile is set to flag only on process 0 and all other processes have WriteMetaFile set to 0 by default.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
