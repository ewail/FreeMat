<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkrendering_vtkgpuinfo" kind="page">
    <compoundname>vtkrendering_vtkgpuinfo</compoundname>
    <title>vtkGPUInfo</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkrendering_1sec_vtkrendering" kindref="member">Visualization Toolkit Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkGPUInfo stores information about GPU Video RAM. An host can have several GPUs. The values are set by vtkGPUInfoList.</para><para>To create an instance of class vtkGPUInfo, simply invoke its constructor as follows <verbatim>  obj = vtkGPUInfo
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkGPUInfo has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkGPUInfo class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkGPUInfo = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkGPUInfo = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDedicatedVideoMemory (vtkIdType )</computeroutput> - Set/Get dedicated video memory in bytes. Initial value is 0. Usually the fastest one. If it is not null, it should be take into account first and DedicatedSystemMemory or SharedSystemMemory should be ignored.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetDedicatedVideoMemory ()</computeroutput> - Set/Get dedicated video memory in bytes. Initial value is 0. Usually the fastest one. If it is not null, it should be take into account first and DedicatedSystemMemory or SharedSystemMemory should be ignored.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetDedicatedSystemMemory (vtkIdType )</computeroutput> - Set/Get dedicated system memory in bytes. Initial value is 0. This is slow memory. If it is not null, this value should be taken into account only if there is no DedicatedVideoMemory and SharedSystemMemory should be ignored.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetDedicatedSystemMemory ()</computeroutput> - Set/Get dedicated system memory in bytes. Initial value is 0. This is slow memory. If it is not null, this value should be taken into account only if there is no DedicatedVideoMemory and SharedSystemMemory should be ignored.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetSharedSystemMemory (vtkIdType )</computeroutput> - Set/Get shared system memory in bytes. Initial value is 0. Slowest memory. This value should be taken into account only if there is neither DedicatedVideoMemory nor DedicatedSystemMemory.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetSharedSystemMemory ()</computeroutput> - Set/Get shared system memory in bytes. Initial value is 0. Slowest memory. This value should be taken into account only if there is neither DedicatedVideoMemory nor DedicatedSystemMemory.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
