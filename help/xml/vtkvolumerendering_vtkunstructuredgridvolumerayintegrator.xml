<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkvolumerendering_vtkunstructuredgridvolumerayintegrator" kind="page">
    <compoundname>vtkvolumerendering_vtkunstructuredgridvolumerayintegrator</compoundname>
    <title>vtkUnstructuredGridVolumeRayIntegrator</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkvolumerendering_1sec_vtkvolumerendering" kindref="member">Visualization Toolkit Volume Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkUnstructuredGridVolumeRayIntegrator is a superclass for ray integration functions that can be used within a vtkUnstructuredGridVolumeRayCastMapper.</para><para>To create an instance of class vtkUnstructuredGridVolumeRayIntegrator, simply invoke its constructor as follows <verbatim>  obj = vtkUnstructuredGridVolumeRayIntegrator
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkUnstructuredGridVolumeRayIntegrator has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkUnstructuredGridVolumeRayIntegrator class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkUnstructuredGridVolumeRayIntegrator = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkUnstructuredGridVolumeRayIntegrator = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Initialize (vtkVolume volume, vtkDataArray scalars)</computeroutput> - Set up the integrator with the given properties and scalars.  </para></listitem>
<listitem>
<para><computeroutput>obj.Integrate (vtkDoubleArray intersectionLengths, vtkDataArray nearIntersections, vtkDataArray farIntersections, float color[4])</computeroutput> - Given a set of intersections (defined by the three arrays), compute the peicewise integration of the array in front to back order. /c intersectionLengths holds the lengths of each peicewise segment. /c nearIntersections and /c farIntersections hold the scalar values at the front and back of each segment. /c color should contain the RGBA value of the volume in front of the segments passed in, and the result will be placed back into /c color.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
