<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkviews_vtkparallelcoordinateshistogramrepresentation" kind="page">
    <compoundname>vtkviews_vtkparallelcoordinateshistogramrepresentation</compoundname>
    <title>vtkParallelCoordinatesHistogramRepresentation</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkviews_1sec_vtkviews" kindref="member">Visualization Toolkit View Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>A parallel coordinates plot represents each variable in a multivariate data set as a separate axis. Individual samples of that data set are represented as a polyline that pass through each variable axis at positions that correspond to data values. This class can generate parallel coordinates plots identical to its superclass (vtkParallelCoordinatesRepresentation) and has the same interaction styles.</para><para>In addition to the standard parallel coordinates plot, this class also can draw a histogram summary of the parallel coordinates plot. Rather than draw every row in an input data set, first it computes a 2D histogram for all neighboring variable axes, then it draws bar (thickness corresponds to bin size) for each bin the histogram with opacity weighted by the number of rows contained in the bin. The result is essentially a density map.</para><para>Because this emphasizes dense regions over sparse outliers, this class also uses a vtkComputeHistogram2DOutliers instance to identify outlier table rows and draws those as standard parallel coordinates lines.</para><para>To create an instance of class vtkParallelCoordinatesHistogramRepresentation, simply invoke its constructor as follows <verbatim>  obj = vtkParallelCoordinatesHistogramRepresentation
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkParallelCoordinatesHistogramRepresentation has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkParallelCoordinatesHistogramRepresentation class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkParallelCoordinatesHistogramRepresentation = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkParallelCoordinatesHistogramRepresentation = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.ApplyViewTheme (vtkViewTheme theme)</computeroutput> - Apply the theme to this view.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetUseHistograms (int )</computeroutput> - Whether to use the histogram rendering mode or the superclass&apos;s line rendering mode  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetUseHistograms ()</computeroutput> - Whether to use the histogram rendering mode or the superclass&apos;s line rendering mode  </para></listitem>
<listitem>
<para><computeroutput>obj.UseHistogramsOn ()</computeroutput> - Whether to use the histogram rendering mode or the superclass&apos;s line rendering mode  </para></listitem>
<listitem>
<para><computeroutput>obj.UseHistogramsOff ()</computeroutput> - Whether to use the histogram rendering mode or the superclass&apos;s line rendering mode  </para></listitem>
<listitem>
<para><computeroutput>obj.SetShowOutliers (int )</computeroutput> - Whether to compute and show outlier lines  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetShowOutliers ()</computeroutput> - Whether to compute and show outlier lines  </para></listitem>
<listitem>
<para><computeroutput>obj.ShowOutliersOn ()</computeroutput> - Whether to compute and show outlier lines  </para></listitem>
<listitem>
<para><computeroutput>obj.ShowOutliersOff ()</computeroutput> - Whether to compute and show outlier lines  </para></listitem>
<listitem>
<para><computeroutput>obj.SetHistogramLookupTableRange (double , double )</computeroutput> - Control over the range of the lookup table used to draw the histogram quads.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetHistogramLookupTableRange (double a[2])</computeroutput> - Control over the range of the lookup table used to draw the histogram quads.  </para></listitem>
<listitem>
<para><computeroutput>double = obj. GetHistogramLookupTableRange ()</computeroutput> - Control over the range of the lookup table used to draw the histogram quads.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPreferredNumberOfOutliers (int )</computeroutput> - Target maximum number of outliers to be drawn, although not guaranteed.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetPreferredNumberOfOutliers ()</computeroutput> - Target maximum number of outliers to be drawn, although not guaranteed.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SwapAxisPositions (int position1, int position2)</computeroutput> - Calls superclass swap, and assures that only histograms affected by the swap get recomputed.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.SetRangeAtPosition (int position, double range[2])</computeroutput> - Calls the superclass method, and assures that only the two histograms affect by this call get recomputed.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
