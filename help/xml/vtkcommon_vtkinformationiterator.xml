<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkcommon_vtkinformationiterator" kind="page">
    <compoundname>vtkcommon_vtkinformationiterator</compoundname>
    <title>vtkInformationIterator</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkcommon_1sec_vtkcommon" kindref="member">Visualization Toolkit Common Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkInformationIterator can be used to iterate over the keys of an information object. The corresponding values can then be directly obtained from the information object using the keys.</para><para>To create an instance of class vtkInformationIterator, simply invoke its constructor as follows <verbatim>  obj = vtkInformationIterator
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkInformationIterator has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkInformationIterator class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkInformationIterator = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkInformationIterator = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInformation (vtkInformation )</computeroutput> - Set/Get the information to iterator over.  </para></listitem>
<listitem>
<para><computeroutput>vtkInformation = obj.GetInformation ()</computeroutput> - Set/Get the information to iterator over.  </para></listitem>
<listitem>
<para><computeroutput>obj.InitTraversal ()</computeroutput> - Move the iterator to the beginning of the collection.  </para></listitem>
<listitem>
<para><computeroutput>obj.GoToFirstItem ()</computeroutput> - Move the iterator to the beginning of the collection.  </para></listitem>
<listitem>
<para><computeroutput>obj.GoToNextItem ()</computeroutput> - Move the iterator to the next item in the collection.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsDoneWithTraversal ()</computeroutput> - Test whether the iterator is currently pointing to a valid item. Returns 1 for yes, 0 for no.  </para></listitem>
<listitem>
<para><computeroutput>vtkInformationKey = obj.GetCurrentKey ()</computeroutput> - Get the current item. Valid only when IsDoneWithTraversal() returns 1.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
