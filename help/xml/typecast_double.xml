<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="typecast_double" kind="page">
    <compoundname>typecast_double</compoundname>
    <title>DOUBLE Convert to 64-bit Floating Point</title>
    <detaileddescription>
<para>Section: <ref refid="sec_typecast_1sec_typecast" kindref="member">Type Conversion Functions</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>Converts the argument to a 64-bit floating point number. The syntax for its use is <verbatim>   y = double(x)
</verbatim> where <computeroutput>x</computeroutput> is an <computeroutput>n</computeroutput>-dimensional numerical array. Conversion follows the saturation rules. Note that both <computeroutput>NaN</computeroutput> and <computeroutput>Inf</computeroutput> are both preserved under type conversion. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>The following piece of code demonstrates several uses of <computeroutput>double</computeroutput>. First, we convert from an integer (the argument is an integer because no decimal is present):</para><para><verbatim>--&gt; double(200)

ans = 
 200 
</verbatim></para><para>In the next example, a single precision argument is passed in (the presence of the <computeroutput>f</computeroutput> suffix implies single precision).</para><para><verbatim>--&gt; double(400.0f)

ans = 
 400 
</verbatim></para><para>In the next example, a complex argument is passed in.</para><para><verbatim>--&gt; double(3.0+4.0*i)

ans = 
   3.0000 +  4.0000i 
</verbatim></para><para>In the next example, a string argument is passed in. The string argument is converted into an integer array corresponding to the ASCII values of each character.</para><para><verbatim>--&gt; double(&apos;helo&apos;)

ans = 
 104 101 108 111 
</verbatim></para><para>In the last example, a cell-array is passed in. For cell-arrays and structure arrays, the result is an error.</para><para><verbatim>--&gt; double({4})
Error: Cannot perform type conversions with this type
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
