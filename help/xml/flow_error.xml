<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="flow_error" kind="page">
    <compoundname>flow_error</compoundname>
    <title>ERROR Causes an Error Condition Raised</title>
    <detaileddescription>
<para>Section: <ref refid="sec_flow_1sec_flow" kindref="member">Flow Control</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>The <computeroutput>error</computeroutput> function causes an error condition (exception to be raised). The general syntax for its use is <verbatim>   error(s),
</verbatim> where <computeroutput>s</computeroutput> is the string message describing the error. The <computeroutput>error</computeroutput> function is usually used in conjunction with <computeroutput>try</computeroutput> and <computeroutput>catch</computeroutput> to provide error handling. If the string <computeroutput>s</computeroutput>, then (to conform to the MATLAB API), <computeroutput>error</computeroutput> does nothing. </para></sect1>
<sect1 id="variables_struct_1Example">
<title>Example</title>
<para>Here is a simple example of an <computeroutput>error</computeroutput> being issued by a function <computeroutput>evenoddtest</computeroutput>:</para><para><verbatim>     evenoddtest.m
</verbatim></para><para><verbatim>function evenoddtest(n)
  if (n==0)
    error(&apos;zero is neither even nor odd&apos;);
  elseif ( n ~= fix(n) )
    error(&apos;expecting integer argument&apos;);
  end;
  if (n==int32(n/2)*2)
    printf(&apos;%d is even\n&apos;,n);
  else
    printf(&apos;%d is odd\n&apos;,n);
  end
</verbatim></para><para>The normal command line prompt <computeroutput><ndash/>&gt;</computeroutput> simply prints the error that occured.</para><para><verbatim>--&gt; evenoddtest(4)
4 is even
--&gt; evenoddtest(5)
5 is odd
--&gt; evenoddtest(0)
In /home/sbasu/Devel/FreeMat4/doc/fragments/evenoddtest.m(evenoddtest) at line 3
    In scratch() at line 1
    In base(base)
    In base()
    In global()
Error: zero is neither even nor odd
--&gt; evenoddtest(pi)
In /home/sbasu/Devel/FreeMat4/doc/fragments/evenoddtest.m(evenoddtest) at line 5
    In scratch() at line 1
    In base(base)
    In base()
    In global()
Error: expecting integer argument
</verbatim> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
