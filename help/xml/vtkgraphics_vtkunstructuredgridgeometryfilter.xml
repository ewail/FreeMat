<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtkunstructuredgridgeometryfilter" kind="page">
    <compoundname>vtkgraphics_vtkunstructuredgridgeometryfilter</compoundname>
    <title>vtkUnstructuredGridGeometryFilter</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkUnstructuredGridGeometryFilter is a filter that extracts geometry (and associated data) from an unstructured grid. It differs from vtkGeometryFilter by not tessellating higher order faces: 2D faces of quadratic 3D cells will be quadratic. A quadratic edge is extracted as a quadratic edge. For that purpose, the output of this filter is an unstructured grid, not a polydata. Also, the face of a voxel is a pixel, not a quad. Geometry is obtained as follows: all 0D, 1D, and 2D cells are extracted. All 2D faces that are used by only one 3D cell (i.e., boundary faces) are extracted. It also is possible to specify conditions on point ids, cell ids, and on bounding box (referred to as &quot;Extent&quot;) to control the extraction process.</para><para>To create an instance of class vtkUnstructuredGridGeometryFilter, simply invoke its constructor as follows <verbatim>  obj = vtkUnstructuredGridGeometryFilter
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkUnstructuredGridGeometryFilter has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkUnstructuredGridGeometryFilter class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkUnstructuredGridGeometryFilter = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkUnstructuredGridGeometryFilter = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPointClipping (int )</computeroutput> - Turn on/off selection of geometry by point id.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetPointClipping ()</computeroutput> - Turn on/off selection of geometry by point id.  </para></listitem>
<listitem>
<para><computeroutput>obj.PointClippingOn ()</computeroutput> - Turn on/off selection of geometry by point id.  </para></listitem>
<listitem>
<para><computeroutput>obj.PointClippingOff ()</computeroutput> - Turn on/off selection of geometry by point id.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCellClipping (int )</computeroutput> - Turn on/off selection of geometry by cell id.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCellClipping ()</computeroutput> - Turn on/off selection of geometry by cell id.  </para></listitem>
<listitem>
<para><computeroutput>obj.CellClippingOn ()</computeroutput> - Turn on/off selection of geometry by cell id.  </para></listitem>
<listitem>
<para><computeroutput>obj.CellClippingOff ()</computeroutput> - Turn on/off selection of geometry by cell id.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtentClipping (int )</computeroutput> - Turn on/off selection of geometry via bounding box.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetExtentClipping ()</computeroutput> - Turn on/off selection of geometry via bounding box.  </para></listitem>
<listitem>
<para><computeroutput>obj.ExtentClippingOn ()</computeroutput> - Turn on/off selection of geometry via bounding box.  </para></listitem>
<listitem>
<para><computeroutput>obj.ExtentClippingOff ()</computeroutput> - Turn on/off selection of geometry via bounding box.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPointMinimum (vtkIdType )</computeroutput> - Specify the minimum point id for point id selection.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetPointMinimumMinValue ()</computeroutput> - Specify the minimum point id for point id selection.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetPointMinimumMaxValue ()</computeroutput> - Specify the minimum point id for point id selection.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetPointMinimum ()</computeroutput> - Specify the minimum point id for point id selection.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetPointMaximum (vtkIdType )</computeroutput> - Specify the maximum point id for point id selection.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetPointMaximumMinValue ()</computeroutput> - Specify the maximum point id for point id selection.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetPointMaximumMaxValue ()</computeroutput> - Specify the maximum point id for point id selection.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetPointMaximum ()</computeroutput> - Specify the maximum point id for point id selection.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCellMinimum (vtkIdType )</computeroutput> - Specify the minimum cell id for point id selection.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetCellMinimumMinValue ()</computeroutput> - Specify the minimum cell id for point id selection.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetCellMinimumMaxValue ()</computeroutput> - Specify the minimum cell id for point id selection.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetCellMinimum ()</computeroutput> - Specify the minimum cell id for point id selection.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCellMaximum (vtkIdType )</computeroutput> - Specify the maximum cell id for point id selection.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetCellMaximumMinValue ()</computeroutput> - Specify the maximum cell id for point id selection.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetCellMaximumMaxValue ()</computeroutput> - Specify the maximum cell id for point id selection.  </para></listitem>
<listitem>
<para><computeroutput>vtkIdType = obj.GetCellMaximum ()</computeroutput> - Specify the maximum cell id for point id selection.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtent (double xMin, double xMax, double yMin, double yMax, double zMin, double zMax)</computeroutput> - Specify a (xmin,xmax, ymin,ymax, zmin,zmax) bounding box to clip data.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetExtent (double extent[6])</computeroutput> - Set / get a (xmin,xmax, ymin,ymax, zmin,zmax) bounding box to clip data.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetMerging (int )</computeroutput> - Turn on/off merging of coincident points. Note that is merging is on, points with different point attributes (e.g., normals) are merged, which may cause rendering artifacts.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetMerging ()</computeroutput> - Turn on/off merging of coincident points. Note that is merging is on, points with different point attributes (e.g., normals) are merged, which may cause rendering artifacts.  </para></listitem>
<listitem>
<para><computeroutput>obj.MergingOn ()</computeroutput> - Turn on/off merging of coincident points. Note that is merging is on, points with different point attributes (e.g., normals) are merged, which may cause rendering artifacts.  </para></listitem>
<listitem>
<para><computeroutput>obj.MergingOff ()</computeroutput> - Turn on/off merging of coincident points. Note that is merging is on, points with different point attributes (e.g., normals) are merged, which may cause rendering artifacts.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetLocator (vtkIncrementalPointLocator locator)</computeroutput> - Set / get a spatial locator for merging points. By default an instance of vtkMergePoints is used.  </para></listitem>
<listitem>
<para><computeroutput>vtkIncrementalPointLocator = obj.GetLocator ()</computeroutput> - Set / get a spatial locator for merging points. By default an instance of vtkMergePoints is used.  </para></listitem>
<listitem>
<para><computeroutput>obj.CreateDefaultLocator ()</computeroutput> - Create default locator. Used to create one when none is specified.  </para></listitem>
<listitem>
<para><computeroutput>long = obj.GetMTime ()</computeroutput> - Return the MTime also considering the locator.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
