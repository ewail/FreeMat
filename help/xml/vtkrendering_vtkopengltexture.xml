<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkrendering_vtkopengltexture" kind="page">
    <compoundname>vtkrendering_vtkopengltexture</compoundname>
    <title>vtkOpenGLTexture</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkrendering_1sec_vtkrendering" kindref="member">Visualization Toolkit Rendering Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkOpenGLTexture is a concrete implementation of the abstract class vtkTexture. vtkOpenGLTexture interfaces to the OpenGL rendering library.</para><para>To create an instance of class vtkOpenGLTexture, simply invoke its constructor as follows <verbatim>  obj = vtkOpenGLTexture
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkOpenGLTexture has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkOpenGLTexture class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkOpenGLTexture = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkOpenGLTexture = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.Load (vtkRenderer ren)</computeroutput> - Implement base class method.  </para></listitem>
<listitem>
<para><computeroutput>obj.PostRender (vtkRenderer ren)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.ReleaseGraphicsResources (vtkWindow )</computeroutput> - Release any graphics resources that are being consumed by this texture. The parameter window could be used to determine which graphic resources to release. Using the same texture object in multiple render windows is NOT currently supported.  </para></listitem>
<listitem>
<para><computeroutput>long = obj.GetIndex ()</computeroutput> - Get the openGL texture name to which this texture is bound. This is available only if GL version &gt;= 1.1  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
