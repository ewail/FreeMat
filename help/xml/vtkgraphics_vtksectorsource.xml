<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.1">
  <compounddef id="vtkgraphics_vtksectorsource" kind="page">
    <compoundname>vtkgraphics_vtksectorsource</compoundname>
    <title>vtkSectorSource</title>
    <detaileddescription>
<para>Section: <ref refid="sec_vtkgraphics_1sec_vtkgraphics" kindref="member">Visualization Toolkit Graphics Classes</ref> </para><sect1 id="vtkwidgets_vtkxyplotwidget_1Usage">
<title>Usage</title>
<para>vtkSectorSource creates a sector of a polygonal disk. The disk has zero height. The user can specify the inner and outer radius of the disk, the z-coordinate, and the radial and circumferential resolution of the polygonal representation.</para><para>To create an instance of class vtkSectorSource, simply invoke its constructor as follows <verbatim>  obj = vtkSectorSource
</verbatim> </para></sect1>
<sect1 id="vtkwidgets_vtkxyplotwidget_1Methods">
<title>Methods</title>
<para>The class vtkSectorSource has several methods that can be used. They are listed below. Note that the documentation is translated automatically from the VTK sources, and may not be completely intelligible. When in doubt, consult the VTK website. In the methods listed below, <computeroutput>obj</computeroutput> is an instance of the vtkSectorSource class. <itemizedlist>
<listitem>
<para><computeroutput>string = obj.GetClassName ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>int = obj.IsA (string name)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkSectorSource = obj.NewInstance ()</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>vtkSectorSource = obj.SafeDownCast (vtkObject o)</computeroutput>  </para></listitem>
<listitem>
<para><computeroutput>obj.SetInnerRadius (double )</computeroutput> - Specify inner radius of the sector.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetInnerRadiusMinValue ()</computeroutput> - Specify inner radius of the sector.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetInnerRadiusMaxValue ()</computeroutput> - Specify inner radius of the sector.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetInnerRadius ()</computeroutput> - Specify inner radius of the sector.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetOuterRadius (double )</computeroutput> - Specify outer radius of the sector.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetOuterRadiusMinValue ()</computeroutput> - Specify outer radius of the sector.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetOuterRadiusMaxValue ()</computeroutput> - Specify outer radius of the sector.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetOuterRadius ()</computeroutput> - Specify outer radius of the sector.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetZCoord (double )</computeroutput> - Specify the z coordinate of the sector.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetZCoordMinValue ()</computeroutput> - Specify the z coordinate of the sector.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetZCoordMaxValue ()</computeroutput> - Specify the z coordinate of the sector.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetZCoord ()</computeroutput> - Specify the z coordinate of the sector.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetRadialResolution (int )</computeroutput> - Set the number of points in radius direction.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetRadialResolutionMinValue ()</computeroutput> - Set the number of points in radius direction.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetRadialResolutionMaxValue ()</computeroutput> - Set the number of points in radius direction.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetRadialResolution ()</computeroutput> - Set the number of points in radius direction.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetCircumferentialResolution (int )</computeroutput> - Set the number of points in circumferential direction.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCircumferentialResolutionMinValue ()</computeroutput> - Set the number of points in circumferential direction.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCircumferentialResolutionMaxValue ()</computeroutput> - Set the number of points in circumferential direction.  </para></listitem>
<listitem>
<para><computeroutput>int = obj.GetCircumferentialResolution ()</computeroutput> - Set the number of points in circumferential direction.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetStartAngle (double )</computeroutput> - Set the start angle of the sector.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetStartAngleMinValue ()</computeroutput> - Set the start angle of the sector.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetStartAngleMaxValue ()</computeroutput> - Set the start angle of the sector.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetStartAngle ()</computeroutput> - Set the start angle of the sector.  </para></listitem>
<listitem>
<para><computeroutput>obj.SetEndAngle (double )</computeroutput> - Set the end angle of the sector.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetEndAngleMinValue ()</computeroutput> - Set the end angle of the sector.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetEndAngleMaxValue ()</computeroutput> - Set the end angle of the sector.  </para></listitem>
<listitem>
<para><computeroutput>double = obj.GetEndAngle ()</computeroutput> - Set the end angle of the sector.  </para></listitem>
</itemizedlist>
</para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>
